#include "MicroBit.h"
#include "DataStream.h"
#include "MemorySource.h"
#include "CodalUtil.h"
#include "nrf.h"
#include "NRF52PWM.h"
#include "StreamNormalizer.h"
#include "SerialStreamer.h"
#include "Synthesizer.h"
#include "SoundEmojiSynthesizer.h"
#include "SoundSynthesizerEffects.h"
#include "Tests.h"

//#define SPEAKER_TEST_DIFFERENTIAL

static const uint8_t square[] = {128};
static const uint8_t middleC[] = {255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
static const uint8_t middleD[] = {255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
static const uint8_t middleE[] = {255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
static const uint8_t hello[] = {
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 
    0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
    0x80, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 
    0x80, 0x80, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x80, 
    0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x7F, 0x80, 0x80, 0x7F, 
    0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 
    0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x80, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x7F, 
    0x80, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 
    0x80, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 
    0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x7F, 0x80, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x7F, 0x80, 0x80, 
    0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 
    0x7F, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 
    0x7F, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 
    0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 
    0x80, 0x80, 0x7F, 0x80, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
    0x80, 0x80, 0x7F, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
    0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 
    0x80, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 
    0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x80, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 
    0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 
    0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 
    0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x80, 
    0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x80, 0x7F, 0x7F, 0x80, 
    0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 
    0x7F, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x80, 
    0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 
    0x80, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 
    0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 
    0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 
    0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 
    0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 
    0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x80, 0x7F, 0x80, 0x80, 0x80, 
    0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 
    0x80, 0x80, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 
    0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 
    0x7F, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 
    0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 
    0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
    0x80, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 
    0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 
    0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x7F, 
    0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 
    0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 
    0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 
    0x7E, 0x7F, 0x7F, 0x80, 0x80, 0x81, 0x80, 0x7F, 0x7E, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x81, 0x81, 
    0x80, 0x7F, 0x7E, 0x7E, 0x7E, 0x7E, 0x7F, 0x80, 0x81, 0x81, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x81, 0x81, 0x81, 0x7F, 0x7F, 0x7E, 0x7E, 0x7E, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x81, 0x80, 0x7F, 
    0x7F, 0x80, 0x81, 0x81, 0x81, 0x7F, 0x7F, 0x7F, 0x7F, 0x7E, 0x7E, 0x80, 0x81, 0x80, 0x80, 0x7F, 
    0x7E, 0x7E, 0x80, 0x81, 0x82, 0x82, 0x81, 0x80, 0x7F, 0x7E, 0x7C, 0x7B, 0x7D, 0x80, 0x82, 0x82, 
    0x81, 0x7F, 0x7D, 0x7D, 0x7E, 0x7F, 0x82, 0x84, 0x83, 0x81, 0x80, 0x7F, 0x7D, 0x7C, 0x7D, 0x7F, 
    0x80, 0x80, 0x80, 0x7F, 0x7E, 0x7F, 0x7F, 0x7E, 0x7F, 0x81, 0x83, 0x83, 0x81, 0x7E, 0x7C, 0x7E, 
    0x81, 0x82, 0x7F, 0x7E, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x81, 0x81, 0x81, 0x80, 0x7F, 
    0x7F, 0x7E, 0x7E, 0x7F, 0x80, 0x81, 0x81, 0x80, 0x7F, 0x7F, 0x7F, 0x7E, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x81, 0x81, 0x80, 0x7F, 0x80, 0x80, 0x7E, 0x7D, 0x7F, 0x82, 0x83, 0x80, 0x7E, 0x7E, 0x7F, 
    0x7F, 0x7E, 0x7E, 0x80, 0x82, 0x82, 0x82, 0x80, 0x7D, 0x7D, 0x7E, 0x7F, 0x7F, 0x80, 0x83, 0x84, 
    0x83, 0x7E, 0x7A, 0x79, 0x7C, 0x7E, 0x81, 0x85, 0x87, 0x83, 0x7D, 0x7B, 0x7D, 0x7E, 0x7E, 0x80, 
    0x84, 0x85, 0x82, 0x7E, 0x7D, 0x7C, 0x7C, 0x7D, 0x7F, 0x83, 0x86, 0x82, 0x7B, 0x7B, 0x82, 0x82, 
    0x7C, 0x7D, 0x82, 0x82, 0x81, 0x81, 0x7F, 0x7D, 0x80, 0x82, 0x7E, 0x7C, 0x7D, 0x7D, 0x80, 0x84, 
    0x82, 0x7C, 0x7D, 0x84, 0x84, 0x7E, 0x7C, 0x7F, 0x80, 0x80, 0x81, 0x80, 0x7F, 0x7F, 0x7C, 0x7C, 
    0x80, 0x82, 0x7F, 0x7F, 0x82, 0x81, 0x7E, 0x7D, 0x7E, 0x81, 0x84, 0x82, 0x80, 0x81, 0x81, 0x7D, 
    0x7B, 0x7E, 0x7F, 0x7F, 0x81, 0x82, 0x81, 0x7D, 0x79, 0x79, 0x81, 0x86, 0x87, 0x85, 0x82, 0x80, 
    0x7D, 0x7A, 0x79, 0x7F, 0x84, 0x82, 0x7F, 0x82, 0x82, 0x7B, 0x79, 0x7D, 0x7E, 0x7D, 0x81, 0x88, 
    0x8B, 0x88, 0x81, 0x7B, 0x7A, 0x7C, 0x7B, 0x7A, 0x7F, 0x87, 0x86, 0x7C, 0x79, 0x7D, 0x7B, 0x77, 
    0x7C, 0x85, 0x88, 0x88, 0x89, 0x84, 0x7A, 0x78, 0x7C, 0x7E, 0x7F, 0x82, 0x81, 0x7F, 0x83, 0x80, 
    0x74, 0x74, 0x7D, 0x82, 0x83, 0x85, 0x85, 0x82, 0x82, 0x83, 0x80, 0x79, 0x7A, 0x81, 0x85, 0x81, 
    0x7C, 0x7D, 0x81, 0x85, 0x82, 0x76, 0x71, 0x7B, 0x85, 0x87, 0x89, 0x89, 0x83, 0x7D, 0x79, 0x77, 
    0x79, 0x80, 0x86, 0x88, 0x85, 0x7F, 0x77, 0x72, 0x75, 0x7E, 0x82, 0x85, 0x8B, 0x8B, 0x83, 0x7D, 
    0x7B, 0x77, 0x77, 0x80, 0x89, 0x8D, 0x8D, 0x85, 0x75, 0x6D, 0x72, 0x76, 0x7A, 0x87, 0x91, 0x8E, 
    0x87, 0x80, 0x73, 0x6C, 0x72, 0x7D, 0x88, 0x94, 0x97, 0x8C, 0x7B, 0x6E, 0x68, 0x6C, 0x79, 0x87, 
    0x92, 0x92, 0x8B, 0x85, 0x7B, 0x6D, 0x6D, 0x7A, 0x86, 0x8E, 0x8F, 0x88, 0x81, 0x7C, 0x77, 0x71, 
    0x71, 0x7A, 0x85, 0x89, 0x88, 0x84, 0x7C, 0x77, 0x79, 0x7D, 0x7F, 0x83, 0x86, 0x86, 0x84, 0x82, 
    0x7D, 0x77, 0x78, 0x7E, 0x86, 0x8A, 0x85, 0x7E, 0x7D, 0x7C, 0x77, 0x7A, 0x83, 0x86, 0x84, 0x82, 
    0x7E, 0x7B, 0x7E, 0x81, 0x7D, 0x7E, 0x86, 0x84, 0x7F, 0x82, 0x7E, 0x78, 0x7F, 0x84, 0x7C, 0x78, 
    0x7E, 0x83, 0x83, 0x7F, 0x7A, 0x7C, 0x84, 0x87, 0x83, 0x7B, 0x78, 0x7D, 0x84, 0x86, 0x84, 0x82, 
    0x80, 0x7C, 0x7A, 0x7B, 0x7A, 0x7D, 0x83, 0x83, 0x81, 0x85, 0x87, 0x82, 0x81, 0x84, 0x82, 0x7B, 
    0x76, 0x75, 0x7B, 0x84, 0x88, 0x84, 0x81, 0x7E, 0x78, 0x72, 0x74, 0x7C, 0x87, 0x91, 0x93, 0x8B, 
    0x7F, 0x76, 0x73, 0x78, 0x7C, 0x80, 0x85, 0x87, 0x85, 0x7D, 0x73, 0x73, 0x7B, 0x7E, 0x7B, 0x7F, 
    0x87, 0x8C, 0x8B, 0x84, 0x7C, 0x79, 0x7B, 0x7D, 0x7C, 0x7E, 0x81, 0x85, 0x87, 0x81, 0x7C, 0x7D, 
    0x7E, 0x7C, 0x7C, 0x80, 0x82, 0x85, 0x82, 0x7B, 0x7C, 0x7D, 0x7C, 0x7E, 0x84, 0x87, 0x88, 0x86, 
    0x7E, 0x7A, 0x7E, 0x84, 0x87, 0x85, 0x7F, 0x7C, 0x80, 0x86, 0x80, 0x78, 0x7D, 0x84, 0x83, 0x82, 
    0x85, 0x83, 0x80, 0x84, 0x85, 0x80, 0x83, 0x87, 0x83, 0x80, 0x81, 0x79, 0x77, 0x83, 0x85, 0x7D, 
    0x78, 0x78, 0x78, 0x7A, 0x7C, 0x7C, 0x7C, 0x7C, 0x81, 0x84, 0x7E, 0x7A, 0x7B, 0x76, 0x73, 0x7A, 
    0x7F, 0x7D, 0x7D, 0x7F, 0x7B, 0x74, 0x6F, 0x6E, 0x72, 0x78, 0x78, 0x72, 0x6C, 0x6E, 0x6F, 0x68, 
    0x62, 0x6B, 0x82, 0xA8, 0xCA, 0xC0, 0x98, 0x88, 0x8D, 0x86, 0x86, 0x9E, 0xAA, 0xA2, 0x9D, 0x8C, 
    0x69, 0x51, 0x50, 0x50, 0x55, 0x6A, 0x77, 0x79, 0x83, 0x8C, 0x7C, 0x68, 0x70, 0x85, 0x90, 0x9B, 
    0xA8, 0xA8, 0x9C, 0x8D, 0x83, 0x7C, 0x79, 0x78, 0x80, 0x8D, 0x97, 0x9B, 0x96, 0x8C, 0x7F, 0x75, 
    0x73, 0x7C, 0x8B, 0x93, 0x8F, 0x88, 0x81, 0x75, 0x6A, 0x65, 0x68, 0x72, 0x80, 0x8A, 0x8B, 0x87, 
    0x83, 0x7D, 0x77, 0x79, 0x85, 0x8F, 0x92, 0x93, 0x8F, 0x82, 0x71, 0x64, 0x61, 0x63, 0x69, 0x73, 
    0x7D, 0x80, 0x79, 0x74, 0x71, 0x68, 0x61, 0x68, 0x73, 0x79, 0x79, 0x76, 0x6E, 0x63, 0x4E, 0x38, 
    0x2B, 0x35, 0x46, 0x51, 0x81, 0xD7, 0xFE, 0xBC, 0x72, 0x77, 0x93, 0x86, 0x7E, 0xA4, 0xCE, 0xD4, 
    0xB6, 0x84, 0x5D, 0x4F, 0x4A, 0x43, 0x4D, 0x69, 0x7F, 0x8F, 0x9F, 0x98, 0x70, 0x51, 0x60, 0x80, 
    0x8E, 0x97, 0xAA, 0xB3, 0xA4, 0x8C, 0x7B, 0x6E, 0x5F, 0x53, 0x56, 0x6F, 0x92, 0xA2, 0x94, 0x7A, 
    0x6B, 0x63, 0x5F, 0x67, 0x79, 0x8C, 0x98, 0x99, 0x90, 0x85, 0x7F, 0x75, 0x65, 0x63, 0x75, 0x84, 
    0x87, 0x8A, 0x8D, 0x83, 0x72, 0x6C, 0x73, 0x78, 0x7A, 0x83, 0x90, 0x93, 0x8B, 0x83, 0x85, 0x84, 
    0x7D, 0x7B, 0x83, 0x8B, 0x8E, 0x8F, 0x8D, 0x88, 0x83, 0x7A, 0x74, 0x7A, 0x88, 0x8F, 0x8E, 0x8C, 
    0x8B, 0x89, 0x88, 0x86, 0x84, 0x84, 0x88, 0x8B, 0x8A, 0x84, 0x7B, 0x72, 0x6F, 0x71, 0x73, 0x76, 
    0x7C, 0x82, 0x83, 0x80, 0x80, 0x7F, 0x7D, 0x7C, 0x7E, 0x81, 0x83, 0x80, 0x7B, 0x78, 0x72, 0x6B, 
    0x64, 0x62, 0x61, 0x5B, 0x55, 0x56, 0x59, 0x55, 0x50, 0x4D, 0x73, 0xCE, 0xFD, 0xB2, 0x57, 0x67, 
    0x9E, 0x98, 0x7C, 0x8A, 0xB6, 0xD2, 0xB9, 0x77, 0x4D, 0x59, 0x64, 0x4F, 0x44, 0x5B, 0x77, 0x8E, 
    0xA2, 0x9C, 0x73, 0x5A, 0x6B, 0x83, 0x89, 0x90, 0xA3, 0xAE, 0xA5, 0x97, 0x8F, 0x85, 0x70, 0x57, 
    0x52, 0x6D, 0x92, 0xA1, 0x93, 0x7C, 0x6F, 0x69, 0x64, 0x64, 0x70, 0x81, 0x8F, 0x96, 0x95, 0x93, 
    0x93, 0x89, 0x72, 0x63, 0x6E, 0x82, 0x89, 0x8A, 0x8D, 0x8A, 0x7C, 0x70, 0x6F, 0x6E, 0x6B, 0x6F, 
    0x7F, 0x8B, 0x89, 0x84, 0x85, 0x83, 0x7C, 0x7A, 0x81, 0x87, 0x87, 0x8A, 0x90, 0x91, 0x86, 0x78, 
    0x74, 0x78, 0x7D, 0x7C, 0x7A, 0x7E, 0x86, 0x8A, 0x8A, 0x89, 0x87, 0x83, 0x82, 0x83, 0x86, 0x88, 
    0x87, 0x82, 0x7D, 0x7A, 0x79, 0x79, 0x77, 0x76, 0x77, 0x7A, 0x7C, 0x7F, 0x81, 0x80, 0x7F, 0x81, 
    0x82, 0x81, 0x7F, 0x7E, 0x7A, 0x74, 0x6E, 0x69, 0x65, 0x63, 0x5D, 0x52, 0x48, 0x45, 0x6C, 0xCE, 
    0xFE, 0xA8, 0x45, 0x5E, 0xA9, 0xA5, 0x75, 0x78, 0xB3, 0xE7, 0xD3, 0x83, 0x54, 0x6A, 0x77, 0x4F, 
    0x30, 0x47, 0x73, 0x91, 0x9F, 0x94, 0x77, 0x69, 0x6E, 0x6B, 0x66, 0x78, 0x9A, 0xA9, 0xA5, 0xA4, 
    0xAA, 0xA0, 0x7A, 0x51, 0x49, 0x64, 0x85, 0x96, 0x94, 0x8A, 0x83, 0x7B, 0x6B, 0x5C, 0x5B, 0x67, 
    0x79, 0x86, 0x8C, 0x97, 0xAA, 0xA6, 0x81, 0x64, 0x6A, 0x79, 0x7A, 0x7C, 0x8C, 0x98, 0x94, 0x8A, 
    0x82, 0x75, 0x64, 0x5E, 0x69, 0x76, 0x7D, 0x85, 0x90, 0x91, 0x87, 0x7D, 0x7C, 0x80, 0x84, 0x83, 
    0x85, 0x90, 0x96, 0x8C, 0x82, 0x82, 0x7E, 0x75, 0x74, 0x78, 0x7A, 0x80, 0x89, 0x89, 0x83, 0x85, 
    0x87, 0x81, 0x7B, 0x7C, 0x7F, 0x81, 0x86, 0x87, 0x81, 0x7C, 0x7C, 0x7A, 0x76, 0x73, 0x75, 0x78, 
    0x7C, 0x7F, 0x81, 0x85, 0x85, 0x80, 0x7B, 0x79, 0x79, 0x73, 0x6C, 0x67, 0x60, 0x57, 0x4F, 0x49, 
    0x55, 0x9C, 0xF4, 0xDA, 0x5E, 0x37, 0x8E, 0xC7, 0x97, 0x61, 0x7B, 0xCF, 0xF8, 0xB6, 0x5D, 0x5F, 
    0x92, 0x80, 0x37, 0x1E, 0x4C, 0x85, 0x9D, 0x8F, 0x73, 0x75, 0x8C, 0x85, 0x60, 0x56, 0x77, 0x95, 
    0x9A, 0x9A, 0xA9, 0xB8, 0xA8, 0x78, 0x4F, 0x52, 0x71, 0x82, 0x80, 0x7D, 0x84, 0x91, 0x93, 0x7D, 
    0x63, 0x5D, 0x68, 0x6F, 0x6F, 0x78, 0x94, 0xAD, 0xA6, 0x88, 0x79, 0x80, 0x7C, 0x67, 0x62, 0x79, 
    0x93, 0x99, 0x93, 0x8D, 0x86, 0x7C, 0x71, 0x69, 0x64, 0x67, 0x76, 0x88, 0x90, 0x8F, 0x94, 0x9A, 
    0x90, 0x79, 0x6F, 0x7B, 0x84, 0x81, 0x7F, 0x8A, 0x93, 0x92, 0x87, 0x7A, 0x74, 0x76, 0x78, 0x77, 
    0x7B, 0x85, 0x8E, 0x95, 0x97, 0x8F, 0x7F, 0x73, 0x6F, 0x71, 0x78, 0x7E, 0x7E, 0x7A, 0x7A, 0x7E, 
    0x7C, 0x74, 0x6B, 0x68, 0x6E, 0x78, 0x81, 0x85, 0x83, 0x7C, 0x75, 0x6C, 0x60, 0x56, 0x4D, 0x4B, 
    0x7E, 0xDA, 0xE8, 0x86, 0x4B, 0x88, 0xC3, 0x9B, 0x56, 0x59, 0xA6, 0xED, 0xD2, 0x7A, 0x62, 0x95, 
    0x9E, 0x58, 0x22, 0x34, 0x6D, 0x91, 0x87, 0x6C, 0x75, 0x98, 0x96, 0x6F, 0x63, 0x7F, 0x90, 0x83, 
    0x7D, 0x95, 0xB7, 0xB9, 0x90, 0x66, 0x68, 0x82, 0x86, 0x70, 0x5C, 0x60, 0x78, 0x8D, 0x8A, 0x7C, 
    0x79, 0x7C, 0x75, 0x68, 0x66, 0x75, 0x89, 0x8B, 0x7F, 0x83, 0x9F, 0xA9, 0x8D, 0x6F, 0x71, 0x7F, 
    0x7D, 0x76, 0x7B, 0x87, 0x8D, 0x8D, 0x87, 0x7B, 0x70, 0x6B, 0x6A, 0x68, 0x6D, 0x80, 0x91, 0x91, 
    0x8D, 0x97, 0xA2, 0x98, 0x7E, 0x6C, 0x71, 0x80, 0x8C, 0x8F, 0x8B, 0x89, 0x8D, 0x8E, 0x85, 0x78, 
    0x6F, 0x6D, 0x73, 0x7D, 0x86, 0x8F, 0x96, 0x8E, 0x7F, 0x78, 0x76, 0x6E, 0x68, 0x6E, 0x78, 0x80, 
    0x83, 0x84, 0x80, 0x78, 0x70, 0x69, 0x62, 0x5E, 0x5F, 0x65, 0x66, 0x61, 0x5D, 0x71, 0xB2, 0xE1, 
    0xAB, 0x55, 0x65, 0xBA, 0xC7, 0x7F, 0x52, 0x7D, 0xD0, 0xE3, 0x96, 0x55, 0x76, 0xAA, 0x85, 0x3A, 
    0x2F, 0x5D, 0x7D, 0x72, 0x5C, 0x67, 0x94, 0xA4, 0x7D, 0x5F, 0x78, 0x98, 0x8D, 0x70, 0x72, 0x97, 
    0xB6, 0xAA, 0x87, 0x7F, 0x96, 0x9E, 0x87, 0x6B, 0x61, 0x69, 0x78, 0x7D, 0x77, 0x79, 0x82, 0x81, 
    0x76, 0x6B, 0x68, 0x71, 0x77, 0x6D, 0x67, 0x7C, 0x97, 0x97, 0x88, 0x88, 0x93, 0x96, 0x8C, 0x81, 
    0x81, 0x8B, 0x8E, 0x87, 0x85, 0x88, 0x86, 0x7E, 0x76, 0x6E, 0x6A, 0x6F, 0x73, 0x6C, 0x6D, 0x7D, 
    0x87, 0x83, 0x81, 0x86, 0x8A, 0x8B, 0x8B, 0x85, 0x82, 0x89, 0x92, 0x93, 0x91, 0x8D, 0x8D, 0x8E, 
    0x86, 0x78, 0x75, 0x7B, 0x78, 0x72, 0x76, 0x7D, 0x78, 0x72, 0x75, 0x7B, 0x79, 0x6F, 0x68, 0x6B, 
    0x74, 0x7A, 0x78, 0x72, 0x6A, 0x65, 0x65, 0x66, 0x60, 0x6F, 0xA0, 0xB3, 0x86, 0x6B, 0x9A, 0xC9, 
    0xAD, 0x75, 0x6A, 0x9A, 0xCB, 0xBA, 0x7B, 0x69, 0x97, 0xAF, 0x83, 0x4F, 0x4A, 0x68, 0x7D, 0x6D, 
    0x52, 0x5D, 0x81, 0x83, 0x66, 0x65, 0x84, 0x91, 0x7B, 0x6A, 0x7A, 0x9C, 0xA5, 0x8A, 0x77, 0x8D, 
    0xAB, 0xA8, 0x8F, 0x80, 0x83, 0x88, 0x84, 0x77, 0x6D, 0x70, 0x77, 0x78, 0x75, 0x75, 0x77, 0x78, 
    0x75, 0x6B, 0x67, 0x72, 0x7B, 0x74, 0x70, 0x82, 0x96, 0x97, 0x8D, 0x88, 0x8C, 0x91, 0x8D, 0x83, 
    0x81, 0x85, 0x88, 0x8D, 0x90, 0x8E, 0x89, 0x86, 0x7E, 0x76, 0x77, 0x7B, 0x74, 0x69, 0x6E, 0x7B, 
    0x82, 0x7E, 0x79, 0x7C, 0x84, 0x8A, 0x87, 0x7E, 0x7C, 0x83, 0x8F, 0x94, 0x90, 0x89, 0x89, 0x8B, 
    0x86, 0x7D, 0x78, 0x75, 0x75, 0x78, 0x7D, 0x80, 0x7B, 0x73, 0x71, 0x70, 0x6A, 0x5F, 0x57, 0x54, 
    0x58, 0x60, 0x64, 0x75, 0x94, 0x9B, 0x7E, 0x72, 0x95, 0xB6, 0xA3, 0x7D, 0x7D, 0xAB, 0xD0, 0xB8, 
    0x85, 0x85, 0xB0, 0xB7, 0x87, 0x5E, 0x62, 0x77, 0x76, 0x5E, 0x51, 0x62, 0x71, 0x63, 0x54, 0x60, 
    0x76, 0x77, 0x6B, 0x68, 0x78, 0x8C, 0x8D, 0x7E, 0x7D, 0x95, 0xAB, 0xA9, 0x9D, 0x9A, 0xA0, 0xA5, 
    0x9C, 0x89, 0x7F, 0x82, 0x82, 0x7B, 0x77, 0x73, 0x6A, 0x66, 0x68, 0x64, 0x61, 0x66, 0x67, 0x60, 
    0x60, 0x6F, 0x7E, 0x82, 0x80, 0x84, 0x95, 0xA5, 0xA4, 0x9A, 0x96, 0x96, 0x95, 0x95, 0x93, 0x89, 
    0x82, 0x88, 0x8D, 0x87, 0x83, 0x80, 0x74, 0x67, 0x68, 0x6D, 0x69, 0x62, 0x65, 0x70, 0x7F, 0x89, 
    0x88, 0x86, 0x8A, 0x8D, 0x8B, 0x88, 0x89, 0x8B, 0x8F, 0x8F, 0x8A, 0x87, 0x87, 0x85, 0x7E, 0x78, 
    0x74, 0x6B, 0x64, 0x65, 0x6A, 0x6B, 0x65, 0x5C, 0x5D, 0x65, 0x6A, 0x77, 0x8F, 0x8F, 0x78, 0x7A, 
    0x9F, 0xAD, 0x90, 0x76, 0x84, 0xA9, 0xB9, 0x98, 0x74, 0x83, 0xAF, 0xB2, 0x89, 0x6E, 0x7A, 0x8E, 
    0x87, 0x67, 0x58, 0x6A, 0x79, 0x67, 0x58, 0x6D, 0x86, 0x7A, 0x5E, 0x5A, 0x70, 0x82, 0x77, 0x62, 
    0x67, 0x85, 0x99, 0x97, 0x93, 0x99, 0x9E, 0x9C, 0x97, 0x90, 0x8B, 0x89, 0x85, 0x85, 0x8C, 0x91, 
    0x8B, 0x83, 0x7E, 0x7A, 0x75, 0x6F, 0x66, 0x5C, 0x5B, 0x66, 0x72, 0x76, 0x72, 0x72, 0x7A, 0x83, 
    0x83, 0x80, 0x84, 0x8A, 0x8B, 0x8E, 0x95, 0x99, 0x99, 0x9C, 0x9D, 0x98, 0x94, 0x91, 0x8B, 0x83, 
    0x7E, 0x7A, 0x74, 0x72, 0x72, 0x6F, 0x6D, 0x6D, 0x6C, 0x6D, 0x73, 0x79, 0x77, 0x77, 0x7B, 0x80, 
    0x82, 0x84, 0x86, 0x86, 0x8B, 0x8F, 0x8A, 0x83, 0x85, 0x86, 0x7E, 0x72, 0x69, 0x66, 0x68, 0x64, 
    0x60, 0x75, 0x8F, 0x82, 0x61, 0x6C, 0x99, 0xA3, 0x7F, 0x66, 0x7D, 0xAA, 0xB7, 0x91, 0x75, 0x96, 
    0xC2, 0xB4, 0x86, 0x79, 0x8C, 0x93, 0x7D, 0x62, 0x62, 0x75, 0x74, 0x5C, 0x59, 0x77, 0x83, 0x6C, 
    0x5A, 0x66, 0x7C, 0x7E, 0x6A, 0x5B, 0x6F, 0x8F, 0x94, 0x85, 0x86, 0x98, 0x9E, 0x95, 0x8A, 0x89, 
    0x8D, 0x8D, 0x85, 0x83, 0x8C, 0x8F, 0x85, 0x7F, 0x85, 0x87, 0x80, 0x78, 0x6F, 0x6B, 0x71, 0x79, 
    0x75, 0x6E, 0x6E, 0x78, 0x82, 0x83, 0x79, 0x77, 0x7F, 0x85, 0x83, 0x85, 0x89, 0x88, 0x89, 0x90, 
    0x94, 0x90, 0x8E, 0x8C, 0x89, 0x88, 0x8C, 0x8B, 0x85, 0x7F, 0x7F, 0x81, 0x80, 0x7C, 0x75, 0x74, 
    0x78, 0x7C, 0x7B, 0x77, 0x71, 0x6D, 0x72, 0x78, 0x74, 0x6C, 0x6E, 0x77, 0x7D, 0x80, 0x81, 0x7C, 
    0x77, 0x78, 0x77, 0x6F, 0x68, 0x6D, 0x81, 0x94, 0x8B, 0x78, 0x86, 0xAA, 0xAC, 0x89, 0x77, 0x8A, 
    0xA3, 0x9C, 0x7B, 0x6F, 0x8E, 0xA8, 0x93, 0x72, 0x79, 0x93, 0x8F, 0x6F, 0x5F, 0x71, 0x84, 0x76, 
    0x5D, 0x66, 0x86, 0x87, 0x68, 0x5F, 0x7A, 0x8C, 0x7C, 0x61, 0x62, 0x7D, 0x8E, 0x82, 0x72, 0x7B, 
    0x90, 0x95, 0x8D, 0x89, 0x8E, 0x91, 0x8E, 0x88, 0x89, 0x8C, 0x87, 0x7B, 0x79, 0x83, 0x87, 0x7F, 
    0x77, 0x74, 0x76, 0x7B, 0x7B, 0x73, 0x6C, 0x6F, 0x78, 0x7F, 0x7E, 0x7B, 0x80, 0x8B, 0x8F, 0x8D, 
    0x8E, 0x8F, 0x88, 0x83, 0x89, 0x8C, 0x87, 0x84, 0x84, 0x86, 0x8A, 0x8D, 0x84, 0x79, 0x78, 0x7D, 
    0x7C, 0x75, 0x71, 0x75, 0x80, 0x88, 0x86, 0x80, 0x7F, 0x80, 0x7D, 0x7C, 0x7B, 0x74, 0x6F, 0x71, 
    0x75, 0x73, 0x6F, 0x6B, 0x67, 0x66, 0x69, 0x68, 0x63, 0x70, 0x89, 0x8A, 0x76, 0x7C, 0xA0, 0xB0, 
    0x9A, 0x85, 0x93, 0xB3, 0xB6, 0x94, 0x7E, 0x95, 0xB0, 0xA1, 0x80, 0x7C, 0x8B, 0x8B, 0x75, 0x63, 
    0x68, 0x74, 0x68, 0x51, 0x55, 0x72, 0x7B, 0x66, 0x5B, 0x6C, 0x82, 0x81, 0x70, 0x68, 0x77, 0x88, 
    0x87, 0x81, 0x87, 0x92, 0x94, 0x95, 0x99, 0x99, 0x93, 0x8F, 0x8E, 0x90, 0x8E, 0x83, 0x75, 0x74, 
    0x7C, 0x7C, 0x74, 0x71, 0x71, 0x71, 0x72, 0x73, 0x72, 0x6E, 0x6D, 0x6F, 0x78, 0x80, 0x82, 0x82, 
    0x88, 0x8E, 0x93, 0x98, 0x97, 0x8F, 0x8E, 0x96, 0x95, 0x8D, 0x89, 0x89, 0x89, 0x8D, 0x8F, 0x85, 
    0x7C, 0x7C, 0x79, 0x71, 0x6B, 0x67, 0x65, 0x69, 0x73, 0x79, 0x7B, 0x7E, 0x80, 0x82, 0x84, 0x84, 
    0x7F, 0x7A, 0x79, 0x79, 0x79, 0x76, 0x6E, 0x65, 0x63, 0x65, 0x64, 0x71, 0x86, 0x7D, 0x63, 0x71, 
    0x9F, 0xAA, 0x88, 0x75, 0x8E, 0xB2, 0xB4, 0x92, 0x81, 0xA1, 0xBF, 0xAA, 0x86, 0x84, 0x93, 0x8F, 
    0x7C, 0x6F, 0x73, 0x79, 0x6C, 0x59, 0x5F, 0x76, 0x72, 0x58, 0x52, 0x68, 0x79, 0x71, 0x62, 0x63, 
    0x75, 0x81, 0x7F, 0x7E, 0x8A, 0x95, 0x94, 0x95, 0x9D, 0xA0, 0x9A, 0x92, 0x8E, 0x91, 0x93, 0x88, 
    0x7B, 0x7C, 0x83, 0x81, 0x77, 0x70, 0x6C, 0x6B, 0x6F, 0x71, 0x69, 0x65, 0x6A, 0x73, 0x79, 0x79, 
    0x78, 0x7C, 0x85, 0x8C, 0x93, 0x98, 0x95, 0x91, 0x96, 0x9E, 0x9F, 0x99, 0x91, 0x8C, 0x8C, 0x8E, 
    0x8A, 0x81, 0x77, 0x72, 0x76, 0x79, 0x73, 0x6A, 0x6A, 0x70, 0x74, 0x73, 0x72, 0x74, 0x79, 0x7E, 
    0x80, 0x7A, 0x73, 0x73, 0x78, 0x77, 0x6D, 0x60, 0x5C, 0x61, 0x6C, 0x81, 0x90, 0x7F, 0x6C, 0x88, 
    0xB6, 0xAD, 0x7C, 0x75, 0x9E, 0xBA, 0xA8, 0x83, 0x7F, 0xA1, 0xB1, 0x95, 0x7E, 0x8B, 0x93, 0x81, 
    0x70, 0x71, 0x77, 0x6E, 0x58, 0x50, 0x67, 0x7C, 0x6C, 0x55, 0x61, 0x83, 0x8D, 0x78, 0x67, 0x6E, 
    0x83, 0x88, 0x7E, 0x7B, 0x8A, 0x95, 0x96, 0x9B, 0xA2, 0x9E, 0x92, 0x8C, 0x8C, 0x8C, 0x82, 0x70, 
    0x69, 0x77, 0x82, 0x7A, 0x71, 0x74, 0x77, 0x76, 0x79, 0x78, 0x6E, 0x66, 0x6B, 0x76, 0x7F, 0x80, 
    0x7E, 0x86, 0x94, 0x9D, 0x9F, 0x9D, 0x93, 0x87, 0x8B, 0x94, 0x8D, 0x81, 0x82, 0x88, 0x88, 0x8B, 
    0x8F, 0x84, 0x75, 0x72, 0x75, 0x71, 0x6C, 0x68, 0x6B, 0x74, 0x7D, 0x7F, 0x7F, 0x7E, 0x7A, 0x76, 
    0x78, 0x75, 0x67, 0x5D, 0x5D, 0x5C, 0x58, 0x5D, 0x6F, 0x92, 0x9E, 0x7B, 0x7A, 0xBC, 0xD6, 0x92, 
    0x62, 0x8A, 0xB4, 0xAA, 0x89, 0x78, 0x93, 0xBE, 0xB6, 0x85, 0x79, 0x88, 0x7A, 0x5E, 0x56, 0x5B, 
    0x58, 0x51, 0x51, 0x6B, 0x90, 0x90, 0x6E, 0x6C, 0x8E, 0x9B, 0x85, 0x6F, 0x69, 0x72, 0x8C, 0x9F, 
    0x96, 0x86, 0x8C, 0x9D, 0xA3, 0x95, 0x79, 0x65, 0x66, 0x6A, 0x6B, 0x70, 0x6F, 0x69, 0x74, 0x8D, 
    0x92, 0x85, 0x7C, 0x76, 0x72, 0x7D, 0x8B, 0x83, 0x77, 0x84, 0xA2, 0xB4, 0xA7, 0x91, 0x91, 0x9A, 
    0x8D, 0x79, 0x73, 0x69, 0x60, 0x72, 0x87, 0x81, 0x7A, 0x81, 0x82, 0x81, 0x88, 0x80, 0x69, 0x66, 
    0x77, 0x85, 0x8C, 0x89, 0x81, 0x86, 0x95, 0x92, 0x81, 0x72, 0x6B, 0x69, 0x6C, 0x69, 0x5C, 0x50, 
    0x49, 0x47, 0x4B, 0x5D, 0x95, 0xC4, 0x96, 0x59, 0x9A, 0xFB, 0xC5, 0x4F, 0x5C, 0xC0, 0xE2, 0xB2, 
    0x79, 0x7A, 0xB3, 0xC7, 0x83, 0x46, 0x4F, 0x5C, 0x47, 0x44, 0x5E, 0x69, 0x5F, 0x60, 0x7D, 0xA3, 
    0xA8, 0x82, 0x64, 0x7C, 0xA6, 0xA8, 0x8E, 0x7D, 0x80, 0x97, 0xB1, 0xA9, 0x83, 0x6B, 0x71, 0x78, 
    0x70, 0x5E, 0x4B, 0x4B, 0x5E, 0x72, 0x7B, 0x78, 0x74, 0x7B, 0x8D, 0x91, 0x84, 0x80, 0x86, 0x86, 
    0x8C, 0xA2, 0xAC, 0x96, 0x83, 0x91, 0xA7, 0x9C, 0x7C, 0x6C, 0x74, 0x82, 0x85, 0x80, 0x79, 0x72, 
    0x78, 0x8B, 0x93, 0x7E, 0x68, 0x6D, 0x7D, 0x83, 0x7E, 0x76, 0x74, 0x7C, 0x8A, 0x92, 0x89, 0x7C, 
    0x7A, 0x85, 0x8C, 0x85, 0x7D, 0x7A, 0x78, 0x7A, 0x7E, 0x75, 0x5D, 0x4D, 0x4D, 0x4B, 0x41, 0x46, 
    0x70, 0xB1, 0xBA, 0x7B, 0x6F, 0xC8, 0xED, 0x8F, 0x49, 0x82, 0xD2, 0xD3, 0x9C, 0x77, 0x90, 0xC1, 
    0xAD, 0x5C, 0x38, 0x50, 0x58, 0x43, 0x48, 0x67, 0x78, 0x77, 0x7D, 0x92, 0xA5, 0x9D, 0x77, 0x5E, 
    0x76, 0x99, 0x96, 0x7F, 0x7C, 0x90, 0xAA, 0xB0, 0x91, 0x6C, 0x67, 0x71, 0x66, 0x58, 0x5D, 0x68, 
    0x72, 0x80, 0x8D, 0x93, 0x8E, 0x81, 0x7A, 0x7C, 0x7C, 0x76, 0x73, 0x75, 0x7C, 0x8D, 0x9E, 0x99, 
    0x87, 0x82, 0x8B, 0x8F, 0x83, 0x77, 0x7E, 0x89, 0x84, 0x85, 0x9E, 0xA4, 0x88, 0x7D, 0x8C, 0x8D, 
    0x7D, 0x6E, 0x65, 0x6B, 0x81, 0x85, 0x76, 0x73, 0x81, 0x88, 0x83, 0x7C, 0x77, 0x76, 0x79, 0x80, 
    0x82, 0x7D, 0x75, 0x71, 0x70, 0x6B, 0x5A, 0x46, 0x42, 0x5A, 0x74, 0x7B, 0x7C, 0x93, 0xB8, 0xBD, 
    0x9B, 0x8B, 0xA6, 0xB3, 0x97, 0x84, 0x94, 0xAC, 0xAE, 0x92, 0x73, 0x70, 0x7B, 0x69, 0x47, 0x42, 
    0x58, 0x68, 0x6E, 0x7B, 0x89, 0x8D, 0x90, 0x92, 0x8D, 0x86, 0x82, 0x7E, 0x79, 0x7C, 0x88, 0x90, 
    0x92, 0x8B, 0x80, 0x7B, 0x7C, 0x72, 0x5F, 0x57, 0x62, 0x70, 0x7B, 0x83, 0x88, 0x8D, 0x93, 0x95, 
    0x8B, 0x7D, 0x79, 0x7A, 0x75, 0x73, 0x7E, 0x8C, 0x8F, 0x8C, 0x8E, 0x90, 0x8B, 0x83, 0x7E, 0x81, 
    0x82, 0x7F, 0x7E, 0x87, 0x8F, 0x8D, 0x8C, 0x8C, 0x84, 0x7C, 0x7C, 0x79, 0x6E, 0x6C, 0x76, 0x7D, 
    0x7F, 0x81, 0x84, 0x8A, 0x90, 0x8B, 0x82, 0x7F, 0x80, 0x7D, 0x79, 0x75, 0x6E, 0x64, 0x5D, 0x53, 
    0x47, 0x4C, 0x5F, 0x68, 0x66, 0x7D, 0xAA, 0xB6, 0x91, 0x80, 0xA2, 0xBC, 0xA4, 0x87, 0x94, 0xB5, 
    0xBB, 0x9A, 0x79, 0x7B, 0x88, 0x76, 0x50, 0x45, 0x59, 0x6B, 0x6F, 0x72, 0x7C, 0x8B, 0x99, 0x97, 
    0x88, 0x80, 0x87, 0x87, 0x7C, 0x77, 0x7D, 0x83, 0x86, 0x83, 0x7A, 0x76, 0x7E, 0x7B, 0x6B, 0x63, 
    0x6A, 0x73, 0x77, 0x7B, 0x83, 0x8E, 0x95, 0x91, 0x89, 0x84, 0x80, 0x7B, 0x74, 0x6D, 0x6F, 0x7C, 
    0x88, 0x85, 0x7F, 0x87, 0x97, 0x96, 0x8B, 0x89, 0x8D, 0x8D, 0x90, 0x94, 0x92, 0x8E, 0x8C, 0x86, 
    0x82, 0x7F, 0x74, 0x66, 0x64, 0x6D, 0x70, 0x6D, 0x6E, 0x73, 0x79, 0x84, 0x8A, 0x85, 0x81, 0x88, 
    0x8E, 0x89, 0x80, 0x79, 0x70, 0x64, 0x5A, 0x59, 0x5D, 0x62, 0x6C, 0x81, 0x9A, 0xA9, 0x9B, 0x7C, 
    0x7B, 0x98, 0x9B, 0x7E, 0x79, 0x9A, 0xB5, 0xAF, 0x94, 0x7F, 0x80, 0x82, 0x68, 0x43, 0x3F, 0x5C, 
    0x73, 0x76, 0x7F, 0x94, 0xA5, 0xAA, 0xA3, 0x93, 0x88, 0x89, 0x85, 0x77, 0x73, 0x7E, 0x85, 0x80, 
    0x78, 0x73, 0x72, 0x71, 0x69, 0x60, 0x61, 0x6B, 0x73, 0x7A, 0x86, 0x93, 0x98, 0x96, 0x93, 0x91, 
    0x8C, 0x86, 0x7F, 0x72, 0x6A, 0x6D, 0x76, 0x78, 0x71, 0x6D, 0x77, 0x85, 0x89, 0x84, 0x84, 0x8B, 
    0x96, 0x9F, 0x9F, 0x9B, 0x9B, 0x98, 0x90, 0x8D, 0x8A, 0x7E, 0x75, 0x77, 0x78, 0x72, 0x70, 0x70, 
    0x69, 0x66, 0x6B, 0x70, 0x6D, 0x6D, 0x76, 0x80, 0x83, 0x7E, 0x79, 0x72, 0x6A, 0x63, 0x60, 0x62, 
    0x70, 0x8D, 0xAE, 0xB2, 0x91, 0x81, 0x9E, 0xB1, 0x92, 0x72, 0x7F, 0x9E, 0xA4, 0x8D, 0x74, 0x74, 
    0x82, 0x7D, 0x5E, 0x49, 0x54, 0x6C, 0x77, 0x79, 0x7C, 0x86, 0x98, 0xA4, 0x9B, 0x8A, 0x8A, 0x93, 
    0x8E, 0x81, 0x7F, 0x88, 0x8A, 0x7F, 0x70, 0x67, 0x6B, 0x74, 0x6C, 0x5C, 0x60, 0x73, 0x80, 0x84, 
    0x87, 0x8D, 0x95, 0x9C, 0x98, 0x8A, 0x88, 0x92, 0x8E, 0x76, 0x6A, 0x75, 0x7E, 0x78, 0x6F, 0x6E, 
    0x73, 0x77, 0x73, 0x6F, 0x76, 0x83, 0x86, 0x88, 0x93, 0x9F, 0xA1, 0x9E, 0x9A, 0x92, 0x8B, 0x89, 
    0x84, 0x78, 0x71, 0x78, 0x7F, 0x7A, 0x70, 0x6F, 0x75, 0x73, 0x68, 0x63, 0x69, 0x6D, 0x68, 0x64, 
    0x69, 0x70, 0x73, 0x78, 0x84, 0x9F, 0xC2, 0xC6, 0x97, 0x6F, 0x83, 0xA0, 0x90, 0x6E, 0x71, 0x93, 
    0xAB, 0x9F, 0x7A, 0x68, 0x74, 0x77, 0x54, 0x35, 0x3F, 0x61, 0x7A, 0x88, 0x8E, 0x8F, 0x9D, 0xB5, 
    0xB1, 0x8E, 0x7D, 0x88, 0x8D, 0x81, 0x7D, 0x8B, 0x97, 0x93, 0x81, 0x70, 0x6F, 0x73, 0x68, 0x53, 
    0x4E, 0x59, 0x68, 0x76, 0x80, 0x86, 0x8C, 0x96, 0x99, 0x8F, 0x89, 0x92, 0x99, 0x8E, 0x81, 0x81, 
    0x89, 0x8D, 0x8A, 0x82, 0x7C, 0x7A, 0x78, 0x73, 0x70, 0x74, 0x77, 0x75, 0x74, 0x7B, 0x86, 0x8D, 
    0x8C, 0x89, 0x87, 0x88, 0x8A, 0x8B, 0x83, 0x7A, 0x79, 0x79, 0x74, 0x73, 0x76, 0x76, 0x6E, 0x6A, 
    0x6D, 0x6E, 0x67, 0x5D, 0x58, 0x5D, 0x6A, 0x7E, 0xA5, 0xCD, 0xC4, 0x98, 0x92, 0xB3, 0xB2, 0x89, 
    0x75, 0x87, 0x9C, 0x9D, 0x87, 0x70, 0x75, 0x89, 0x79, 0x45, 0x2C, 0x41, 0x5B, 0x63, 0x69, 0x71, 
    0x7F, 0x9A, 0xAE, 0xA9, 0x97, 0x92, 0x94, 0x8D, 0x80, 0x7C, 0x85, 0x95, 0x97, 0x85, 0x79, 0x82, 
    0x88, 0x76, 0x5F, 0x59, 0x5C, 0x5F, 0x6A, 0x78, 0x80, 0x89, 0x94, 0x90, 0x80, 0x81, 0x90, 0x90, 
    0x7A, 0x6C, 0x77, 0x8D, 0x9B, 0x99, 0x91, 0x8F, 0x90, 0x88, 0x7A, 0x77, 0x7A, 0x76, 0x6F, 0x70, 
    0x79, 0x84, 0x8E, 0x8B, 0x7D, 0x79, 0x83, 0x86, 0x77, 0x6C, 0x75, 0x7F, 0x79, 0x71, 0x7A, 0x87, 
    0x83, 0x75, 0x6F, 0x6E, 0x65, 0x59, 0x5B, 0x64, 0x67, 0x73, 0xA1, 0xCA, 0xB7, 0x88, 0x85, 0xA1, 
    0x9C, 0x7A, 0x72, 0x8B, 0xA1, 0x9D, 0x88, 0x80, 0x94, 0xA4, 0x88, 0x56, 0x45, 0x58, 0x69, 0x6B, 
    0x69, 0x6C, 0x78, 0x8F, 0x9E, 0x95, 0x88, 0x8D, 0x93, 0x86, 0x78, 0x79, 0x83, 0x8A, 0x88, 0x7C, 
    0x78, 0x83, 0x8A, 0x7F, 0x70, 0x69, 0x66, 0x65, 0x6A, 0x71, 0x78, 0x85, 0x90, 0x8A, 0x80, 0x8B, 
    0x9E, 0x96, 0x7B, 0x70, 0x79, 0x81, 0x82, 0x82, 0x83, 0x85, 0x89, 0x89, 0x83, 0x82, 0x84, 0x83, 
    0x80, 0x7E, 0x7E, 0x82, 0x88, 0x89, 0x85, 0x82, 0x82, 0x7C, 0x73, 0x73, 0x78, 0x74, 0x68, 0x66, 
    0x72, 0x7E, 0x7F, 0x79, 0x71, 0x6A, 0x67, 0x68, 0x6B, 0x6E, 0x76, 0x90, 0xB3, 0xBC, 0xA2, 0x91, 
    0x9D, 0xA3, 0x8F, 0x79, 0x79, 0x87, 0x8D, 0x82, 0x73, 0x75, 0x87, 0x8B, 0x72, 0x57, 0x54, 0x64, 
    0x6F, 0x70, 0x6F, 0x75, 0x86, 0x9B, 0xA1, 0x97, 0x92, 0x99, 0x98, 0x86, 0x77, 0x79, 0x82, 0x82, 
    0x78, 0x72, 0x79, 0x85, 0x89, 0x7D, 0x6F, 0x6C, 0x6F, 0x6E, 0x6C, 0x6D, 0x76, 0x82, 0x88, 0x83, 
    0x84, 0x93, 0x9D, 0x95, 0x86, 0x80, 0x82, 0x85, 0x85, 0x7F, 0x7B, 0x81, 0x88, 0x84, 0x7C, 0x7B, 
    0x7D, 0x7B, 0x75, 0x6E, 0x72, 0x7F, 0x89, 0x89, 0x87, 0x8C, 0x92, 0x8C, 0x80, 0x7D, 0x7E, 0x75, 
    0x67, 0x62, 0x6B, 0x76, 0x79, 0x73, 0x6C, 0x6A, 0x6B, 0x68, 0x66, 0x6C, 0x7D, 0x98, 0xAE, 0xAB, 
    0x9A, 0x9A, 0xAB, 0xAB, 0x91, 0x80, 0x8B, 0x99, 0x92, 0x7D, 0x70, 0x79, 0x8A, 0x83, 0x66, 0x55, 
    0x5E, 0x69, 0x67, 0x63, 0x68, 0x73, 0x7D, 0x85, 0x87, 0x88, 0x8E, 0x96, 0x92, 0x87, 0x84, 0x8C, 
    0x92, 0x8D, 0x85, 0x84, 0x88, 0x8A, 0x85, 0x7A, 0x72, 0x6F, 0x6D, 0x69, 0x67, 0x6A, 0x70, 0x75, 
    0x75, 0x74, 0x7B, 0x8B, 0x93, 0x8F, 0x8B, 0x91, 0x94, 0x8E, 0x8A, 0x8D, 0x90, 0x8C, 0x86, 0x84, 
    0x87, 0x87, 0x80, 0x79, 0x74, 0x6F, 0x6A, 0x6E, 0x77, 0x7C, 0x7D, 0x7F, 0x86, 0x89, 0x87, 0x86, 
    0x85, 0x7D, 0x6F, 0x6A, 0x70, 0x77, 0x78, 0x74, 0x72, 0x71, 0x71, 0x6F, 0x69, 0x63, 0x65, 0x73, 
    0x88, 0x9B, 0x9E, 0x99, 0x9F, 0xAC, 0xAA, 0x9A, 0x93, 0x9B, 0x9C, 0x8D, 0x7B, 0x76, 0x7F, 0x88, 
    0x81, 0x6E, 0x64, 0x69, 0x6C, 0x67, 0x65, 0x69, 0x6E, 0x73, 0x79, 0x7D, 0x81, 0x8E, 0x9B, 0x93, 
    0x83, 0x80, 0x88, 0x8A, 0x82, 0x7D, 0x80, 0x87, 0x8A, 0x87, 0x85, 0x87, 0x85, 0x7B, 0x70, 0x6C, 
    0x6B, 0x69, 0x68, 0x6A, 0x6B, 0x6F, 0x7A, 0x84, 0x86, 0x89, 0x91, 0x92, 0x8A, 0x87, 0x90, 0x97, 
    0x92, 0x8B, 0x8A, 0x8E, 0x90, 0x8D, 0x85, 0x7E, 0x7B, 0x77, 0x73, 0x74, 0x75, 0x77, 0x78, 0x7A, 
    0x7F, 0x85, 0x88, 0x85, 0x80, 0x7C, 0x7B, 0x7B, 0x78, 0x73, 0x6F, 0x71, 0x73, 0x72, 0x6D, 0x6A, 
    0x6A, 0x69, 0x67, 0x67, 0x6F, 0x82, 0x9A, 0x9F, 0x94, 0x93, 0xA3, 0xAA, 0x9D, 0x94, 0x99, 0x9F, 
    0x97, 0x88, 0x7E, 0x84, 0x8D, 0x87, 0x71, 0x62, 0x67, 0x6E, 0x6C, 0x6A, 0x6C, 0x6C, 0x6D, 0x74, 
    0x7B, 0x7C, 0x81, 0x89, 0x86, 0x7D, 0x7F, 0x8C, 0x91, 0x8C, 0x83, 0x7F, 0x83, 0x8C, 0x8F, 0x8E, 
    0x8C, 0x89, 0x82, 0x78, 0x74, 0x77, 0x77, 0x6E, 0x62, 0x5F, 0x68, 0x77, 0x7D, 0x78, 0x75, 0x7C, 
    0x82, 0x81, 0x82, 0x87, 0x89, 0x88, 0x8C, 0x91, 0x93, 0x97, 0x9B, 0x97, 0x8F, 0x8A, 0x88, 0x83, 
    0x7F, 0x7D, 0x7D, 0x7C, 0x7A, 0x79, 0x7B, 0x81, 0x87, 0x84, 0x7B, 0x77, 0x79, 0x7A, 0x77, 0x71, 
    0x6F, 0x71, 0x74, 0x75, 0x73, 0x72, 0x73, 0x71, 0x6B, 0x65, 0x65, 0x6B, 0x76, 0x86, 0x96, 0x97, 
    0x8D, 0x8E, 0x9C, 0xA1, 0x93, 0x8A, 0x90, 0x99, 0x94, 0x89, 0x85, 0x8D, 0x96, 0x92, 0x81, 0x75, 
    0x79, 0x7F, 0x76, 0x69, 0x67, 0x6C, 0x6C, 0x69, 0x67, 0x69, 0x70, 0x78, 0x77, 0x71, 0x75, 0x83, 
    0x8B, 0x8B, 0x89, 0x8C, 0x94, 0x9B, 0x9C, 0x99, 0x99, 0x99, 0x90, 0x83, 0x7C, 0x7D, 0x7B, 0x72, 
    0x67, 0x5E, 0x5F, 0x66, 0x6A, 0x64, 0x5F, 0x65, 0x6F, 0x70, 0x6F, 0x7B, 0x8D, 0x93, 0x8E, 0x91, 
    0xA0, 0xAD, 0xAD, 0xA7, 0xA4, 0xA2, 0x9B, 0x92, 0x8A, 0x86, 0x83, 0x7C, 0x72, 0x6E, 0x72, 0x75, 
    0x72, 0x6C, 0x68, 0x6A, 0x6E, 0x71, 0x71, 0x71, 0x76, 0x7C, 0x7E, 0x82, 0x86, 0x88, 0x87, 0x84, 
    0x7F, 0x7A, 0x76, 0x6F, 0x66, 0x63, 0x66, 0x70, 0x81, 0x8B, 0x83, 0x7C, 0x87, 0x94, 0x8D, 0x82, 
    0x8B, 0x9B, 0x9E, 0x95, 0x90, 0x95, 0xA0, 0xA4, 0x96, 0x84, 0x81, 0x87, 0x7E, 0x6D, 0x66, 0x68, 
    0x66, 0x61, 0x5F, 0x61, 0x67, 0x71, 0x75, 0x6E, 0x6F, 0x80, 0x8E, 0x89, 0x80, 0x86, 0x92, 0x97, 
    0x95, 0x98, 0x9F, 0xA1, 0x99, 0x8E, 0x89, 0x89, 0x82, 0x73, 0x65, 0x5E, 0x5A, 0x5A, 0x5F, 0x62, 
    0x60, 0x65, 0x70, 0x73, 0x70, 0x76, 0x84, 0x89, 0x86, 0x88, 0x96, 0xA4, 0xAB, 0xAC, 0xAC, 0xAC, 
    0xA8, 0x9F, 0x93, 0x8B, 0x83, 0x7A, 0x71, 0x6E, 0x70, 0x72, 0x73, 0x74, 0x71, 0x6F, 0x71, 0x75, 
    0x74, 0x72, 0x76, 0x7A, 0x78, 0x79, 0x83, 0x8C, 0x8B, 0x86, 0x87, 0x88, 0x80, 0x76, 0x72, 0x70, 
    0x6C, 0x66, 0x64, 0x65, 0x66, 0x6C, 0x7F, 0x90, 0x87, 0x78, 0x7F, 0x95, 0x94, 0x80, 0x7E, 0x92, 
    0xA0, 0x9A, 0x90, 0x94, 0xA5, 0xAD, 0x9F, 0x8A, 0x86, 0x8F, 0x8E, 0x7C, 0x6E, 0x6D, 0x6E, 0x67, 
    0x60, 0x5C, 0x5E, 0x65, 0x69, 0x61, 0x5C, 0x6C, 0x82, 0x83, 0x76, 0x77, 0x87, 0x92, 0x91, 0x91, 
    0x99, 0xA0, 0x9E, 0x98, 0x94, 0x96, 0x9A, 0x96, 0x86, 0x75, 0x6D, 0x6F, 0x70, 0x68, 0x5C, 0x5A, 
    0x65, 0x6A, 0x64, 0x64, 0x75, 0x80, 0x78, 0x70, 0x7C, 0x8E, 0x95, 0x94, 0x97, 0x9F, 0xA4, 0xA5, 
    0xA7, 0xAA, 0xA8, 0x9F, 0x91, 0x86, 0x82, 0x7E, 0x78, 0x71, 0x6D, 0x69, 0x69, 0x6D, 0x6E, 0x6B, 
    0x6A, 0x6C, 0x6B, 0x6C, 0x73, 0x7F, 0x83, 0x81, 0x85, 0x90, 0x95, 0x91, 0x8C, 0x8A, 0x85, 0x78, 
    0x6E, 0x6B, 0x6B, 0x67, 0x62, 0x5C, 0x59, 0x61, 0x79, 0x89, 0x7D, 0x6F, 0x80, 0x9A, 0x9A, 0x8D, 
    0x95, 0xAD, 0xB4, 0xA5, 0x99, 0x9F, 0xAD, 0xAE, 0x98, 0x81, 0x80, 0x89, 0x83, 0x6E, 0x61, 0x5F, 
    0x5C, 0x54, 0x4E, 0x4D, 0x54, 0x61, 0x67, 0x63, 0x66, 0x7D, 0x93, 0x92, 0x84, 0x83, 0x91, 0x99, 
    0x95, 0x94, 0x9D, 0xA5, 0xA1, 0x94, 0x8D, 0x91, 0x94, 0x88, 0x72, 0x65, 0x68, 0x70, 0x72, 0x6C, 
    0x68, 0x6B, 0x73, 0x76, 0x73, 0x75, 0x7D, 0x7E, 0x74, 0x6F, 0x7D, 0x8F, 0x92, 0x8D, 0x8F, 0x94, 
    0x94, 0x91, 0x92, 0x90, 0x8A, 0x87, 0x88, 0x88, 0x88, 0x8B, 0x8B, 0x86, 0x80, 0x7D, 0x7E, 0x7F, 
    0x7C, 0x76, 0x73, 0x77, 0x79, 0x77, 0x79, 0x81, 0x81, 0x76, 0x71, 0x7A, 0x80, 0x7A, 0x73, 0x74, 
    0x76, 0x77, 0x79, 0x7D, 0x7F, 0x7E, 0x7B, 0x7A, 0x7A, 0x7B, 0x7B, 0x7B, 0x77, 0x6E, 0x6F, 0x84, 
    0x93, 0x86, 0x76, 0x83, 0x94, 0x8A, 0x78, 0x81, 0x95, 0x96, 0x88, 0x80, 0x8A, 0x9C, 0xA2, 0x94, 
    0x82, 0x83, 0x91, 0x91, 0x82, 0x79, 0x7C, 0x7C, 0x74, 0x6D, 0x67, 0x66, 0x69, 0x66, 0x58, 0x51, 
    0x61, 0x73, 0x72, 0x68, 0x70, 0x85, 0x8E, 0x89, 0x8A, 0x96, 0x9E, 0x99, 0x92, 0x93, 0x9E, 0xA7, 
    0xA4, 0x97, 0x8D, 0x8C, 0x8D, 0x87, 0x78, 0x6B, 0x68, 0x6C, 0x69, 0x60, 0x62, 0x71, 0x76, 0x69, 
    0x63, 0x72, 0x81, 0x7E, 0x74, 0x77, 0x83, 0x8A, 0x8B, 0x90, 0x94, 0x96, 0x9A, 0x9B, 0x94, 0x8C, 
    0x8E, 0x93, 0x8C, 0x7D, 0x7A, 0x83, 0x86, 0x7B, 0x6F, 0x73, 0x7A, 0x77, 0x6F, 0x72, 0x7E, 0x82, 
    0x7D, 0x7B, 0x82, 0x89, 0x87, 0x80, 0x7C, 0x7D, 0x80, 0x7F, 0x7B, 0x7A, 0x7E, 0x81, 0x81, 0x7E, 
    0x7A, 0x7B, 0x7B, 0x76, 0x6E, 0x6D, 0x72, 0x74, 0x71, 0x70, 0x72, 0x7B, 0x8B, 0x91, 0x83, 0x77, 
    0x83, 0x90, 0x84, 0x71, 0x7C, 0x96, 0x9A, 0x8A, 0x83, 0x91, 0xA0, 0x9B, 0x87, 0x79, 0x7E, 0x89, 
    0x86, 0x7B, 0x78, 0x81, 0x85, 0x80, 0x77, 0x74, 0x74, 0x72, 0x6A, 0x60, 0x63, 0x73, 0x7E, 0x77, 
    0x6C, 0x74, 0x85, 0x87, 0x7D, 0x7B, 0x86, 0x8C, 0x89, 0x89, 0x92, 0x9D, 0xA2, 0x9D, 0x94, 0x8E, 
    0x8F, 0x91, 0x88, 0x79, 0x72, 0x76, 0x79, 0x74, 0x6F, 0x72, 0x77, 0x72, 0x6A, 0x69, 0x70, 0x76, 
    0x72, 0x6E, 0x71, 0x7B, 0x83, 0x84, 0x82, 0x83, 0x86, 0x88, 0x87, 0x85, 0x87, 0x8C, 0x8D, 0x88, 
    0x83, 0x86, 0x8E, 0x8F, 0x87, 0x82, 0x87, 0x8D, 0x89, 0x83, 0x86, 0x8C, 0x89, 0x80, 0x7C, 0x7D, 
    0x7F, 0x7D, 0x78, 0x73, 0x73, 0x78, 0x7A, 0x77, 0x76, 0x7B, 0x7F, 0x7D, 0x7A, 0x7D, 0x82, 0x82, 
    0x7D, 0x79, 0x7C, 0x81, 0x7F, 0x79, 0x76, 0x77, 0x77, 0x73, 0x70, 0x70, 0x6F, 0x6B, 0x6D, 0x79, 
    0x82, 0x7B, 0x74, 0x7F, 0x8E, 0x8B, 0x7E, 0x81, 0x94, 0x9B, 0x90, 0x87, 0x90, 0x9E, 0xA0, 0x96, 
    0x8B, 0x8A, 0x91, 0x93, 0x8B, 0x83, 0x83, 0x84, 0x80, 0x7A, 0x75, 0x74, 0x72, 0x6D, 0x66, 0x61, 
    0x65, 0x6D, 0x6E, 0x64, 0x62, 0x70, 0x7F, 0x7E, 0x79, 0x7F, 0x88, 0x89, 0x86, 0x8A, 0x90, 0x93, 
    0x94, 0x94, 0x90, 0x8E, 0x94, 0x9B, 0x93, 0x82, 0x7D, 0x85, 0x85, 0x7B, 0x76, 0x7A, 0x7C, 0x75, 
    0x6E, 0x72, 0x78, 0x77, 0x70, 0x6B, 0x6B, 0x6E, 0x74, 0x79, 0x79, 0x76, 0x78, 0x83, 0x88, 0x85, 
    0x83, 0x8A, 0x8D, 0x86, 0x82, 0x88, 0x8F, 0x8C, 0x85, 0x85, 0x89, 0x89, 0x84, 0x83, 0x83, 0x82, 
    0x7F, 0x80, 0x82, 0x80, 0x7F, 0x82, 0x84, 0x81, 0x7F, 0x83, 0x87, 0x83, 0x7F, 0x82, 0x86, 0x84, 
    0x81, 0x81, 0x81, 0x7E, 0x79, 0x77, 0x77, 0x76, 0x74, 0x71, 0x71, 0x71, 0x74, 0x76, 0x76, 0x77, 
    0x78, 0x7A, 0x7C, 0x7D, 0x7C, 0x7C, 0x7C, 0x7C, 0x7A, 0x7B, 0x80, 0x87, 0x86, 0x7D, 0x7A, 0x85, 
    0x8F, 0x88, 0x7C, 0x7F, 0x8A, 0x8B, 0x82, 0x7D, 0x84, 0x8C, 0x8A, 0x80, 0x7C, 0x85, 0x92, 0x92, 
    0x89, 0x85, 0x8C, 0x90, 0x8E, 0x8B, 0x87, 0x81, 0x7D, 0x7A, 0x75, 0x70, 0x72, 0x77, 0x73, 0x67, 
    0x66, 0x72, 0x7A, 0x73, 0x6A, 0x6E, 0x75, 0x75, 0x76, 0x7D, 0x85, 0x88, 0x8B, 0x8E, 0x90, 0x94, 
    0x9B, 0x9E, 0x95, 0x89, 0x89, 0x8F, 0x8D, 0x85, 0x80, 0x80, 0x7D, 0x78, 0x77, 0x79, 0x79, 0x75, 
    0x6E, 0x6B, 0x6A, 0x6D, 0x72, 0x75, 0x73, 0x71, 0x75, 0x7C, 0x7F, 0x7D, 0x7E, 0x80, 0x80, 0x7E, 
    0x7F, 0x86, 0x8C, 0x8B, 0x87, 0x87, 0x8A, 0x8B, 0x8B, 0x8C, 0x8B, 0x88, 0x85, 0x89, 0x8C, 0x8B, 
    0x87, 0x86, 0x86, 0x83, 0x80, 0x7F, 0x7E, 0x7C, 0x79, 0x77, 0x78, 0x79, 0x7B, 0x7D, 0x7C, 0x7A, 
    0x7A, 0x7D, 0x7F, 0x7F, 0x7C, 0x7A, 0x7D, 0x80, 0x80, 0x7E, 0x7E, 0x7F, 0x80, 0x7D, 0x7C, 0x7D, 
    0x7F, 0x7E, 0x7A, 0x78, 0x7A, 0x7B, 0x78, 0x73, 0x71, 0x72, 0x74, 0x73, 0x73, 0x78, 0x7D, 0x7D, 
    0x7A, 0x7E, 0x88, 0x8B, 0x86, 0x84, 0x8B, 0x92, 0x91, 0x8B, 0x8A, 0x8F, 0x93, 0x91, 0x8E, 0x8E, 
    0x90, 0x92, 0x8D, 0x86, 0x81, 0x81, 0x80, 0x7A, 0x74, 0x73, 0x76, 0x77, 0x75, 0x72, 0x71, 0x74, 
    0x76, 0x72, 0x6D, 0x70, 0x76, 0x79, 0x77, 0x77, 0x7D, 0x83, 0x85, 0x83, 0x83, 0x84, 0x87, 0x87, 
    0x86, 0x85, 0x87, 0x8A, 0x89, 0x84, 0x82, 0x86, 0x89, 0x84, 0x7F, 0x80, 0x85, 0x87, 0x84, 0x82, 
    0x84, 0x85, 0x82, 0x7D, 0x7C, 0x7D, 0x7C, 0x78, 0x77, 0x79, 0x7B, 0x7A, 0x78, 0x77, 0x75, 0x75, 
    0x76, 0x76, 0x75, 0x75, 0x79, 0x7D, 0x7D, 0x7C, 0x80, 0x84, 0x83, 0x80, 0x81, 0x85, 0x87, 0x87, 
    0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8B, 0x8B, 0x8A, 0x88, 0x87, 0x86, 0x85, 0x83, 0x81, 0x7F, 0x7C, 
    0x7D, 0x80, 0x80, 0x7D, 0x7C, 0x7E, 0x7F, 0x7D, 0x7C, 0x7E, 0x7F, 0x7D, 0x7C, 0x7F, 0x81, 0x82, 
    0x82, 0x80, 0x7F, 0x7E, 0x7E, 0x7D, 0x7C, 0x7B, 0x7B, 0x7C, 0x7B, 0x78, 0x78, 0x7B, 0x7C, 0x76, 
    0x72, 0x74, 0x77, 0x75, 0x72, 0x71, 0x71, 0x73, 0x76, 0x76, 0x74, 0x76, 0x7E, 0x83, 0x83, 0x84, 
    0x8D, 0x95, 0x94, 0x8F, 0x90, 0x95, 0x97, 0x93, 0x8D, 0x8D, 0x91, 0x92, 0x8D, 0x88, 0x87, 0x87, 
    0x82, 0x7A, 0x76, 0x76, 0x74, 0x72, 0x72, 0x73, 0x73, 0x75, 0x79, 0x7B, 0x77, 0x77, 0x7C, 0x80, 
    0x7E, 0x7B, 0x7F, 0x84, 0x84, 0x82, 0x83, 0x87, 0x87, 0x84, 0x82, 0x82, 0x83, 0x83, 0x82, 0x7F, 
    0x7D, 0x7D, 0x7F, 0x7F, 0x7D, 0x7B, 0x7B, 0x7C, 0x7C, 0x7B, 0x7D, 0x80, 0x81, 0x80, 0x7F, 0x81, 
    0x85, 0x85, 0x81, 0x80, 0x81, 0x81, 0x7F, 0x7D, 0x7D, 0x7D, 0x7B, 0x79, 0x77, 0x77, 0x77, 0x78, 
    0x78, 0x78, 0x78, 0x7A, 0x7E, 0x80, 0x7F, 0x7E, 0x80, 0x82, 0x83, 0x82, 0x83, 0x84, 0x84, 0x83, 
    0x85, 0x88, 0x8A, 0x89, 0x88, 0x87, 0x87, 0x87, 0x87, 0x88, 0x87, 0x85, 0x86, 0x88, 0x89, 0x87, 
    0x87, 0x88, 0x87, 0x81, 0x7F, 0x81, 0x81, 0x7D, 0x7A, 0x7C, 0x7C, 0x7A, 0x7A, 0x7D, 0x7E, 0x7A, 
    0x77, 0x78, 0x79, 0x77, 0x75, 0x74, 0x75, 0x75, 0x75, 0x77, 0x7A, 0x7C, 0x7C, 0x7B, 0x7B, 0x7A, 
    0x7A, 0x7A, 0x7A, 0x7A, 0x79, 0x79, 0x7B, 0x7D, 0x7D, 0x7C, 0x7D, 0x7F, 0x7D, 0x7C, 0x7E, 0x83, 
    0x83, 0x80, 0x81, 0x87, 0x89, 0x89, 0x8A, 0x8D, 0x8E, 0x8C, 0x8C, 0x8E, 0x8E, 0x8B, 0x88, 0x88, 
    0x89, 0x89, 0x88, 0x88, 0x86, 0x85, 0x84, 0x84, 0x83, 0x80, 0x7F, 0x7E, 0x7D, 0x7A, 0x79, 0x7A, 
    0x79, 0x77, 0x76, 0x76, 0x75, 0x74, 0x73, 0x74, 0x74, 0x72, 0x71, 0x75, 0x78, 0x79, 0x7A, 0x7C, 
    0x7E, 0x7E, 0x80, 0x83, 0x84, 0x80, 0x7F, 0x82, 0x85, 0x84, 0x83, 0x85, 0x87, 0x85, 0x83, 0x84, 
    0x85, 0x84, 0x80, 0x7F, 0x7F, 0x7F, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7F, 0x80, 0x81, 0x83, 
    0x83, 0x81, 0x7E, 0x7F, 0x80, 0x7F, 0x7B, 0x79, 0x7A, 0x7B, 0x7A, 0x7A, 0x7D, 0x80, 0x7F, 0x7E, 
    0x80, 0x84, 0x85, 0x84, 0x83, 0x84, 0x85, 0x87, 0x8A, 0x8B, 0x8A, 0x8A, 0x8C, 0x8C, 0x8B, 0x89, 
    0x89, 0x89, 0x85, 0x81, 0x80, 0x81, 0x81, 0x7F, 0x7D, 0x7C, 0x7B, 0x7A, 0x7A, 0x7A, 0x78, 0x76, 
    0x75, 0x75, 0x75, 0x75, 0x75, 0x76, 0x75, 0x74, 0x75, 0x77, 0x78, 0x76, 0x76, 0x78, 0x7A, 0x7B, 
    0x7C, 0x7E, 0x7F, 0x7F, 0x7F, 0x80, 0x81, 0x80, 0x7F, 0x7E, 0x7F, 0x7F, 0x80, 0x81, 0x81, 0x81, 
    0x81, 0x81, 0x82, 0x82, 0x83, 0x85, 0x86, 0x86, 0x87, 0x8A, 0x8C, 0x8B, 0x8A, 0x8A, 0x8B, 0x8B, 
    0x89, 0x88, 0x89, 0x89, 0x86, 0x85, 0x85, 0x85, 0x82, 0x7E, 0x7C, 0x7B, 0x7A, 0x7A, 0x7A, 0x7A, 
    0x79, 0x78, 0x79, 0x7A, 0x79, 0x79, 0x7A, 0x7A, 0x78, 0x78, 0x7A, 0x7C, 0x7C, 0x7A, 0x7A, 0x7B, 
    0x7B, 0x7C, 0x7C, 0x7C, 0x7B, 0x7B, 0x7B, 0x7B, 0x7D, 0x7F, 0x80, 0x80, 0x80, 0x82, 0x85, 0x87, 
    0x86, 0x86, 0x86, 0x87, 0x87, 0x86, 0x85, 0x84, 0x84, 0x82, 0x80, 0x7F, 0x7F, 0x7E, 0x7C, 0x7C, 
    0x7C, 0x7B, 0x7B, 0x7C, 0x7E, 0x7C, 0x7B, 0x7D, 0x7E, 0x7E, 0x7E, 0x80, 0x83, 0x83, 0x82, 0x83, 
    0x85, 0x84, 0x83, 0x82, 0x82, 0x80, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x81, 0x81, 0x80, 0x81, 0x83, 
    0x83, 0x81, 0x80, 0x82, 0x84, 0x84, 0x83, 0x83, 0x85, 0x86, 0x84, 0x83, 0x82, 0x81, 0x7F, 0x7D, 
    0x7C, 0x7C, 0x7B, 0x7A, 0x7A, 0x79, 0x7A, 0x7B, 0x7C, 0x7B, 0x7A, 0x7A, 0x7B, 0x7B, 0x7A, 0x7A, 
    0x7B, 0x7B, 0x7A, 0x7A, 0x7B, 0x7B, 0x7C, 0x7C, 0x7C, 0x7C, 0x7E, 0x81, 0x82, 0x82, 0x81, 0x82, 
    0x82, 0x82, 0x82, 0x81, 0x81, 0x81, 0x82, 0x83, 0x85, 0x86, 0x86, 0x85, 0x85, 0x84, 0x83, 0x82, 
    0x81, 0x7F, 0x7D, 0x7D, 0x7E, 0x80, 0x80, 0x80, 0x80, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 
    0x82, 0x82, 0x82, 0x82, 0x82, 0x80, 0x7F, 0x7D, 0x7D, 0x7D, 0x7D, 0x7C, 0x7C, 0x7D, 0x7E, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x7E, 0x7D, 0x7D, 0x7E, 0x7E, 0x7C, 0x7C, 0x7D, 0x7D, 0x7D, 0x7D, 0x7D, 
    0x7D, 0x7D, 0x7F, 0x80, 0x80, 0x80, 0x82, 0x84, 0x83, 0x82, 0x83, 0x85, 0x84, 0x81, 0x81, 0x83, 
    0x84, 0x83, 0x82, 0x81, 0x81, 0x7F, 0x7F, 0x7E, 0x7E, 0x7D, 0x7C, 0x7D, 0x7E, 0x7F, 0x81, 0x82, 
    0x82, 0x81, 0x81, 0x82, 0x83, 0x82, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x81, 0x81, 0x80, 0x7F, 0x7E, 
    0x7E, 0x7D, 0x7C, 0x7C, 0x7B, 0x7A, 0x7B, 0x7D, 0x80, 0x81, 0x80, 0x81, 0x83, 0x84, 0x84, 0x84, 
    0x83, 0x82, 0x81, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7D, 0x7C, 0x7C, 0x7C, 0x7B, 0x7B, 0x7A, 0x7A, 
    0x7A, 0x7A, 0x7B, 0x7D, 0x7D, 0x7E, 0x7E, 0x7F, 0x80, 0x82, 0x82, 0x82, 0x82, 0x83, 0x83, 0x82, 
    0x82, 0x82, 0x81, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x81, 0x81, 0x81, 0x81, 
    0x82, 0x82, 0x81, 0x81, 0x82, 0x82, 0x81, 0x7F, 0x7E, 0x7E, 0x7F, 0x7E, 0x7C, 0x7C, 0x7D, 0x7E, 
    0x7D, 0x7D, 0x7E, 0x7F, 0x7F, 0x7D, 0x7D, 0x7E, 0x80, 0x81, 0x81, 0x81, 0x82, 0x84, 0x85, 0x84, 
    0x83, 0x83, 0x83, 0x81, 0x7F, 0x7F, 0x80, 0x7F, 0x7E, 0x7E, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x80, 
    0x7F, 0x80, 0x81, 0x82, 0x82, 0x82, 0x83, 0x84, 0x84, 0x84, 0x83, 0x81, 0x7F, 0x7F, 0x7F, 0x7E, 
    0x7D, 0x7C, 0x7D, 0x7D, 0x7D, 0x7C, 0x7D, 0x7D, 0x7B, 0x7A, 0x7A, 0x7B, 0x7C, 0x7B, 0x7B, 0x7C, 
    0x7D, 0x7D, 0x7E, 0x7F, 0x7F, 0x7E, 0x7E, 0x7F, 0x80, 0x80, 0x81, 0x81, 0x81, 0x80, 0x81, 0x82, 
    0x82, 0x80, 0x80, 0x80, 0x81, 0x81, 0x81, 0x82, 0x81, 0x81, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 
    0x7E, 0x7E, 0x80, 0x81, 0x81, 0x81, 0x80, 0x81, 0x81, 0x81, 0x81, 0x81, 0x80, 0x80, 0x80, 0x82, 
    0x83, 0x82, 0x82, 0x82, 0x82, 0x81, 0x81, 0x81, 0x80, 0x7F, 0x7F, 0x7F, 0x7E, 0x7E, 0x7F, 0x7E, 
    0x7D, 0x7B, 0x7C, 0x7D, 0x7D, 0x7D, 0x7D, 0x7E, 0x7E, 0x7E, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x80, 0x81, 0x81, 0x80, 0x80, 0x81, 0x81, 0x81, 0x81, 0x80, 0x80, 0x80, 0x80, 0x82, 0x82, 
    0x82, 0x81, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7D, 0x7C, 0x7B, 0x7B, 0x7C, 0x7C, 0x7D, 0x7D, 0x7E, 
    0x7F, 0x80, 0x81, 0x82, 0x82, 0x82, 0x81, 0x82, 0x82, 0x83, 0x82, 0x81, 0x81, 0x81, 0x82, 0x83, 
    0x83, 0x82, 0x82, 0x81, 0x80, 0x81, 0x82, 0x82, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7E, 
    0x7C, 0x7B, 0x7C, 0x7B, 0x7A, 0x79, 0x7A, 0x7A, 0x7A, 0x7A, 0x7C, 0x7D, 0x7E, 0x7D, 0x7E, 0x7F, 
    0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x81, 0x81, 0x81, 0x82, 0x82, 0x82, 0x82, 0x82, 0x82, 
    0x82, 0x81, 0x81, 0x80, 0x80, 0x7F, 0x7F, 0x7E, 0x7E, 0x7F, 0x7F, 0x7E, 0x7E, 0x7F, 0x80, 0x80, 
    0x80, 0x80, 0x80, 0x81, 0x81, 0x81, 0x82, 0x83, 0x82, 0x82, 0x83, 0x83, 0x82, 0x82, 0x82, 0x81, 
    0x80, 0x80, 0x80, 0x7F, 0x7E, 0x7E, 0x7E, 0x7E, 0x7D, 0x7D, 0x7E, 0x7F, 0x7E, 0x7E, 0x7E, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x80, 0x81, 0x82, 0x81, 0x80, 0x80, 0x80, 0x7F, 0x7F, 
    0x7F, 0x7E, 0x7D, 0x7C, 0x7D, 0x7E, 0x7D, 0x7D, 0x7E, 0x7E, 0x7E, 0x7E, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x80, 0x81, 0x82, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x82, 0x81, 0x80, 0x80, 0x81, 0x81, 
    0x80, 0x80, 0x7F, 0x7E, 0x7E, 0x7E, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
    0x80, 0x81, 0x81, 0x82, 0x82, 0x82, 0x81, 0x80, 0x81, 0x81, 0x80, 0x80, 0x7F, 0x7F, 0x7E, 0x7E, 
    0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7E, 0x7E, 0x7E, 0x7D, 0x7C, 0x7C, 0x7D, 0x7D, 0x7D, 0x7E, 0x7E, 
    0x7E, 0x7E, 0x7F, 0x7F, 0x7E, 0x7E, 0x7E, 0x7E, 0x7F, 0x82, 0x85, 0x88, 0x88, 0x87, 0x85, 0x81, 
    0x7E, 0x7D, 0x7E, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x7C, 0x79, 0x78, 0x78, 0x79, 0x7A, 0x7C, 0x7D, 
    0x7E, 0x7E, 0x7F, 0x80, 0x81, 0x82, 0x82, 0x82, 0x81, 0x81, 0x81, 0x82, 0x83, 0x84, 0x84, 0x84, 
    0x85, 0x85, 0x85, 0x85, 0x85, 0x84, 0x83, 0x81, 0x7F, 0x7E, 0x7D, 0x7D, 0x7E, 0x7E, 0x7E, 0x7D, 
    0x7C, 0x7B, 0x7A, 0x7A, 0x7A, 0x7A, 0x7A, 0x7B, 0x7C, 0x7C, 0x7D, 0x7E, 0x7F, 0x80, 0x80, 0x81, 
    0x81, 0x81, 0x81, 0x81, 0x82, 0x82, 0x83, 0x83, 0x83, 0x82, 0x82, 0x81, 0x81, 0x80, 0x80, 0x80, 
    0x80, 0x81, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 
    0x80, 0x81, 0x81, 0x81, 0x82, 0x82, 0x82, 0x81, 0x81, 0x81, 0x81, 0x80, 0x7F, 0x7E, 0x7E, 0x7E, 
    0x7E, 0x7E, 0x7E, 0x7E, 0x7D, 0x7D, 0x7D, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x81, 
    0x81, 0x81, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x80, 
    0x80, 0x7F, 0x7E, 0x7E, 0x7F, 0x7F, 0x7E, 0x7E, 0x7E, 0x7F, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x80, 
    0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7E, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 
    0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x81, 0x81, 0x81, 0x80, 0x81, 0x81, 0x82, 0x82, 0x82, 0x82, 
    0x81, 0x81, 0x80, 0x7F, 0x7F, 0x80, 0x7F, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7D, 0x7E, 0x7E, 0x7E, 
    0x7E, 0x7D, 0x7E, 0x7E, 0x7E, 0x7F, 0x80, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x80, 0x81, 
    0x81, 0x81, 0x81, 0x81, 0x81, 0x82, 0x81, 0x7F, 0x7F, 0x7F, 0x7F, 0x7E, 0x7E, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x81, 0x81, 0x81, 0x81, 0x82, 0x82, 0x82, 0x82, 0x82, 
    0x81, 0x81, 0x81, 0x80, 0x7E, 0x7D, 0x7E, 0x7E, 0x7D, 0x7D, 0x7E, 0x7E, 0x7D, 0x7C, 0x7C, 0x7D, 
    0x7E, 0x7E, 0x7E, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x81, 
    0x81, 0x81, 0x81, 0x81, 0x81, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 
    0x80, 0x80, 0x7F, 0x7E, 0x7D, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7F, 0x7F, 0x7E, 0x7E, 0x7E, 0x7E, 
    0x7D, 0x7D, 0x7D, 0x7E, 0x7E, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x81, 0x81, 0x81, 0x81, 0x81, 
    0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x81, 0x82, 0x82, 0x82, 0x82, 0x81, 0x80, 0x80, 0x80, 0x7F, 
    0x7E, 0x7E, 0x7F, 0x7F, 0x7E, 0x7E, 0x7F, 0x7E, 0x7D, 0x7D, 0x7D, 0x7D, 0x7D, 0x7D, 0x7D, 0x7E, 
    0x7E, 0x7F, 0x80, 0x81, 0x81, 0x82, 0x82, 0x81, 0x81, 0x82, 0x81, 0x81, 0x81, 0x82, 0x82, 0x81, 
    0x81, 0x81, 0x81, 0x80, 0x7F, 0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7F, 0x80, 0x80, 0x81, 0x81, 0x81, 
    0x81, 0x81, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7E, 0x7E, 0x7E, 
    0x7E, 0x7D, 0x7C, 0x7D, 0x7D, 0x7E, 0x7E, 0x7E, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x81, 0x81, 0x81, 
    0x80, 0x81, 0x82, 0x82, 0x81, 0x81, 0x81, 0x81, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 
    0x80, 0x81, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7E, 0x7D, 0x7D, 0x7D, 0x7E, 0x7E, 0x7D, 0x7E, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 
    0x80, 0x81, 0x81, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x81, 
    0x81, 0x82, 0x81, 0x81, 0x81, 0x81, 0x81, 0x80, 0x80, 0x80, 0x81, 0x81, 0x80, 0x80, 0x80, 0x80, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7E, 0x7E, 0x7F, 0x7F, 0x7E, 0x7E, 0x7F, 0x7F, 0x7E, 0x7E, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x81, 0x81, 0x81, 
    0x81, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x7F, 0x7E, 
    0x7E, 0x7E, 0x7E, 0x7E, 0x7E, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 
    0x80, 0x80, 0x80, 0x80, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 
    0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x81, 0x81, 0x81, 0x81, 0x80, 
    0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7E, 0x7F, 0x7F, 0x7F, 0x7E, 0x7E, 0x7E, 0x7E, 
    0x7E, 0x7E, 0x7E, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
    0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
    0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x80, 0x80, 0x80, 0x80, 0x81, 0x81, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x80, 
    0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 
    0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
    0x80, 0x81, 0x80, 0x81, 0x81, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 
    0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7E, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
    0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 
    0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x80, 
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
    0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
    0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
    0x80, 0x80, 0x80, 0x81, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 
    0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 
    0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
    0x80, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 
    0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 
    0x80, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
    0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
    0x80, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 
    0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
    0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 
    0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 
    0x80, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
    0x80, 0x80, 0x80, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 
    0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 
    0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x80, 
    0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x80, 
    0x80, 0x80, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 
    0x80, 0x80, 0x7F, 0x80, 0x80, 0x7F, 0x80, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 
    0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 
    0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x7F, 
    0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
    0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 
    0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x80, 
    0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x80, 
    0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x80, 
    0x80, 0x7F, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x80, 0x80, 
    0x7F, 0x7F, 0x7F, 0x80, 0x7F, 0x7F, 0x80, 0x80, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F
};

static MemorySource *sampleSource = NULL;
static NRF52PWM *speaker = NULL;
static StreamNormalizer *normalizer = NULL;
//static SerialStreamer *streamer = NULL;
static Synthesizer* synth = NULL;
static SoundEmojiSynthesizer* emojiSynth = NULL;
static SerialStreamer *streamer = NULL;

void
synthesizer_test()
{
    DMESG("SYNTHESIZER TEST: STARTING...");

    if (synth == NULL)
        synth = new Synthesizer();

    if (normalizer == NULL)
        normalizer = new StreamNormalizer(synth->output, 1.0f, false, DATASTREAM_FORMAT_16BIT_UNSIGNED);

    if (speaker == NULL)
        speaker = new NRF52PWM(NRF_PWM1, synth->output, synth->getSampleRate());
    
    
    //if (streamer == NULL)
    //    streamer = new SerialStreamer(normalizer->output, SERIAL_STREAM_MODE_DECIMAL);

    // Define that we'd like the PWM to start low for each sample.
    normalizer->setGain((float) speaker->getSampleRange() / 1023.0f);
    normalizer->setOrMask(0x8000);

    speaker->setDecoderMode(PWM_DECODER_LOAD_Common);
    speaker->connectPin(uBit.io.speaker, 0);
    speaker->connectPin(uBit.io.P0, 1);

    synth->setTone(Synthesizer::SquareWaveTone);
   
    uBit.io.speaker.setHighDrive(true);

    while(1)
    {
        DMESG("CYCLE START...");
        //sampleSource->play(middleC, sizeof(middleC), 1);
        synth->setFrequency(440, 10000);
        uBit.sleep(1000);

        //sampleSource->play(hello, sizeof(hello));
        //sampleSource->play(middleC, sizeof(middleC), 130);
        //sampleSource->play(middleD, sizeof(middleD), 150);
        //sampleSource->play(middleE, sizeof(middleE), 165);
    
    } 

    // Should never get here...
    DMESG("SYNTHESIZER TEST: EXITING...");
}

void
sound_emoji_test()
{
    DMESG("SOUND_EMOJI TEST: STARTING...");

    if (emojiSynth == NULL)
        emojiSynth = new SoundEmojiSynthesizer(44100);

    DMESG("SOUND_EMOJI TEST: SYNTH INITIALISED... ");

    if (speaker == NULL)
        speaker = new NRF52PWM(NRF_PWM1, *emojiSynth, 44100);

    DMESG("SOUND_EMOJI TEST: PWM INITIALISED... ");

    emojiSynth->setSampleRange(speaker->getSampleRange());
    emojiSynth->setOrMask(0x8000);

    speaker->setDecoderMode(PWM_DECODER_LOAD_Common);
    speaker->connectPin(uBit.io.P0, 0);
    //speaker->connectPin(uBit.io.speaker, 1);

    uBit.io.speaker.setHighDrive(true);

    DMESG("SOUND_EMOJI TEST: RUNNING... ");

    ManagedBuffer b(sizeof(SoundEffect));
    SoundEffect *fx = (SoundEffect *)&b[0];

    fx->duration = 1000;
    fx->tone.tonePrint = Synthesizer::SquareWaveTone;
    fx->frequency = 130.81f;
    fx->volume = 1.0f;

    fx->effects[0].effect = SoundSynthesizerEffects::appregrioAscending;
    fx->effects[0].parameter_p[0] = MusicalProgressions::pentatonic;
    fx->effects[0].steps = 12;

    while(1)
    {
        DMESG("SOUND_EMOJI TEST: PLAY... ");
        emojiSynth->play(b);
        uBit.sleep(3000);
    }

    // Should never get here...
    DMESG("SOUND_EMOJI TEST: EXITING...");
}

void
sound_emoji_streamer()
{
    DMESG("SOUND_EMOJI STREAMER: STARTING...");

    if (emojiSynth == NULL)
        emojiSynth = new SoundEmojiSynthesizer(44100);

    DMESG("SOUND_EMOJI TEST: SYNTH INITIALISED... ");

    emojiSynth->setSampleRange(352);
    //emojiSynth->setOrMask(0x8000);

    if (streamer == NULL)
        streamer = new SerialStreamer(*emojiSynth, SERIAL_STREAM_MODE_DECIMAL);

    ManagedBuffer b(sizeof(SoundEffect));
    SoundEffect *fx = (SoundEffect *)&b[0];

    fx->duration = 1000;
    fx->tone.tonePrint = Synthesizer::SquareWaveTone;
    fx->frequency = 130.81f;
    fx->volume = 1.0f;
    
    emojiSynth->play(b);

    //fx->effects[0].effect = SoundSynthesizerEffects::appregrioAscending;
    //fx->effects[0].parameter_p[0] = MusicalProgressions::pentatonic;
    //fx->effects[0].steps = 12;

    while(1)
    {
        DMESG("PING...");
        uBit.sleep(1000);
    }
}



void
speaker_test(int plays)
{
    DMESG("SPEAKER TEST: STARTING...");

    if (sampleSource == NULL){
        sampleSource = new MemorySource();
        sampleSource->setFormat(DATASTREAM_FORMAT_8BIT_UNSIGNED);
    }

    if (normalizer == NULL)
        normalizer = new StreamNormalizer(sampleSource->output, 1.0f, false, DATASTREAM_FORMAT_16BIT_UNSIGNED);

    if (speaker == NULL)
        speaker = new NRF52PWM(NRF_PWM1, normalizer->output, 16000);

    //if (streamer == NULL)
    //    streamer = new SerialStreamer(normalizer->output, SERIAL_STREAM_MODE_DECIMAL);

    // Define that we'd like the PWM to start low for each sample.
    normalizer->setOrMask(0x8000);

    speaker->setDecoderMode(PWM_DECODER_LOAD_Common);
    speaker->connectPin(uBit.io.speaker, 0);
    speaker->connectPin(uBit.io.P0, 1);
   
    uBit.io.speaker.setHighDrive(true);

    DMESG("SPEAKER TEST: WOBBLING... [max: %d]", speaker->getSampleRange());
    normalizer->setGain((float) speaker->getSampleRange() / 255.0f);

    do
    {
        DMESG("CYCLE START...");
        //sampleSource->play(middleC, sizeof(middleC), 1);
        uBit.sleep(1000);

        sampleSource->play(hello, sizeof(hello));
        //sampleSource->play(middleC, sizeof(middleC), 130);
        //sampleSource->play(middleD, sizeof(middleD), 150);
        //sampleSource->play(middleE, sizeof(middleE), 165);

        if (plays > 1)
            plays--;
    
    } while (plays != 1);

    // Should never get here...
    DMESG("SPEAKER TEST: EXITING...");
}

void
square_wave_test()
{
    // Enable the High Frequency clock on the processor. This is a pre-requisite for
    // the RADIO module. Without this clock, no communication is possible.
    NRF_CLOCK->EVENTS_HFCLKSTARTED = 0;
    NRF_CLOCK->TASKS_HFCLKSTART = 1;
    while (NRF_CLOCK->EVENTS_HFCLKSTARTED == 0);

    uint16_t pwm_seq[4] = {8000, 0x8000 | 8000, 8000, 0x8000 | 8000};
    NRF_PWM0->PSEL.OUT[0] = (uBit.io.speaker.name << PWM_PSEL_OUT_PIN_Pos) | (PWM_PSEL_OUT_CONNECT_Connected << PWM_PSEL_OUT_CONNECT_Pos);
    NRF_PWM0->PSEL.OUT[1] = (uBit.io.P0.name << PWM_PSEL_OUT_PIN_Pos) | (PWM_PSEL_OUT_CONNECT_Connected << PWM_PSEL_OUT_CONNECT_Pos);
    NRF_PWM0->ENABLE = (PWM_ENABLE_ENABLE_Enabled << PWM_ENABLE_ENABLE_Pos);
    NRF_PWM0->MODE = (PWM_MODE_UPDOWN_Up << PWM_MODE_UPDOWN_Pos);
    NRF_PWM0->PRESCALER = (PWM_PRESCALER_PRESCALER_DIV_1 << PWM_PRESCALER_PRESCALER_Pos);
    NRF_PWM0->COUNTERTOP = (16000 << PWM_COUNTERTOP_COUNTERTOP_Pos); 
    NRF_PWM0->LOOP = (PWM_LOOP_CNT_Disabled << PWM_LOOP_CNT_Pos);
    NRF_PWM0->DECODER = (PWM_DECODER_LOAD_Individual << PWM_DECODER_LOAD_Pos) | (PWM_DECODER_MODE_RefreshCount << PWM_DECODER_MODE_Pos);
    NRF_PWM0->SEQ[0].PTR = ((uint32_t)(pwm_seq) << PWM_SEQ_PTR_PTR_Pos);
    NRF_PWM0->SEQ[0].CNT = ((sizeof(pwm_seq) / sizeof(uint16_t)) << PWM_SEQ_CNT_CNT_Pos);

    NRF_PWM0->SEQ[0].REFRESH = 0;
    NRF_PWM0->SEQ[0].ENDDELAY = 0;
    NRF_PWM0->SHORTS = 0x04;
    NRF_PWM0->INTEN = 0;
    NRF_PWM0->TASKS_SEQSTART[0] = 1;

    while(1)
        uBit.display.scroll("SQUAREWAVE");

    // Should never get here...
    DMESG("SQUAREWAVE_TEST: EXITING...");
}

void
speaker_test2(int plays)
{
    DMESG("SPEAKER TEST2:");

    // Disable RUN_MIC
    uBit.io.runmic.setDigitalValue(0);

    uBit.io.speaker.setAnalogValue(512);

    do
    {
        uBit.io.speaker.setAnalogPeriodUs(1911);
        uBit.sleep(200);
        uBit.io.speaker.setAnalogPeriodUs(1702);
        uBit.sleep(200);
        uBit.io.speaker.setAnalogPeriodUs(1517);
        uBit.sleep(200);

        if (plays > 1)
            plays--;

    } while (plays != 1);

    uBit.io.speaker.setAnalogValue(0);

    DMESG("SPEAKER TEST2: EXITING...");
}


/* **Woodpecker speaker alarm added** */
void
speaker_woodpecker_alarm(int plays)
{
    DMESG("SPEAKER WOODPECKER ALARM:");

    // Disable RUN_MIC
    uBit.io.runmic.setDigitalValue(0);

    uBit.io.speaker.setAnalogValue(512);

    do
    {
        uBit.io.speaker.setAnalogPeriodUs(100);
        uBit.sleep(200);
        uBit.io.speaker.setAnalogPeriodUs(1000);
        uBit.sleep(200);
        uBit.io.speaker.setAnalogPeriodUs(100);
        uBit.sleep(200);

        if (plays > 1)
            plays--;

    } while (plays != 1);

    uBit.io.speaker.setAnalogValue(0);

    DMESG("SPEAKER WOODPECKER ALARM: EXITING...");
}

#ifdef CODE_TO_DERIVE_STEPSCOUNT_LIKE_JOSEPHINES_JS_SYNTH

static const KeyValueTableEntry soundEmojiTonePrintData[] = {
    {0, (const uint32_t) Synthesizer::SineTone},
    {1, (const uint32_t) Synthesizer::SawtoothTone},
    {2, (const uint32_t) Synthesizer::TriangleTone},
    {3, (const uint32_t) Synthesizer::SquareWaveTone},
    {4, (const uint32_t) Synthesizer::NoiseTone},
    {5, (const uint32_t) Synthesizer::SquareWaveToneExt}
};
CREATE_KEY_VALUE_TABLE(soundEmojiTonePrint, soundEmojiTonePrintData);

static const KeyValueTableEntry soundEmojiInterpolatorsData[] = {
    {0, (const uint32_t) SoundSynthesizerEffects::noInterpolation},
    {1, (const uint32_t) SoundSynthesizerEffects::linearInterpolation},
    {2, (const uint32_t) SoundSynthesizerEffects::curveInterpolation},
    {3, (const uint32_t) SoundSynthesizerEffects::slowVibratoEffect},
    {4, (const uint32_t) SoundSynthesizerEffects::warbleInterpolation},
    {5, (const uint32_t) SoundSynthesizerEffects::exponentialRisingInterpolation},
    {6, (const uint32_t) SoundSynthesizerEffects::exponentialFallingInterpolation},
    {7, (const uint32_t) SoundSynthesizerEffects::vibratoEffect},
    {8, (const uint32_t) SoundSynthesizerEffects::majAppregrioAscendInterpolation},
    {9, (const uint32_t) SoundSynthesizerEffects::majAppregrioDescendInterpolation},
    {10, (const uint32_t) SoundSynthesizerEffects::minAppregrioAscendInterpolation},
    {11, (const uint32_t) SoundSynthesizerEffects::minAppregrioDescendInterpolation},
    {12, (const uint32_t) SoundSynthesizerEffects::dimAppregrioAscendInterpolation},
    {13, (const uint32_t) SoundSynthesizerEffects::dimAppregrioDescendInterpolation},
    {14, (const uint32_t) SoundSynthesizerEffects::chromaticAppregrioAscendInterpolation},
    {15, (const uint32_t) SoundSynthesizerEffects::chromaticAppregrioDescendInterpolation},
    {16, (const uint32_t) SoundSynthesizerEffects::toneAppregrioAscendInterpolation},
    {17, (const uint32_t) SoundSynthesizerEffects::toneAppregrioDescendInterpolation},
    {20, (const uint32_t) SoundSynthesizerEffects::logarithmicInterpolation}

};
CREATE_KEY_VALUE_TABLE(soundEmojiInterpolators, soundEmojiInterpolatorsData);

static const KeyValueTableEntry soundEmojiStepsData[] = {
    {500, 9},
    {1150, 15},
    {1800, 20},
    {2070, 50},
    {2100, 90}
};
CREATE_KEY_VALUE_TABLE(soundEmojiSteps, soundEmojiStepsData);

    // Define the number of steps in the effect. This seems fairly arbitrary, but maintaining here for compatibility...
    // TODO: Simply replace all this with a configurable parameter???
    step = 0;
    steps = soundEmojiSteps.find(effect->duration)->value;

    // major/minor effects have four steps.
    if (effect->effect >=8 && effect->effect < 12)
        steps = 4;

    // diminished effects have five steps.
    if (effect->effect >=12 && effect->effect < 14)
        steps = 5;

    // chromatic effects have 13 steps.
    if (effect->effect >=14 && effect->effect < 15)
        steps = 13;

    // wholetone effects have 7 steps.
    if (effect->effect >=16 && effect->effect < 18)
        steps = 7;

#endif