/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   C:/ncs/nRF-Beehavior-Firmware/timeThing/build/mcuboot/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   C:/ncs/nrf/dts/bindings, C:/ncs/nrf/boards/arm/thingy91_nrf9160/dts/bindings, $ZEPHYR_BASE\dts\bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /soc
 *   4   /soc/peripheral@50000000
 *   5   /soc/peripheral@50000000/gpio@842500
 *   6   /gpio-reset
 *   7   /pin-controller
 *   8   /buttons
 *   9   /buttons/button_0
 *   10  /cpus
 *   11  /cpus/cpu@0
 *   12  /cpus/cpu@0/mpu@e000ed90
 *   13  /leds
 *   14  /leds/led_1
 *   15  /leds/led_2
 *   16  /leds/led_3
 *   17  /leds/led_4
 *   18  /leds/led_5
 *   19  /leds/led_6
 *   20  /reserved-memory
 *   21  /reserved-memory/image_bsd@20010000
 *   22  /reserved-memory/image_ns@20020000
 *   23  /reserved-memory/image_s@20000000
 *   24  /soc/ficr@ff0000
 *   25  /soc/interrupt-controller@e000e100
 *   26  /soc/gpiote@5000d000
 *   27  /soc/memory@20000000
 *   28  /soc/spu@50003000
 *   29  /soc/timer@e000e010
 *   30  /soc/uicr@ff8000
 *   31  /soc/crypto@50840000
 *   32  /soc/crypto@50840000/crypto@50841000
 *   33  /soc/peripheral@50000000/adc@e000
 *   34  /soc/peripheral@50000000/clock@5000
 *   35  /soc/peripheral@50000000/dppic@17000
 *   36  /soc/peripheral@50000000/egu@1b000
 *   37  /soc/peripheral@50000000/egu@1c000
 *   38  /soc/peripheral@50000000/egu@1d000
 *   39  /soc/peripheral@50000000/egu@1e000
 *   40  /soc/peripheral@50000000/egu@1f000
 *   41  /soc/peripheral@50000000/egu@20000
 *   42  /soc/peripheral@50000000/i2c@8000
 *   43  /soc/peripheral@50000000/i2c@9000
 *   44  /soc/peripheral@50000000/i2c@b000
 *   45  /soc/peripheral@50000000/i2s@28000
 *   46  /soc/peripheral@50000000/kmu@39000
 *   47  /soc/peripheral@50000000/pdm@26000
 *   48  /soc/peripheral@50000000/power@5000
 *   49  /soc/peripheral@50000000/pwm@21000
 *   50  /soc/peripheral@50000000/pwm@22000
 *   51  /soc/peripheral@50000000/pwm@23000
 *   52  /soc/peripheral@50000000/pwm@24000
 *   53  /soc/peripheral@50000000/regulator@4000
 *   54  /soc/peripheral@50000000/rtc@14000
 *   55  /soc/peripheral@50000000/rtc@15000
 *   56  /soc/peripheral@50000000/spi@8000
 *   57  /soc/peripheral@50000000/spi@9000
 *   58  /soc/peripheral@50000000/spi@a000
 *   59  /soc/peripheral@50000000/timer@f000
 *   60  /soc/peripheral@50000000/timer@10000
 *   61  /soc/peripheral@50000000/timer@11000
 *   62  /soc/peripheral@50000000/uart@8000
 *   63  /soc/peripheral@50000000/uart@9000
 *   64  /soc/peripheral@50000000/uart@a000
 *   65  /soc/peripheral@50000000/uart@b000
 *   66  /soc/peripheral@50000000/vmc@3a000
 *   67  /soc/peripheral@50000000/watchdog@18000
 *   68  /soc/peripheral@50000000/flash-controller@39000
 *   69  /soc/peripheral@50000000/flash-controller@39000/flash@0
 *   70  /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions
 *   71  /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@0
 *   72  /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@10000
 *   73  /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@40000
 *   74  /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@80000
 *   75  /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@b0000
 *   76  /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@f0000
 *   77  /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@fa000
 *   78  /soc/peripheral@50000000/i2c@a000
 *   79  /soc/peripheral@50000000/i2c@a000/bh1749@38
 *   80  /soc/peripheral@50000000/i2c@a000/bme680@76
 *   81  /soc/peripheral@50000000/spi@b000
 *   82  /soc/peripheral@50000000/spi@b000/adxl362@0
 *   83  /soc/peripheral@50000000/spi@b000/adxl372@1
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_pin_controller) fn(DT_N_S_cpus) fn(DT_N_S_buttons) fn(DT_N_S_leds) fn(DT_N_S_gpio_reset) fn(DT_N_S_reserved_memory)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_gpio_reset, __VA_ARGS__) fn(DT_N_S_reserved_memory, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_pin_controller) fn(DT_N_S_cpus) fn(DT_N_S_buttons) fn(DT_N_S_leds) fn(DT_N_S_gpio_reset) fn(DT_N_S_reserved_memory) 
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_gpio_reset, __VA_ARGS__) fn(DT_N_S_reserved_memory, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_ORD 0

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /soc */ \
	6, /* /gpio-reset */ \
	7, /* /pin-controller */ \
	8, /* /buttons */ \
	10, /* /cpus */ \
	13, /* /leds */ \
	20, /* /reserved-memory */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_nordic_thingy91_nrf9160 DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_COMPAT_MATCHES_nordic_thingy91_nrf9160 1
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"nordic,thingy91-nrf9160"}
#define DT_N_P_compatible_IDX_0 "nordic,thingy91-nrf9160"
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_peripheral_50000000) fn(DT_N_S_soc_S_crypto_50840000) fn(DT_N_S_soc_S_gpiote_5000d000) fn(DT_N_S_soc_S_spu_50003000) fn(DT_N_S_soc_S_ficr_ff0000) fn(DT_N_S_soc_S_uicr_ff8000)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_crypto_50840000, __VA_ARGS__) fn(DT_N_S_soc_S_gpiote_5000d000, __VA_ARGS__) fn(DT_N_S_soc_S_spu_50003000, __VA_ARGS__) fn(DT_N_S_soc_S_ficr_ff0000, __VA_ARGS__) fn(DT_N_S_soc_S_uicr_ff8000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_peripheral_50000000) fn(DT_N_S_soc_S_crypto_50840000) fn(DT_N_S_soc_S_gpiote_5000d000) fn(DT_N_S_soc_S_spu_50003000) fn(DT_N_S_soc_S_ficr_ff0000) fn(DT_N_S_soc_S_uicr_ff8000) 
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_crypto_50840000, __VA_ARGS__) fn(DT_N_S_soc_S_gpiote_5000d000, __VA_ARGS__) fn(DT_N_S_soc_S_spu_50003000, __VA_ARGS__) fn(DT_N_S_soc_S_ficr_ff0000, __VA_ARGS__) fn(DT_N_S_soc_S_uicr_ff8000, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 3

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	24, /* /soc/ficr@ff0000 */ \
	25, /* /soc/interrupt-controller@e000e100 */ \
	26, /* /soc/gpiote@5000d000 */ \
	27, /* /soc/memory@20000000 */ \
	28, /* /soc/spu@50003000 */ \
	29, /* /soc/timer@e000e010 */ \
	30, /* /soc/uicr@ff8000 */ \
	31, /* /soc/crypto@50840000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_nordic_nrf9160_sica DT_N_S_soc
#define DT_N_INST_0_nordic_nrf9160      DT_N_S_soc
#define DT_N_INST_0_nordic_nrf91        DT_N_S_soc
#define DT_N_INST_0_simple_bus          DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_COMPAT_MATCHES_nordic_nrf9160_sica 1
#define DT_N_S_soc_COMPAT_MATCHES_nordic_nrf9160 1
#define DT_N_S_soc_COMPAT_MATCHES_nordic_nrf91 1
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"nordic,nRF9160-SICA", "nordic,nRF9160", "nordic,nRF91", "simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "nordic,nRF9160-SICA"
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_1 "nordic,nRF9160"
#define DT_N_S_soc_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_2 "nordic,nRF91"
#define DT_N_S_soc_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_3 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_3_EXISTS 1
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0) \
	fn(DT_N_S_soc, compatible, 1) \
	fn(DT_N_S_soc, compatible, 2) \
	fn(DT_N_S_soc, compatible, 3)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 2, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 3, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 4
#define DT_N_S_soc_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_PATH "/soc/peripheral@50000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_FULL_NAME "peripheral@50000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_peripheral_50000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000) fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000) fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1b000) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1c000) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1d000) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1e000) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1f000) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_20000) fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000) fn(DT_N_S_soc_S_peripheral_50000000_S_kmu_39000) fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000) fn(DT_N_S_soc_S_peripheral_50000000_S_regulator_4000) fn(DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000) fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000) fn(DT_N_S_soc_S_peripheral_50000000_S_power_5000) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000)
#define DT_N_S_soc_S_peripheral_50000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1b000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1c000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1d000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1e000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1f000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_20000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_kmu_39000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_regulator_4000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_power_5000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000) fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000) fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1b000) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1c000) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1d000) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1e000) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1f000) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_20000) fn(DT_N_S_soc_S_peripheral_50000000_S_kmu_39000) fn(DT_N_S_soc_S_peripheral_50000000_S_regulator_4000) fn(DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000) fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000) fn(DT_N_S_soc_S_peripheral_50000000_S_power_5000) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000) 
#define DT_N_S_soc_S_peripheral_50000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1b000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1c000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1d000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1e000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1f000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_20000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_kmu_39000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_regulator_4000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_power_5000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_ORD 4

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_SUPPORTS_ORDS \
	5, /* /soc/peripheral@50000000/gpio@842500 */ \
	33, /* /soc/peripheral@50000000/adc@e000 */ \
	34, /* /soc/peripheral@50000000/clock@5000 */ \
	35, /* /soc/peripheral@50000000/dppic@17000 */ \
	36, /* /soc/peripheral@50000000/egu@1b000 */ \
	37, /* /soc/peripheral@50000000/egu@1c000 */ \
	38, /* /soc/peripheral@50000000/egu@1d000 */ \
	39, /* /soc/peripheral@50000000/egu@1e000 */ \
	40, /* /soc/peripheral@50000000/egu@1f000 */ \
	41, /* /soc/peripheral@50000000/egu@20000 */ \
	42, /* /soc/peripheral@50000000/i2c@8000 */ \
	43, /* /soc/peripheral@50000000/i2c@9000 */ \
	44, /* /soc/peripheral@50000000/i2c@b000 */ \
	45, /* /soc/peripheral@50000000/i2s@28000 */ \
	46, /* /soc/peripheral@50000000/kmu@39000 */ \
	47, /* /soc/peripheral@50000000/pdm@26000 */ \
	48, /* /soc/peripheral@50000000/power@5000 */ \
	49, /* /soc/peripheral@50000000/pwm@21000 */ \
	50, /* /soc/peripheral@50000000/pwm@22000 */ \
	51, /* /soc/peripheral@50000000/pwm@23000 */ \
	52, /* /soc/peripheral@50000000/pwm@24000 */ \
	53, /* /soc/peripheral@50000000/regulator@4000 */ \
	54, /* /soc/peripheral@50000000/rtc@14000 */ \
	55, /* /soc/peripheral@50000000/rtc@15000 */ \
	56, /* /soc/peripheral@50000000/spi@8000 */ \
	57, /* /soc/peripheral@50000000/spi@9000 */ \
	58, /* /soc/peripheral@50000000/spi@a000 */ \
	59, /* /soc/peripheral@50000000/timer@f000 */ \
	60, /* /soc/peripheral@50000000/timer@10000 */ \
	61, /* /soc/peripheral@50000000/timer@11000 */ \
	62, /* /soc/peripheral@50000000/uart@8000 */ \
	63, /* /soc/peripheral@50000000/uart@9000 */ \
	64, /* /soc/peripheral@50000000/uart@a000 */ \
	65, /* /soc/peripheral@50000000/uart@b000 */ \
	66, /* /soc/peripheral@50000000/vmc@3a000 */ \
	67, /* /soc/peripheral@50000000/watchdog@18000 */ \
	68, /* /soc/peripheral@50000000/flash-controller@39000 */ \
	78, /* /soc/peripheral@50000000/i2c@a000 */ \
	81, /* /soc/peripheral@50000000/spi@b000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_REG_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_RANGES_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_RANGES_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_RANGES_IDX_0_VAL_CHILD_BUS_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_peripheral_50000000_RANGES_IDX_0_VAL_PARENT_BUS_ADDRESS 1342177280 /* 0x50000000 */
#define DT_N_S_soc_S_peripheral_50000000_RANGES_IDX_0_VAL_LENGTH 268435456 /* 0x10000000 */
#define DT_N_S_soc_S_peripheral_50000000_FOREACH_RANGE(fn) fn(DT_N_S_soc_S_peripheral_50000000, 0)
#define DT_N_S_soc_S_peripheral_50000000_IRQ_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/peripheral@50000000/gpio@842500
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_gpio_842500
 *
 * Binding (compatible = nordic,nrf-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\nordic,nrf-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_PATH "/soc/peripheral@50000000/gpio@842500"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_FULL_NAME "gpio@842500"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_ORD 5

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_SUPPORTS_ORDS \
	6, /* /gpio-reset */ \
	9, /* /buttons/button_0 */ \
	14, /* /leds/led_1 */ \
	15, /* /leds/led_2 */ \
	16, /* /leds/led_3 */ \
	17, /* /leds/led_4 */ \
	18, /* /leds/led_5 */ \
	19, /* /leds/led_6 */ \
	79, /* /soc/peripheral@50000000/i2c@a000/bh1749@38 */ \
	81, /* /soc/peripheral@50000000/spi@b000 */ \
	82, /* /soc/peripheral@50000000/spi@b000/adxl362@0 */ \
	83, /* /soc/peripheral@50000000/spi@b000/adxl372@1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_EXISTS 1
#define DT_N_INST_0_nordic_nrf_gpio DT_N_S_soc_S_peripheral_50000000_S_gpio_842500
#define DT_N_NODELABEL_gpio0        DT_N_S_soc_S_peripheral_50000000_S_gpio_842500

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_REG_IDX_0_VAL_ADDRESS 1350837504 /* 0x50842500 */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_REG_IDX_0_VAL_SIZE 768 /* 0x300 */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_IRQ_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_COMPAT_MATCHES_nordic_nrf_gpio 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_reg {8660224 /* 0x842500 */, 768 /* 0x300 */}
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_reg_IDX_0 8660224
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_reg_IDX_1 768
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_label "GPIO_0"
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_label_STRING_TOKEN GPIO_0
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_label_STRING_UPPER_TOKEN GPIO_0
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, label, 5)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_port 0
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_port_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_gpio_controller 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_ngpios 32
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_compatible {"nordic,nrf-gpio"}
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_compatible_IDX_0 "nordic,nrf-gpio"
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_gpio_842500_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /gpio-reset
 *
 * Node identifier: DT_N_S_gpio_reset
 *
 * Binding (compatible = nordic,thingy91-nrf52840-reset):
 *   C:/ncs/nrf/boards/arm/thingy91_nrf9160/dts/bindings\nordic,thingy91-nrf52840-reset.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_reset_PATH "/gpio-reset"

/* Node's name with unit-address: */
#define DT_N_S_gpio_reset_FULL_NAME "gpio-reset"

/* Node parent (/) identifier: */
#define DT_N_S_gpio_reset_PARENT DT_N
#define DT_N_S_gpio_reset_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_reset_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_reset_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_reset_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_reset_ORD 6

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_reset_REQUIRES_ORDS \
	0, /* / */ \
	5, /* /soc/peripheral@50000000/gpio@842500 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_reset_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_reset_EXISTS 1
#define DT_N_INST_0_nordic_thingy91_nrf52840_reset DT_N_S_gpio_reset
#define DT_N_NODELABEL_nrf52840_reset              DT_N_S_gpio_reset

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_reset_REG_NUM 0
#define DT_N_S_gpio_reset_RANGES_NUM 0
#define DT_N_S_gpio_reset_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_reset_IRQ_NUM 0
#define DT_N_S_gpio_reset_COMPAT_MATCHES_nordic_thingy91_nrf52840_reset 1
#define DT_N_S_gpio_reset_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_reset_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_reset_P_status "okay"
#define DT_N_S_gpio_reset_P_status_STRING_TOKEN okay
#define DT_N_S_gpio_reset_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_gpio_reset_P_status_ENUM_IDX 1
#define DT_N_S_gpio_reset_P_status_ENUM_TOKEN okay
#define DT_N_S_gpio_reset_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_gpio_reset_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_reset, status, 0) \
	fn(DT_N_S_gpio_reset, status, 1) \
	fn(DT_N_S_gpio_reset, status, 2) \
	fn(DT_N_S_gpio_reset, status, 3)
#define DT_N_S_gpio_reset_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_reset, status, 0, __VA_ARGS__) \
	fn(DT_N_S_gpio_reset, status, 1, __VA_ARGS__) \
	fn(DT_N_S_gpio_reset, status, 2, __VA_ARGS__) \
	fn(DT_N_S_gpio_reset, status, 3, __VA_ARGS__)
#define DT_N_S_gpio_reset_P_status_EXISTS 1
#define DT_N_S_gpio_reset_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_reset_P_gpios_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_gpio_842500
#define DT_N_S_gpio_reset_P_gpios_IDX_0_VAL_pin 10
#define DT_N_S_gpio_reset_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_reset_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_gpio_reset_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_reset_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_reset, gpios, 0)
#define DT_N_S_gpio_reset_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_reset, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_reset_P_gpios_LEN 1
#define DT_N_S_gpio_reset_P_gpios_EXISTS 1
#define DT_N_S_gpio_reset_P_compatible {"nordic,thingy91-nrf52840-reset"}
#define DT_N_S_gpio_reset_P_compatible_IDX_0 "nordic,thingy91-nrf52840-reset"
#define DT_N_S_gpio_reset_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_gpio_reset_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_reset, compatible, 0)
#define DT_N_S_gpio_reset_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_reset, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_reset_P_compatible_LEN 1
#define DT_N_S_gpio_reset_P_compatible_EXISTS 1
#define DT_N_S_gpio_reset_P_wakeup_source 0
#define DT_N_S_gpio_reset_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /pin-controller
 *
 * Node identifier: DT_N_S_pin_controller
 *
 * Binding (compatible = nordic,nrf-pinctrl):
 *   $ZEPHYR_BASE\dts\bindings\pinctrl\nordic,nrf-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_PATH "/pin-controller"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_FULL_NAME "pin-controller"

/* Node parent (/) identifier: */
#define DT_N_S_pin_controller_PARENT DT_N
#define DT_N_S_pin_controller_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_ORD 7

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_EXISTS 1
#define DT_N_INST_0_nordic_nrf_pinctrl DT_N_S_pin_controller
#define DT_N_NODELABEL_pinctrl         DT_N_S_pin_controller

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_REG_NUM 0
#define DT_N_S_pin_controller_RANGES_NUM 0
#define DT_N_S_pin_controller_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_IRQ_NUM 0
#define DT_N_S_pin_controller_COMPAT_MATCHES_nordic_nrf_pinctrl 1
#define DT_N_S_pin_controller_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_P_compatible {"nordic,nrf-pinctrl"}
#define DT_N_S_pin_controller_P_compatible_IDX_0 "nordic,nrf-pinctrl"
#define DT_N_S_pin_controller_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller, compatible, 0)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_compatible_LEN 1
#define DT_N_S_pin_controller_P_compatible_EXISTS 1
#define DT_N_S_pin_controller_P_wakeup_source 0
#define DT_N_S_pin_controller_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /buttons
 *
 * Node identifier: DT_N_S_buttons
 *
 * Binding (compatible = gpio-keys):
 *   $ZEPHYR_BASE\dts\bindings\gpio\gpio-keys.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_buttons_PATH "/buttons"

/* Node's name with unit-address: */
#define DT_N_S_buttons_FULL_NAME "buttons"

/* Node parent (/) identifier: */
#define DT_N_S_buttons_PARENT DT_N
#define DT_N_S_buttons_FOREACH_CHILD(fn) fn(DT_N_S_buttons_S_button_0)
#define DT_N_S_buttons_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_buttons_S_button_0) 
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_buttons_ORD 8

/* Ordinals for what this node depends on directly: */
#define DT_N_S_buttons_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_buttons_SUPPORTS_ORDS \
	9, /* /buttons/button_0 */

/* Existence and alternate IDs: */
#define DT_N_S_buttons_EXISTS 1
#define DT_N_INST_0_gpio_keys DT_N_S_buttons

/* Macros for properties that are special in the specification: */
#define DT_N_S_buttons_REG_NUM 0
#define DT_N_S_buttons_RANGES_NUM 0
#define DT_N_S_buttons_FOREACH_RANGE(fn) 
#define DT_N_S_buttons_IRQ_NUM 0
#define DT_N_S_buttons_COMPAT_MATCHES_gpio_keys 1
#define DT_N_S_buttons_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_buttons_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_buttons_P_compatible {"gpio-keys"}
#define DT_N_S_buttons_P_compatible_IDX_0 "gpio-keys"
#define DT_N_S_buttons_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons, compatible, 0)
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons, compatible, 0, __VA_ARGS__)
#define DT_N_S_buttons_P_compatible_LEN 1
#define DT_N_S_buttons_P_compatible_EXISTS 1

/*
 * Devicetree node: /buttons/button_0
 *
 * Node identifier: DT_N_S_buttons_S_button_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_buttons_S_button_0_PATH "/buttons/button_0"

/* Node's name with unit-address: */
#define DT_N_S_buttons_S_button_0_FULL_NAME "button_0"

/* Node parent (/buttons) identifier: */
#define DT_N_S_buttons_S_button_0_PARENT DT_N_S_buttons
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD(fn) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_buttons_S_button_0_ORD 9

/* Ordinals for what this node depends on directly: */
#define DT_N_S_buttons_S_button_0_REQUIRES_ORDS \
	5, /* /soc/peripheral@50000000/gpio@842500 */ \
	8, /* /buttons */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_buttons_S_button_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_buttons_S_button_0_EXISTS 1
#define DT_N_ALIAS_sw0         DT_N_S_buttons_S_button_0
#define DT_N_NODELABEL_button0 DT_N_S_buttons_S_button_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_buttons_S_button_0_REG_NUM 0
#define DT_N_S_buttons_S_button_0_RANGES_NUM 0
#define DT_N_S_buttons_S_button_0_FOREACH_RANGE(fn) 
#define DT_N_S_buttons_S_button_0_IRQ_NUM 0
#define DT_N_S_buttons_S_button_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_buttons_S_button_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_gpio_842500
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_pin 26
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_flags 17
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons_S_button_0, gpios, 0)
#define DT_N_S_buttons_S_button_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_P_gpios_LEN 1
#define DT_N_S_buttons_S_button_0_P_gpios_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_label "Button 1"
#define DT_N_S_buttons_S_button_0_P_label_STRING_TOKEN Button_1
#define DT_N_S_buttons_S_button_0_P_label_STRING_UPPER_TOKEN BUTTON_1
#define DT_N_S_buttons_S_button_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons_S_button_0, label, 0) \
	fn(DT_N_S_buttons_S_button_0, label, 1) \
	fn(DT_N_S_buttons_S_button_0, label, 2) \
	fn(DT_N_S_buttons_S_button_0, label, 3) \
	fn(DT_N_S_buttons_S_button_0, label, 4) \
	fn(DT_N_S_buttons_S_button_0, label, 5) \
	fn(DT_N_S_buttons_S_button_0, label, 6) \
	fn(DT_N_S_buttons_S_button_0, label, 7)
#define DT_N_S_buttons_S_button_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_buttons_S_button_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_buttons_S_button_0, label, 2, __VA_ARGS__) \
	fn(DT_N_S_buttons_S_button_0, label, 3, __VA_ARGS__) \
	fn(DT_N_S_buttons_S_button_0, label, 4, __VA_ARGS__) \
	fn(DT_N_S_buttons_S_button_0, label, 5, __VA_ARGS__) \
	fn(DT_N_S_buttons_S_button_0, label, 6, __VA_ARGS__) \
	fn(DT_N_S_buttons_S_button_0, label, 7, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_P_label_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0) 
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 10

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	11, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m33f):
 *   $ZEPHYR_BASE\dts\bindings\cpu\arm,cortex-m33f.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 11

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	10, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS \
	12, /* /cpus/cpu@0/mpu@e000ed90 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m33f DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m33f 1
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m33f"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m33f"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, reg, 0)
#define DT_N_S_cpus_S_cpu_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, reg, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@0/mpu@e000ed90
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90
 *
 * Binding (compatible = arm,armv8m-mpu):
 *   $ZEPHYR_BASE\dts\bindings\mmu_mpu\arm,armv8m-mpu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_PATH "/cpus/cpu@0/mpu@e000ed90"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FULL_NAME "mpu@e000ed90"

/* Node parent (/cpus/cpu@0) identifier: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_PARENT DT_N_S_cpus_S_cpu_0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_ORD 12

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REQUIRES_ORDS \
	11, /* /cpus/cpu@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_EXISTS 1
#define DT_N_INST_0_arm_armv8m_mpu DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90
#define DT_N_NODELABEL_mpu         DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_IDX_0_VAL_ADDRESS 3758157200 /* 0xe000ed90 */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_REG_IDX_0_VAL_SIZE 64 /* 0x40 */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_COMPAT_MATCHES_arm_armv8m_mpu 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg {3758157200 /* 0xe000ed90 */, 64 /* 0x40 */}
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_0 3758157200
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_1 64
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_IDX_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, reg, 0) \
	fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, reg, 1)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, reg, 1, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_arm_num_mpu_regions 16
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_arm_num_mpu_regions_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible {"arm,armv8m-mpu"}
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0 "arm,armv8m-mpu"
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE\dts\bindings\gpio\gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2) fn(DT_N_S_leds_S_led_3) fn(DT_N_S_leds_S_led_4) fn(DT_N_S_leds_S_led_5) fn(DT_N_S_leds_S_led_6)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__) fn(DT_N_S_leds_S_led_3, __VA_ARGS__) fn(DT_N_S_leds_S_led_4, __VA_ARGS__) fn(DT_N_S_leds_S_led_5, __VA_ARGS__) fn(DT_N_S_leds_S_led_6, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_leds_S_led_2) fn(DT_N_S_leds_S_led_3) fn(DT_N_S_leds_S_led_4) fn(DT_N_S_leds_S_led_5) fn(DT_N_S_leds_S_led_6) 
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_led_2, __VA_ARGS__) fn(DT_N_S_leds_S_led_3, __VA_ARGS__) fn(DT_N_S_leds_S_led_4, __VA_ARGS__) fn(DT_N_S_leds_S_led_5, __VA_ARGS__) fn(DT_N_S_leds_S_led_6, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 13

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	14, /* /leds/led_1 */ \
	15, /* /leds/led_2 */ \
	16, /* /leds/led_3 */ \
	17, /* /leds/led_4 */ \
	18, /* /leds/led_5 */ \
	19, /* /leds/led_6 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /leds/led_1
 *
 * Node identifier: DT_N_S_leds_S_led_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_1_PATH "/leds/led_1"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_1_FULL_NAME "led_1"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_1_PARENT DT_N_S_leds
#define DT_N_S_leds_S_led_1_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_1_ORD 14

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_1_REQUIRES_ORDS \
	5, /* /soc/peripheral@50000000/gpio@842500 */ \
	13, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_1_EXISTS 1
#define DT_N_ALIAS_led0        DT_N_S_leds_S_led_1
#define DT_N_NODELABEL_red_led DT_N_S_leds_S_led_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_1_REG_NUM 0
#define DT_N_S_leds_S_led_1_RANGES_NUM 0
#define DT_N_S_leds_S_led_1_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_1_IRQ_NUM 0
#define DT_N_S_leds_S_led_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_gpio_842500
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin 29
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, gpios, 0)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_gpios_LEN 1
#define DT_N_S_leds_S_led_1_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_1_P_label "RGB red channel"
#define DT_N_S_leds_S_led_1_P_label_STRING_TOKEN RGB_red_channel
#define DT_N_S_leds_S_led_1_P_label_STRING_UPPER_TOKEN RGB_RED_CHANNEL
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, label, 0) \
	fn(DT_N_S_leds_S_led_1, label, 1) \
	fn(DT_N_S_leds_S_led_1, label, 2) \
	fn(DT_N_S_leds_S_led_1, label, 3) \
	fn(DT_N_S_leds_S_led_1, label, 4) \
	fn(DT_N_S_leds_S_led_1, label, 5) \
	fn(DT_N_S_leds_S_led_1, label, 6) \
	fn(DT_N_S_leds_S_led_1, label, 7) \
	fn(DT_N_S_leds_S_led_1, label, 8) \
	fn(DT_N_S_leds_S_led_1, label, 9) \
	fn(DT_N_S_leds_S_led_1, label, 10) \
	fn(DT_N_S_leds_S_led_1, label, 11) \
	fn(DT_N_S_leds_S_led_1, label, 12) \
	fn(DT_N_S_leds_S_led_1, label, 13) \
	fn(DT_N_S_leds_S_led_1, label, 14)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, label, 0, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 1, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 2, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 3, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 4, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 5, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 6, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 7, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 8, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 9, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 10, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 11, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 12, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 13, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_1, label, 14, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_2
 *
 * Node identifier: DT_N_S_leds_S_led_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_2_PATH "/leds/led_2"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_2_FULL_NAME "led_2"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_2_PARENT DT_N_S_leds
#define DT_N_S_leds_S_led_2_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_2_ORD 15

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_2_REQUIRES_ORDS \
	5, /* /soc/peripheral@50000000/gpio@842500 */ \
	13, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_2_EXISTS 1
#define DT_N_ALIAS_led1          DT_N_S_leds_S_led_2
#define DT_N_NODELABEL_green_led DT_N_S_leds_S_led_2

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_2_REG_NUM 0
#define DT_N_S_leds_S_led_2_RANGES_NUM 0
#define DT_N_S_leds_S_led_2_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_2_IRQ_NUM 0
#define DT_N_S_leds_S_led_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_gpio_842500
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_pin 30
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_2_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_2, gpios, 0)
#define DT_N_S_leds_S_led_2_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_2, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_gpios_LEN 1
#define DT_N_S_leds_S_led_2_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_2_P_label "RGB green channel"
#define DT_N_S_leds_S_led_2_P_label_STRING_TOKEN RGB_green_channel
#define DT_N_S_leds_S_led_2_P_label_STRING_UPPER_TOKEN RGB_GREEN_CHANNEL
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_2, label, 0) \
	fn(DT_N_S_leds_S_led_2, label, 1) \
	fn(DT_N_S_leds_S_led_2, label, 2) \
	fn(DT_N_S_leds_S_led_2, label, 3) \
	fn(DT_N_S_leds_S_led_2, label, 4) \
	fn(DT_N_S_leds_S_led_2, label, 5) \
	fn(DT_N_S_leds_S_led_2, label, 6) \
	fn(DT_N_S_leds_S_led_2, label, 7) \
	fn(DT_N_S_leds_S_led_2, label, 8) \
	fn(DT_N_S_leds_S_led_2, label, 9) \
	fn(DT_N_S_leds_S_led_2, label, 10) \
	fn(DT_N_S_leds_S_led_2, label, 11) \
	fn(DT_N_S_leds_S_led_2, label, 12) \
	fn(DT_N_S_leds_S_led_2, label, 13) \
	fn(DT_N_S_leds_S_led_2, label, 14) \
	fn(DT_N_S_leds_S_led_2, label, 15) \
	fn(DT_N_S_leds_S_led_2, label, 16)
#define DT_N_S_leds_S_led_2_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_2, label, 0, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 1, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 2, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 3, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 4, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 5, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 6, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 7, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 8, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 9, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 10, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 11, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 12, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 13, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 14, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 15, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_2, label, 16, __VA_ARGS__)
#define DT_N_S_leds_S_led_2_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_3
 *
 * Node identifier: DT_N_S_leds_S_led_3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_3_PATH "/leds/led_3"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_3_FULL_NAME "led_3"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_3_PARENT DT_N_S_leds
#define DT_N_S_leds_S_led_3_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_3_ORD 16

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_3_REQUIRES_ORDS \
	5, /* /soc/peripheral@50000000/gpio@842500 */ \
	13, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_3_EXISTS 1
#define DT_N_ALIAS_led2         DT_N_S_leds_S_led_3
#define DT_N_NODELABEL_blue_led DT_N_S_leds_S_led_3

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_3_REG_NUM 0
#define DT_N_S_leds_S_led_3_RANGES_NUM 0
#define DT_N_S_leds_S_led_3_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_3_IRQ_NUM 0
#define DT_N_S_leds_S_led_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_gpio_842500
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_pin 31
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_3, gpios, 0)
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_gpios_LEN 1
#define DT_N_S_leds_S_led_3_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_3_P_label "RGB blue channel"
#define DT_N_S_leds_S_led_3_P_label_STRING_TOKEN RGB_blue_channel
#define DT_N_S_leds_S_led_3_P_label_STRING_UPPER_TOKEN RGB_BLUE_CHANNEL
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_3, label, 0) \
	fn(DT_N_S_leds_S_led_3, label, 1) \
	fn(DT_N_S_leds_S_led_3, label, 2) \
	fn(DT_N_S_leds_S_led_3, label, 3) \
	fn(DT_N_S_leds_S_led_3, label, 4) \
	fn(DT_N_S_leds_S_led_3, label, 5) \
	fn(DT_N_S_leds_S_led_3, label, 6) \
	fn(DT_N_S_leds_S_led_3, label, 7) \
	fn(DT_N_S_leds_S_led_3, label, 8) \
	fn(DT_N_S_leds_S_led_3, label, 9) \
	fn(DT_N_S_leds_S_led_3, label, 10) \
	fn(DT_N_S_leds_S_led_3, label, 11) \
	fn(DT_N_S_leds_S_led_3, label, 12) \
	fn(DT_N_S_leds_S_led_3, label, 13) \
	fn(DT_N_S_leds_S_led_3, label, 14) \
	fn(DT_N_S_leds_S_led_3, label, 15)
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, label, 0, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 1, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 2, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 3, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 4, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 5, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 6, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 7, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 8, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 9, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 10, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 11, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 12, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 13, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 14, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 15, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_4
 *
 * Node identifier: DT_N_S_leds_S_led_4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_4_PATH "/leds/led_4"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_4_FULL_NAME "led_4"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_4_PARENT DT_N_S_leds
#define DT_N_S_leds_S_led_4_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_4_ORD 17

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_4_REQUIRES_ORDS \
	5, /* /soc/peripheral@50000000/gpio@842500 */ \
	13, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_4_EXISTS 1
#define DT_N_ALIAS_sense_led0        DT_N_S_leds_S_led_4
#define DT_N_NODELABEL_sense_red_led DT_N_S_leds_S_led_4

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_4_REG_NUM 0
#define DT_N_S_leds_S_led_4_RANGES_NUM 0
#define DT_N_S_leds_S_led_4_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_4_IRQ_NUM 0
#define DT_N_S_leds_S_led_4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_gpio_842500
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_VAL_pin 0
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_4_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_4, gpios, 0)
#define DT_N_S_leds_S_led_4_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_4, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_4_P_gpios_LEN 1
#define DT_N_S_leds_S_led_4_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_4_P_label "RGB red channel"
#define DT_N_S_leds_S_led_4_P_label_STRING_TOKEN RGB_red_channel
#define DT_N_S_leds_S_led_4_P_label_STRING_UPPER_TOKEN RGB_RED_CHANNEL
#define DT_N_S_leds_S_led_4_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_4, label, 0) \
	fn(DT_N_S_leds_S_led_4, label, 1) \
	fn(DT_N_S_leds_S_led_4, label, 2) \
	fn(DT_N_S_leds_S_led_4, label, 3) \
	fn(DT_N_S_leds_S_led_4, label, 4) \
	fn(DT_N_S_leds_S_led_4, label, 5) \
	fn(DT_N_S_leds_S_led_4, label, 6) \
	fn(DT_N_S_leds_S_led_4, label, 7) \
	fn(DT_N_S_leds_S_led_4, label, 8) \
	fn(DT_N_S_leds_S_led_4, label, 9) \
	fn(DT_N_S_leds_S_led_4, label, 10) \
	fn(DT_N_S_leds_S_led_4, label, 11) \
	fn(DT_N_S_leds_S_led_4, label, 12) \
	fn(DT_N_S_leds_S_led_4, label, 13) \
	fn(DT_N_S_leds_S_led_4, label, 14)
#define DT_N_S_leds_S_led_4_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_4, label, 0, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 1, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 2, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 3, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 4, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 5, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 6, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 7, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 8, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 9, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 10, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 11, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 12, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 13, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 14, __VA_ARGS__)
#define DT_N_S_leds_S_led_4_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_5
 *
 * Node identifier: DT_N_S_leds_S_led_5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_5_PATH "/leds/led_5"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_5_FULL_NAME "led_5"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_5_PARENT DT_N_S_leds
#define DT_N_S_leds_S_led_5_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_5_ORD 18

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_5_REQUIRES_ORDS \
	5, /* /soc/peripheral@50000000/gpio@842500 */ \
	13, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_5_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_5_EXISTS 1
#define DT_N_ALIAS_sense_led1          DT_N_S_leds_S_led_5
#define DT_N_NODELABEL_sense_green_led DT_N_S_leds_S_led_5

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_5_REG_NUM 0
#define DT_N_S_leds_S_led_5_RANGES_NUM 0
#define DT_N_S_leds_S_led_5_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_5_IRQ_NUM 0
#define DT_N_S_leds_S_led_5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_5_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_5_P_gpios_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_gpio_842500
#define DT_N_S_leds_S_led_5_P_gpios_IDX_0_VAL_pin 1
#define DT_N_S_leds_S_led_5_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_5_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_5_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_5_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_5, gpios, 0)
#define DT_N_S_leds_S_led_5_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_5, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_5_P_gpios_LEN 1
#define DT_N_S_leds_S_led_5_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_5_P_label "RGB green channel"
#define DT_N_S_leds_S_led_5_P_label_STRING_TOKEN RGB_green_channel
#define DT_N_S_leds_S_led_5_P_label_STRING_UPPER_TOKEN RGB_GREEN_CHANNEL
#define DT_N_S_leds_S_led_5_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_5, label, 0) \
	fn(DT_N_S_leds_S_led_5, label, 1) \
	fn(DT_N_S_leds_S_led_5, label, 2) \
	fn(DT_N_S_leds_S_led_5, label, 3) \
	fn(DT_N_S_leds_S_led_5, label, 4) \
	fn(DT_N_S_leds_S_led_5, label, 5) \
	fn(DT_N_S_leds_S_led_5, label, 6) \
	fn(DT_N_S_leds_S_led_5, label, 7) \
	fn(DT_N_S_leds_S_led_5, label, 8) \
	fn(DT_N_S_leds_S_led_5, label, 9) \
	fn(DT_N_S_leds_S_led_5, label, 10) \
	fn(DT_N_S_leds_S_led_5, label, 11) \
	fn(DT_N_S_leds_S_led_5, label, 12) \
	fn(DT_N_S_leds_S_led_5, label, 13) \
	fn(DT_N_S_leds_S_led_5, label, 14) \
	fn(DT_N_S_leds_S_led_5, label, 15) \
	fn(DT_N_S_leds_S_led_5, label, 16)
#define DT_N_S_leds_S_led_5_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_5, label, 0, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_5, label, 1, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_5, label, 2, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_5, label, 3, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_5, label, 4, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_5, label, 5, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_5, label, 6, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_5, label, 7, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_5, label, 8, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_5, label, 9, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_5, label, 10, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_5, label, 11, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_5, label, 12, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_5, label, 13, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_5, label, 14, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_5, label, 15, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_5, label, 16, __VA_ARGS__)
#define DT_N_S_leds_S_led_5_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_6
 *
 * Node identifier: DT_N_S_leds_S_led_6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_6_PATH "/leds/led_6"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_6_FULL_NAME "led_6"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_6_PARENT DT_N_S_leds
#define DT_N_S_leds_S_led_6_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_6_ORD 19

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_6_REQUIRES_ORDS \
	5, /* /soc/peripheral@50000000/gpio@842500 */ \
	13, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_6_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_6_EXISTS 1
#define DT_N_ALIAS_sense_led2         DT_N_S_leds_S_led_6
#define DT_N_NODELABEL_sense_blue_led DT_N_S_leds_S_led_6

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_6_REG_NUM 0
#define DT_N_S_leds_S_led_6_RANGES_NUM 0
#define DT_N_S_leds_S_led_6_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_6_IRQ_NUM 0
#define DT_N_S_leds_S_led_6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_6_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_6_P_gpios_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_gpio_842500
#define DT_N_S_leds_S_led_6_P_gpios_IDX_0_VAL_pin 2
#define DT_N_S_leds_S_led_6_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_6_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_6_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_6_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_6, gpios, 0)
#define DT_N_S_leds_S_led_6_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_6, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_6_P_gpios_LEN 1
#define DT_N_S_leds_S_led_6_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_6_P_label "RGB blue channel"
#define DT_N_S_leds_S_led_6_P_label_STRING_TOKEN RGB_blue_channel
#define DT_N_S_leds_S_led_6_P_label_STRING_UPPER_TOKEN RGB_BLUE_CHANNEL
#define DT_N_S_leds_S_led_6_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_6, label, 0) \
	fn(DT_N_S_leds_S_led_6, label, 1) \
	fn(DT_N_S_leds_S_led_6, label, 2) \
	fn(DT_N_S_leds_S_led_6, label, 3) \
	fn(DT_N_S_leds_S_led_6, label, 4) \
	fn(DT_N_S_leds_S_led_6, label, 5) \
	fn(DT_N_S_leds_S_led_6, label, 6) \
	fn(DT_N_S_leds_S_led_6, label, 7) \
	fn(DT_N_S_leds_S_led_6, label, 8) \
	fn(DT_N_S_leds_S_led_6, label, 9) \
	fn(DT_N_S_leds_S_led_6, label, 10) \
	fn(DT_N_S_leds_S_led_6, label, 11) \
	fn(DT_N_S_leds_S_led_6, label, 12) \
	fn(DT_N_S_leds_S_led_6, label, 13) \
	fn(DT_N_S_leds_S_led_6, label, 14) \
	fn(DT_N_S_leds_S_led_6, label, 15)
#define DT_N_S_leds_S_led_6_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_6, label, 0, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_6, label, 1, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_6, label, 2, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_6, label, 3, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_6, label, 4, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_6, label, 5, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_6, label, 6, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_6, label, 7, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_6, label, 8, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_6, label, 9, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_6, label, 10, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_6, label, 11, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_6, label, 12, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_6, label, 13, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_6, label, 14, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_6, label, 15, __VA_ARGS__)
#define DT_N_S_leds_S_led_6_P_label_EXISTS 1

/*
 * Devicetree node: /reserved-memory
 *
 * Node identifier: DT_N_S_reserved_memory
 */

/* Node's full path: */
#define DT_N_S_reserved_memory_PATH "/reserved-memory"

/* Node's name with unit-address: */
#define DT_N_S_reserved_memory_FULL_NAME "reserved-memory"

/* Node parent (/) identifier: */
#define DT_N_S_reserved_memory_PARENT DT_N
#define DT_N_S_reserved_memory_FOREACH_CHILD(fn) fn(DT_N_S_reserved_memory_S_image_s_20000000) fn(DT_N_S_reserved_memory_S_image_bsd_20010000) fn(DT_N_S_reserved_memory_S_image_ns_20020000)
#define DT_N_S_reserved_memory_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_reserved_memory_S_image_s_20000000, __VA_ARGS__) fn(DT_N_S_reserved_memory_S_image_bsd_20010000, __VA_ARGS__) fn(DT_N_S_reserved_memory_S_image_ns_20020000, __VA_ARGS__)
#define DT_N_S_reserved_memory_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_reserved_memory_S_image_s_20000000) fn(DT_N_S_reserved_memory_S_image_bsd_20010000) fn(DT_N_S_reserved_memory_S_image_ns_20020000) 
#define DT_N_S_reserved_memory_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_reserved_memory_S_image_s_20000000, __VA_ARGS__) fn(DT_N_S_reserved_memory_S_image_bsd_20010000, __VA_ARGS__) fn(DT_N_S_reserved_memory_S_image_ns_20020000, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_reserved_memory_ORD 20

/* Ordinals for what this node depends on directly: */
#define DT_N_S_reserved_memory_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_reserved_memory_SUPPORTS_ORDS \
	21, /* /reserved-memory/image_bsd@20010000 */ \
	22, /* /reserved-memory/image_ns@20020000 */ \
	23, /* /reserved-memory/image_s@20000000 */

/* Existence and alternate IDs: */
#define DT_N_S_reserved_memory_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_reserved_memory_REG_NUM 0
#define DT_N_S_reserved_memory_RANGES_NUM 0
#define DT_N_S_reserved_memory_FOREACH_RANGE(fn) 
#define DT_N_S_reserved_memory_IRQ_NUM 0
#define DT_N_S_reserved_memory_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_reserved_memory_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /reserved-memory/image_bsd@20010000
 *
 * Node identifier: DT_N_S_reserved_memory_S_image_bsd_20010000
 */

/* Node's full path: */
#define DT_N_S_reserved_memory_S_image_bsd_20010000_PATH "/reserved-memory/image_bsd@20010000"

/* Node's name with unit-address: */
#define DT_N_S_reserved_memory_S_image_bsd_20010000_FULL_NAME "image_bsd@20010000"

/* Node parent (/reserved-memory) identifier: */
#define DT_N_S_reserved_memory_S_image_bsd_20010000_PARENT DT_N_S_reserved_memory
#define DT_N_S_reserved_memory_S_image_bsd_20010000_FOREACH_CHILD(fn) 
#define DT_N_S_reserved_memory_S_image_bsd_20010000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_reserved_memory_S_image_bsd_20010000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_reserved_memory_S_image_bsd_20010000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_reserved_memory_S_image_bsd_20010000_ORD 21

/* Ordinals for what this node depends on directly: */
#define DT_N_S_reserved_memory_S_image_bsd_20010000_REQUIRES_ORDS \
	20, /* /reserved-memory */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_reserved_memory_S_image_bsd_20010000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_reserved_memory_S_image_bsd_20010000_EXISTS 1
#define DT_N_NODELABEL_sram0_bsd DT_N_S_reserved_memory_S_image_bsd_20010000

/* Macros for properties that are special in the specification: */
#define DT_N_S_reserved_memory_S_image_bsd_20010000_REG_NUM 1
#define DT_N_S_reserved_memory_S_image_bsd_20010000_REG_IDX_0_EXISTS 1
#define DT_N_S_reserved_memory_S_image_bsd_20010000_REG_IDX_0_VAL_ADDRESS 536936448 /* 0x20010000 */
#define DT_N_S_reserved_memory_S_image_bsd_20010000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_reserved_memory_S_image_bsd_20010000_RANGES_NUM 0
#define DT_N_S_reserved_memory_S_image_bsd_20010000_FOREACH_RANGE(fn) 
#define DT_N_S_reserved_memory_S_image_bsd_20010000_IRQ_NUM 0
#define DT_N_S_reserved_memory_S_image_bsd_20010000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_reserved_memory_S_image_bsd_20010000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_reserved_memory_S_image_bsd_20010000_P_reg {536936448 /* 0x20010000 */, 65536 /* 0x10000 */}
#define DT_N_S_reserved_memory_S_image_bsd_20010000_P_reg_IDX_0 536936448
#define DT_N_S_reserved_memory_S_image_bsd_20010000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_reserved_memory_S_image_bsd_20010000_P_reg_IDX_1 65536
#define DT_N_S_reserved_memory_S_image_bsd_20010000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_reserved_memory_S_image_bsd_20010000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_reserved_memory_S_image_bsd_20010000, reg, 0) \
	fn(DT_N_S_reserved_memory_S_image_bsd_20010000, reg, 1)
#define DT_N_S_reserved_memory_S_image_bsd_20010000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_reserved_memory_S_image_bsd_20010000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_reserved_memory_S_image_bsd_20010000, reg, 1, __VA_ARGS__)
#define DT_N_S_reserved_memory_S_image_bsd_20010000_P_reg_EXISTS 1

/*
 * Devicetree node: /reserved-memory/image_ns@20020000
 *
 * Node identifier: DT_N_S_reserved_memory_S_image_ns_20020000
 */

/* Node's full path: */
#define DT_N_S_reserved_memory_S_image_ns_20020000_PATH "/reserved-memory/image_ns@20020000"

/* Node's name with unit-address: */
#define DT_N_S_reserved_memory_S_image_ns_20020000_FULL_NAME "image_ns@20020000"

/* Node parent (/reserved-memory) identifier: */
#define DT_N_S_reserved_memory_S_image_ns_20020000_PARENT DT_N_S_reserved_memory
#define DT_N_S_reserved_memory_S_image_ns_20020000_FOREACH_CHILD(fn) 
#define DT_N_S_reserved_memory_S_image_ns_20020000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_reserved_memory_S_image_ns_20020000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_reserved_memory_S_image_ns_20020000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_reserved_memory_S_image_ns_20020000_ORD 22

/* Ordinals for what this node depends on directly: */
#define DT_N_S_reserved_memory_S_image_ns_20020000_REQUIRES_ORDS \
	20, /* /reserved-memory */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_reserved_memory_S_image_ns_20020000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_reserved_memory_S_image_ns_20020000_EXISTS 1
#define DT_N_NODELABEL_sram0_ns DT_N_S_reserved_memory_S_image_ns_20020000

/* Macros for properties that are special in the specification: */
#define DT_N_S_reserved_memory_S_image_ns_20020000_REG_NUM 1
#define DT_N_S_reserved_memory_S_image_ns_20020000_REG_IDX_0_EXISTS 1
#define DT_N_S_reserved_memory_S_image_ns_20020000_REG_IDX_0_VAL_ADDRESS 537001984 /* 0x20020000 */
#define DT_N_S_reserved_memory_S_image_ns_20020000_REG_IDX_0_VAL_SIZE 131072 /* 0x20000 */
#define DT_N_S_reserved_memory_S_image_ns_20020000_RANGES_NUM 0
#define DT_N_S_reserved_memory_S_image_ns_20020000_FOREACH_RANGE(fn) 
#define DT_N_S_reserved_memory_S_image_ns_20020000_IRQ_NUM 0
#define DT_N_S_reserved_memory_S_image_ns_20020000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_reserved_memory_S_image_ns_20020000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_reserved_memory_S_image_ns_20020000_P_reg {537001984 /* 0x20020000 */, 131072 /* 0x20000 */}
#define DT_N_S_reserved_memory_S_image_ns_20020000_P_reg_IDX_0 537001984
#define DT_N_S_reserved_memory_S_image_ns_20020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_reserved_memory_S_image_ns_20020000_P_reg_IDX_1 131072
#define DT_N_S_reserved_memory_S_image_ns_20020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_reserved_memory_S_image_ns_20020000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_reserved_memory_S_image_ns_20020000, reg, 0) \
	fn(DT_N_S_reserved_memory_S_image_ns_20020000, reg, 1)
#define DT_N_S_reserved_memory_S_image_ns_20020000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_reserved_memory_S_image_ns_20020000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_reserved_memory_S_image_ns_20020000, reg, 1, __VA_ARGS__)
#define DT_N_S_reserved_memory_S_image_ns_20020000_P_reg_EXISTS 1

/*
 * Devicetree node: /reserved-memory/image_s@20000000
 *
 * Node identifier: DT_N_S_reserved_memory_S_image_s_20000000
 */

/* Node's full path: */
#define DT_N_S_reserved_memory_S_image_s_20000000_PATH "/reserved-memory/image_s@20000000"

/* Node's name with unit-address: */
#define DT_N_S_reserved_memory_S_image_s_20000000_FULL_NAME "image_s@20000000"

/* Node parent (/reserved-memory) identifier: */
#define DT_N_S_reserved_memory_S_image_s_20000000_PARENT DT_N_S_reserved_memory
#define DT_N_S_reserved_memory_S_image_s_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_reserved_memory_S_image_s_20000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_reserved_memory_S_image_s_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_reserved_memory_S_image_s_20000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_reserved_memory_S_image_s_20000000_ORD 23

/* Ordinals for what this node depends on directly: */
#define DT_N_S_reserved_memory_S_image_s_20000000_REQUIRES_ORDS \
	20, /* /reserved-memory */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_reserved_memory_S_image_s_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_reserved_memory_S_image_s_20000000_EXISTS 1
#define DT_N_NODELABEL_sram0_s DT_N_S_reserved_memory_S_image_s_20000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_reserved_memory_S_image_s_20000000_REG_NUM 1
#define DT_N_S_reserved_memory_S_image_s_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_reserved_memory_S_image_s_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_reserved_memory_S_image_s_20000000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_reserved_memory_S_image_s_20000000_RANGES_NUM 0
#define DT_N_S_reserved_memory_S_image_s_20000000_FOREACH_RANGE(fn) 
#define DT_N_S_reserved_memory_S_image_s_20000000_IRQ_NUM 0
#define DT_N_S_reserved_memory_S_image_s_20000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_reserved_memory_S_image_s_20000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_reserved_memory_S_image_s_20000000_P_reg {536870912 /* 0x20000000 */, 65536 /* 0x10000 */}
#define DT_N_S_reserved_memory_S_image_s_20000000_P_reg_IDX_0 536870912
#define DT_N_S_reserved_memory_S_image_s_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_reserved_memory_S_image_s_20000000_P_reg_IDX_1 65536
#define DT_N_S_reserved_memory_S_image_s_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_reserved_memory_S_image_s_20000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_reserved_memory_S_image_s_20000000, reg, 0) \
	fn(DT_N_S_reserved_memory_S_image_s_20000000, reg, 1)
#define DT_N_S_reserved_memory_S_image_s_20000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_reserved_memory_S_image_s_20000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_reserved_memory_S_image_s_20000000, reg, 1, __VA_ARGS__)
#define DT_N_S_reserved_memory_S_image_s_20000000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/ficr@ff0000
 *
 * Node identifier: DT_N_S_soc_S_ficr_ff0000
 *
 * Binding (compatible = nordic,nrf-ficr):
 *   $ZEPHYR_BASE\dts\bindings\arm\nordic,nrf-ficr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ficr_ff0000_PATH "/soc/ficr@ff0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ficr_ff0000_FULL_NAME "ficr@ff0000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ficr_ff0000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_ficr_ff0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ficr_ff0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ficr_ff0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ficr_ff0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ficr_ff0000_ORD 24

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ficr_ff0000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ficr_ff0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ficr_ff0000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_ficr DT_N_S_soc_S_ficr_ff0000
#define DT_N_NODELABEL_ficr         DT_N_S_soc_S_ficr_ff0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ficr_ff0000_REG_NUM 1
#define DT_N_S_soc_S_ficr_ff0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_ff0000_REG_IDX_0_VAL_ADDRESS 16711680 /* 0xff0000 */
#define DT_N_S_soc_S_ficr_ff0000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_ficr_ff0000_RANGES_NUM 0
#define DT_N_S_soc_S_ficr_ff0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ficr_ff0000_IRQ_NUM 0
#define DT_N_S_soc_S_ficr_ff0000_COMPAT_MATCHES_nordic_nrf_ficr 1
#define DT_N_S_soc_S_ficr_ff0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ficr_ff0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ficr_ff0000_P_reg {16711680 /* 0xff0000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_ficr_ff0000_P_reg_IDX_0 16711680
#define DT_N_S_soc_S_ficr_ff0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_ff0000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_ficr_ff0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ficr_ff0000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ficr_ff0000, reg, 0) \
	fn(DT_N_S_soc_S_ficr_ff0000, reg, 1)
#define DT_N_S_soc_S_ficr_ff0000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ficr_ff0000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ficr_ff0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ficr_ff0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ficr_ff0000_P_status "okay"
#define DT_N_S_soc_S_ficr_ff0000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_ficr_ff0000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ficr_ff0000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_ficr_ff0000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_ficr_ff0000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ficr_ff0000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ficr_ff0000, status, 0) \
	fn(DT_N_S_soc_S_ficr_ff0000, status, 1) \
	fn(DT_N_S_soc_S_ficr_ff0000, status, 2) \
	fn(DT_N_S_soc_S_ficr_ff0000, status, 3)
#define DT_N_S_soc_S_ficr_ff0000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ficr_ff0000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ficr_ff0000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ficr_ff0000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ficr_ff0000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_ficr_ff0000_P_status_EXISTS 1
#define DT_N_S_soc_S_ficr_ff0000_P_compatible {"nordic,nrf-ficr"}
#define DT_N_S_soc_S_ficr_ff0000_P_compatible_IDX_0 "nordic,nrf-ficr"
#define DT_N_S_soc_S_ficr_ff0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ficr_ff0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ficr_ff0000, compatible, 0)
#define DT_N_S_soc_S_ficr_ff0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ficr_ff0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ficr_ff0000_P_compatible_LEN 1
#define DT_N_S_soc_S_ficr_ff0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ficr_ff0000_P_wakeup_source 0
#define DT_N_S_soc_S_ficr_ff0000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v8m-nvic):
 *   $ZEPHYR_BASE\dts\bindings\interrupt-controller\arm,v8m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 25

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	26, /* /soc/gpiote@5000d000 */ \
	28, /* /soc/spu@50003000 */ \
	32, /* /soc/crypto@50840000/crypto@50841000 */ \
	33, /* /soc/peripheral@50000000/adc@e000 */ \
	34, /* /soc/peripheral@50000000/clock@5000 */ \
	36, /* /soc/peripheral@50000000/egu@1b000 */ \
	37, /* /soc/peripheral@50000000/egu@1c000 */ \
	38, /* /soc/peripheral@50000000/egu@1d000 */ \
	39, /* /soc/peripheral@50000000/egu@1e000 */ \
	40, /* /soc/peripheral@50000000/egu@1f000 */ \
	41, /* /soc/peripheral@50000000/egu@20000 */ \
	42, /* /soc/peripheral@50000000/i2c@8000 */ \
	43, /* /soc/peripheral@50000000/i2c@9000 */ \
	44, /* /soc/peripheral@50000000/i2c@b000 */ \
	45, /* /soc/peripheral@50000000/i2s@28000 */ \
	46, /* /soc/peripheral@50000000/kmu@39000 */ \
	47, /* /soc/peripheral@50000000/pdm@26000 */ \
	48, /* /soc/peripheral@50000000/power@5000 */ \
	49, /* /soc/peripheral@50000000/pwm@21000 */ \
	50, /* /soc/peripheral@50000000/pwm@22000 */ \
	51, /* /soc/peripheral@50000000/pwm@23000 */ \
	52, /* /soc/peripheral@50000000/pwm@24000 */ \
	54, /* /soc/peripheral@50000000/rtc@14000 */ \
	55, /* /soc/peripheral@50000000/rtc@15000 */ \
	56, /* /soc/peripheral@50000000/spi@8000 */ \
	57, /* /soc/peripheral@50000000/spi@9000 */ \
	58, /* /soc/peripheral@50000000/spi@a000 */ \
	59, /* /soc/peripheral@50000000/timer@f000 */ \
	60, /* /soc/peripheral@50000000/timer@10000 */ \
	61, /* /soc/peripheral@50000000/timer@11000 */ \
	62, /* /soc/peripheral@50000000/uart@8000 */ \
	63, /* /soc/peripheral@50000000/uart@9000 */ \
	64, /* /soc/peripheral@50000000/uart@a000 */ \
	65, /* /soc/peripheral@50000000/uart@b000 */ \
	67, /* /soc/peripheral@50000000/watchdog@18000 */ \
	78, /* /soc/peripheral@50000000/i2c@a000 */ \
	81, /* /soc/peripheral@50000000/spi@b000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v8m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v8m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 1)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 3
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v8m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v8m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/gpiote@5000d000
 *
 * Node identifier: DT_N_S_soc_S_gpiote_5000d000
 *
 * Binding (compatible = nordic,nrf-gpiote):
 *   $ZEPHYR_BASE\dts\bindings\gpio\nordic,nrf-gpiote.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpiote_5000d000_PATH "/soc/gpiote@5000d000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpiote_5000d000_FULL_NAME "gpiote@5000d000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpiote_5000d000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_gpiote_5000d000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpiote_5000d000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpiote_5000d000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpiote_5000d000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpiote_5000d000_ORD 26

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpiote_5000d000_REQUIRES_ORDS \
	3, /* /soc */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpiote_5000d000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpiote_5000d000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_gpiote DT_N_S_soc_S_gpiote_5000d000
#define DT_N_NODELABEL_gpiote         DT_N_S_soc_S_gpiote_5000d000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpiote_5000d000_REG_NUM 1
#define DT_N_S_soc_S_gpiote_5000d000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_5000d000_REG_IDX_0_VAL_ADDRESS 1342230528 /* 0x5000d000 */
#define DT_N_S_soc_S_gpiote_5000d000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_gpiote_5000d000_RANGES_NUM 0
#define DT_N_S_soc_S_gpiote_5000d000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpiote_5000d000_IRQ_NUM 1
#define DT_N_S_soc_S_gpiote_5000d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_5000d000_IRQ_IDX_0_VAL_irq 13
#define DT_N_S_soc_S_gpiote_5000d000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpiote_5000d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_5000d000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_gpiote_5000d000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpiote_5000d000_COMPAT_MATCHES_nordic_nrf_gpiote 1
#define DT_N_S_soc_S_gpiote_5000d000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpiote_5000d000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpiote_5000d000_P_reg {1342230528 /* 0x5000d000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_gpiote_5000d000_P_reg_IDX_0 1342230528
#define DT_N_S_soc_S_gpiote_5000d000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_5000d000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_gpiote_5000d000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpiote_5000d000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpiote_5000d000, reg, 0) \
	fn(DT_N_S_soc_S_gpiote_5000d000, reg, 1)
#define DT_N_S_soc_S_gpiote_5000d000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpiote_5000d000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpiote_5000d000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpiote_5000d000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpiote_5000d000_P_interrupts {13 /* 0xd */, 5 /* 0x5 */}
#define DT_N_S_soc_S_gpiote_5000d000_P_interrupts_IDX_0 13
#define DT_N_S_soc_S_gpiote_5000d000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_5000d000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_gpiote_5000d000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpiote_5000d000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpiote_5000d000, interrupts, 0) \
	fn(DT_N_S_soc_S_gpiote_5000d000, interrupts, 1)
#define DT_N_S_soc_S_gpiote_5000d000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpiote_5000d000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpiote_5000d000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpiote_5000d000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpiote_5000d000_P_label "GPIOTE_0"
#define DT_N_S_soc_S_gpiote_5000d000_P_label_STRING_TOKEN GPIOTE_0
#define DT_N_S_soc_S_gpiote_5000d000_P_label_STRING_UPPER_TOKEN GPIOTE_0
#define DT_N_S_soc_S_gpiote_5000d000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpiote_5000d000, label, 0) \
	fn(DT_N_S_soc_S_gpiote_5000d000, label, 1) \
	fn(DT_N_S_soc_S_gpiote_5000d000, label, 2) \
	fn(DT_N_S_soc_S_gpiote_5000d000, label, 3) \
	fn(DT_N_S_soc_S_gpiote_5000d000, label, 4) \
	fn(DT_N_S_soc_S_gpiote_5000d000, label, 5) \
	fn(DT_N_S_soc_S_gpiote_5000d000, label, 6) \
	fn(DT_N_S_soc_S_gpiote_5000d000, label, 7)
#define DT_N_S_soc_S_gpiote_5000d000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpiote_5000d000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpiote_5000d000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpiote_5000d000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpiote_5000d000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpiote_5000d000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpiote_5000d000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpiote_5000d000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpiote_5000d000, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_gpiote_5000d000_P_label_EXISTS 1
#define DT_N_S_soc_S_gpiote_5000d000_P_status "okay"
#define DT_N_S_soc_S_gpiote_5000d000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpiote_5000d000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpiote_5000d000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_gpiote_5000d000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_gpiote_5000d000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpiote_5000d000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpiote_5000d000, status, 0) \
	fn(DT_N_S_soc_S_gpiote_5000d000, status, 1) \
	fn(DT_N_S_soc_S_gpiote_5000d000, status, 2) \
	fn(DT_N_S_soc_S_gpiote_5000d000, status, 3)
#define DT_N_S_soc_S_gpiote_5000d000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpiote_5000d000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpiote_5000d000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpiote_5000d000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpiote_5000d000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_gpiote_5000d000_P_status_EXISTS 1
#define DT_N_S_soc_S_gpiote_5000d000_P_compatible {"nordic,nrf-gpiote"}
#define DT_N_S_soc_S_gpiote_5000d000_P_compatible_IDX_0 "nordic,nrf-gpiote"
#define DT_N_S_soc_S_gpiote_5000d000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpiote_5000d000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpiote_5000d000, compatible, 0)
#define DT_N_S_soc_S_gpiote_5000d000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpiote_5000d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpiote_5000d000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpiote_5000d000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpiote_5000d000_P_wakeup_source 0
#define DT_N_S_soc_S_gpiote_5000d000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/memory@20000000
 *
 * Node identifier: DT_N_S_soc_S_memory_20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE\dts\bindings\sram\mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_20000000_PATH "/soc/memory@20000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_20000000_FULL_NAME "memory@20000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_20000000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_20000000_ORD 27

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_20000000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_soc_S_memory_20000000
#define DT_N_NODELABEL_sram0  DT_N_S_soc_S_memory_20000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_20000000_REG_NUM 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_SIZE 262144 /* 0x40000 */
#define DT_N_S_soc_S_memory_20000000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_20000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_20000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_20000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_20000000_P_reg {536870912 /* 0x20000000 */, 262144 /* 0x40000 */}
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0 536870912
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1 262144
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_20000000, reg, 0) \
	fn(DT_N_S_soc_S_memory_20000000, reg, 1)
#define DT_N_S_soc_S_memory_20000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_20000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_20000000, compatible, 0)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_20000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/spu@50003000
 *
 * Node identifier: DT_N_S_soc_S_spu_50003000
 *
 * Binding (compatible = nordic,nrf-spu):
 *   $ZEPHYR_BASE\dts\bindings\arm\nordic,nrf-spu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spu_50003000_PATH "/soc/spu@50003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spu_50003000_FULL_NAME "spu@50003000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spu_50003000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_spu_50003000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spu_50003000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spu_50003000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spu_50003000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spu_50003000_ORD 28

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spu_50003000_REQUIRES_ORDS \
	3, /* /soc */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spu_50003000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spu_50003000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_spu DT_N_S_soc_S_spu_50003000
#define DT_N_NODELABEL_spu         DT_N_S_soc_S_spu_50003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spu_50003000_REG_NUM 1
#define DT_N_S_soc_S_spu_50003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spu_50003000_REG_IDX_0_VAL_ADDRESS 1342189568 /* 0x50003000 */
#define DT_N_S_soc_S_spu_50003000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spu_50003000_RANGES_NUM 0
#define DT_N_S_soc_S_spu_50003000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spu_50003000_IRQ_NUM 1
#define DT_N_S_soc_S_spu_50003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spu_50003000_IRQ_IDX_0_VAL_irq 3
#define DT_N_S_soc_S_spu_50003000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spu_50003000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spu_50003000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_spu_50003000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spu_50003000_COMPAT_MATCHES_nordic_nrf_spu 1
#define DT_N_S_soc_S_spu_50003000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spu_50003000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spu_50003000_P_reg {1342189568 /* 0x50003000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spu_50003000_P_reg_IDX_0 1342189568
#define DT_N_S_soc_S_spu_50003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spu_50003000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spu_50003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spu_50003000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spu_50003000, reg, 0) \
	fn(DT_N_S_soc_S_spu_50003000, reg, 1)
#define DT_N_S_soc_S_spu_50003000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spu_50003000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spu_50003000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spu_50003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spu_50003000_P_interrupts {3 /* 0x3 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_spu_50003000_P_interrupts_IDX_0 3
#define DT_N_S_soc_S_spu_50003000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spu_50003000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_spu_50003000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spu_50003000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spu_50003000, interrupts, 0) \
	fn(DT_N_S_soc_S_spu_50003000, interrupts, 1)
#define DT_N_S_soc_S_spu_50003000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spu_50003000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spu_50003000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spu_50003000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spu_50003000_P_status "okay"
#define DT_N_S_soc_S_spu_50003000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spu_50003000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spu_50003000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spu_50003000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spu_50003000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spu_50003000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spu_50003000, status, 0) \
	fn(DT_N_S_soc_S_spu_50003000, status, 1) \
	fn(DT_N_S_soc_S_spu_50003000, status, 2) \
	fn(DT_N_S_soc_S_spu_50003000, status, 3)
#define DT_N_S_soc_S_spu_50003000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spu_50003000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spu_50003000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spu_50003000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spu_50003000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spu_50003000_P_status_EXISTS 1
#define DT_N_S_soc_S_spu_50003000_P_compatible {"nordic,nrf-spu"}
#define DT_N_S_soc_S_spu_50003000_P_compatible_IDX_0 "nordic,nrf-spu"
#define DT_N_S_soc_S_spu_50003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spu_50003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spu_50003000, compatible, 0)
#define DT_N_S_soc_S_spu_50003000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spu_50003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spu_50003000_P_compatible_LEN 1
#define DT_N_S_soc_S_spu_50003000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spu_50003000_P_wakeup_source 0
#define DT_N_S_soc_S_spu_50003000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 29

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv8m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv8m_systick 1
#define DT_N_S_soc_S_timer_e000e010_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv8m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv8m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, reg, 0) \
	fn(DT_N_S_soc_S_timer_e000e010, reg, 1)
#define DT_N_S_soc_S_timer_e000e010_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_status "disabled"
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timer_e000e010_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timer_e000e010_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, status, 0) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 1) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 2) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 3) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 4) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 5) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 6) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 7)
#define DT_N_S_soc_S_timer_e000e010_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_status_EXISTS 1

/*
 * Devicetree node: /soc/uicr@ff8000
 *
 * Node identifier: DT_N_S_soc_S_uicr_ff8000
 *
 * Binding (compatible = nordic,nrf-uicr):
 *   $ZEPHYR_BASE\dts\bindings\arm\nordic,nrf-uicr.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uicr_ff8000_PATH "/soc/uicr@ff8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uicr_ff8000_FULL_NAME "uicr@ff8000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uicr_ff8000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_uicr_ff8000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uicr_ff8000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uicr_ff8000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uicr_ff8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uicr_ff8000_ORD 30

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uicr_ff8000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uicr_ff8000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uicr_ff8000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_uicr DT_N_S_soc_S_uicr_ff8000
#define DT_N_NODELABEL_uicr         DT_N_S_soc_S_uicr_ff8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uicr_ff8000_REG_NUM 1
#define DT_N_S_soc_S_uicr_ff8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_ff8000_REG_IDX_0_VAL_ADDRESS 16744448 /* 0xff8000 */
#define DT_N_S_soc_S_uicr_ff8000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uicr_ff8000_RANGES_NUM 0
#define DT_N_S_soc_S_uicr_ff8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uicr_ff8000_IRQ_NUM 0
#define DT_N_S_soc_S_uicr_ff8000_COMPAT_MATCHES_nordic_nrf_uicr 1
#define DT_N_S_soc_S_uicr_ff8000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uicr_ff8000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uicr_ff8000_P_reg {16744448 /* 0xff8000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uicr_ff8000_P_reg_IDX_0 16744448
#define DT_N_S_soc_S_uicr_ff8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_ff8000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uicr_ff8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uicr_ff8000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uicr_ff8000, reg, 0) \
	fn(DT_N_S_soc_S_uicr_ff8000, reg, 1)
#define DT_N_S_soc_S_uicr_ff8000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uicr_ff8000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uicr_ff8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_uicr_ff8000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uicr_ff8000_P_status "okay"
#define DT_N_S_soc_S_uicr_ff8000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_uicr_ff8000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uicr_ff8000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_uicr_ff8000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_uicr_ff8000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uicr_ff8000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uicr_ff8000, status, 0) \
	fn(DT_N_S_soc_S_uicr_ff8000, status, 1) \
	fn(DT_N_S_soc_S_uicr_ff8000, status, 2) \
	fn(DT_N_S_soc_S_uicr_ff8000, status, 3)
#define DT_N_S_soc_S_uicr_ff8000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uicr_ff8000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uicr_ff8000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uicr_ff8000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_uicr_ff8000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_uicr_ff8000_P_status_EXISTS 1
#define DT_N_S_soc_S_uicr_ff8000_P_compatible {"nordic,nrf-uicr"}
#define DT_N_S_soc_S_uicr_ff8000_P_compatible_IDX_0 "nordic,nrf-uicr"
#define DT_N_S_soc_S_uicr_ff8000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uicr_ff8000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uicr_ff8000, compatible, 0)
#define DT_N_S_soc_S_uicr_ff8000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uicr_ff8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uicr_ff8000_P_compatible_LEN 1
#define DT_N_S_soc_S_uicr_ff8000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uicr_ff8000_P_wakeup_source 0
#define DT_N_S_soc_S_uicr_ff8000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/crypto@50840000
 *
 * Node identifier: DT_N_S_soc_S_crypto_50840000
 *
 * Binding (compatible = nordic,nrf-cc310):
 *   $ZEPHYR_BASE\dts\bindings\crypto\nordic,nrf-cc310.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_crypto_50840000_PATH "/soc/crypto@50840000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_crypto_50840000_FULL_NAME "crypto@50840000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_crypto_50840000_PARENT DT_N_S_soc
#define DT_N_S_soc_S_crypto_50840000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000)
#define DT_N_S_soc_S_crypto_50840000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_50840000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000) 
#define DT_N_S_soc_S_crypto_50840000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_crypto_50840000_ORD 31

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_crypto_50840000_REQUIRES_ORDS \
	3, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_crypto_50840000_SUPPORTS_ORDS \
	32, /* /soc/crypto@50840000/crypto@50841000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_crypto_50840000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_cc310 DT_N_S_soc_S_crypto_50840000
#define DT_N_NODELABEL_cryptocell    DT_N_S_soc_S_crypto_50840000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_crypto_50840000_REG_NUM 1
#define DT_N_S_soc_S_crypto_50840000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_50840000_REG_IDX_0_VAL_ADDRESS 1350828032 /* 0x50840000 */
#define DT_N_S_soc_S_crypto_50840000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_crypto_50840000_RANGES_NUM 0
#define DT_N_S_soc_S_crypto_50840000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_crypto_50840000_IRQ_NUM 0
#define DT_N_S_soc_S_crypto_50840000_COMPAT_MATCHES_nordic_nrf_cc310 1
#define DT_N_S_soc_S_crypto_50840000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_crypto_50840000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_crypto_50840000_P_reg {1350828032 /* 0x50840000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_crypto_50840000_P_reg_IDX_0 1350828032
#define DT_N_S_soc_S_crypto_50840000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_50840000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_crypto_50840000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_crypto_50840000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_crypto_50840000, reg, 0) \
	fn(DT_N_S_soc_S_crypto_50840000, reg, 1)
#define DT_N_S_soc_S_crypto_50840000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_50840000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_50840000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_50840000_P_reg_EXISTS 1
#define DT_N_S_soc_S_crypto_50840000_P_label "CRYPTOCELL"
#define DT_N_S_soc_S_crypto_50840000_P_label_STRING_TOKEN CRYPTOCELL
#define DT_N_S_soc_S_crypto_50840000_P_label_STRING_UPPER_TOKEN CRYPTOCELL
#define DT_N_S_soc_S_crypto_50840000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_crypto_50840000, label, 0) \
	fn(DT_N_S_soc_S_crypto_50840000, label, 1) \
	fn(DT_N_S_soc_S_crypto_50840000, label, 2) \
	fn(DT_N_S_soc_S_crypto_50840000, label, 3) \
	fn(DT_N_S_soc_S_crypto_50840000, label, 4) \
	fn(DT_N_S_soc_S_crypto_50840000, label, 5) \
	fn(DT_N_S_soc_S_crypto_50840000, label, 6) \
	fn(DT_N_S_soc_S_crypto_50840000, label, 7) \
	fn(DT_N_S_soc_S_crypto_50840000, label, 8) \
	fn(DT_N_S_soc_S_crypto_50840000, label, 9)
#define DT_N_S_soc_S_crypto_50840000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_50840000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_50840000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_50840000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_50840000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_50840000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_50840000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_50840000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_50840000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_50840000, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_50840000, label, 9, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_50840000_P_label_EXISTS 1
#define DT_N_S_soc_S_crypto_50840000_P_status "okay"
#define DT_N_S_soc_S_crypto_50840000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_crypto_50840000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_crypto_50840000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_crypto_50840000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_crypto_50840000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_crypto_50840000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_crypto_50840000, status, 0) \
	fn(DT_N_S_soc_S_crypto_50840000, status, 1) \
	fn(DT_N_S_soc_S_crypto_50840000, status, 2) \
	fn(DT_N_S_soc_S_crypto_50840000, status, 3)
#define DT_N_S_soc_S_crypto_50840000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_50840000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_50840000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_50840000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_50840000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_50840000_P_status_EXISTS 1
#define DT_N_S_soc_S_crypto_50840000_P_compatible {"nordic,nrf-cc310"}
#define DT_N_S_soc_S_crypto_50840000_P_compatible_IDX_0 "nordic,nrf-cc310"
#define DT_N_S_soc_S_crypto_50840000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_50840000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_crypto_50840000, compatible, 0)
#define DT_N_S_soc_S_crypto_50840000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_50840000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_50840000_P_compatible_LEN 1
#define DT_N_S_soc_S_crypto_50840000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_crypto_50840000_P_wakeup_source 0
#define DT_N_S_soc_S_crypto_50840000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/crypto@50840000/crypto@50841000
 *
 * Node identifier: DT_N_S_soc_S_crypto_50840000_S_crypto_50841000
 *
 * Binding (compatible = arm,cryptocell-310):
 *   $ZEPHYR_BASE\dts\bindings\crypto\arm,cryptocell-310.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_PATH "/soc/crypto@50840000/crypto@50841000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_FULL_NAME "crypto@50841000"

/* Node parent (/soc/crypto@50840000) identifier: */
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_PARENT DT_N_S_soc_S_crypto_50840000
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_ORD 32

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_REQUIRES_ORDS \
	25, /* /soc/interrupt-controller@e000e100 */ \
	31, /* /soc/crypto@50840000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_EXISTS 1
#define DT_N_INST_0_arm_cryptocell_310 DT_N_S_soc_S_crypto_50840000_S_crypto_50841000
#define DT_N_NODELABEL_cryptocell310   DT_N_S_soc_S_crypto_50840000_S_crypto_50841000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_REG_NUM 1
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_REG_IDX_0_VAL_ADDRESS 1350832128 /* 0x50841000 */
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_RANGES_NUM 0
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_IRQ_NUM 1
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_IRQ_IDX_0_VAL_irq 64
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_COMPAT_MATCHES_arm_cryptocell_310 1
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_reg {1350832128 /* 0x50841000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_reg_IDX_0 1350832128
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, reg, 0) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, reg, 1)
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_reg_EXISTS 1
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_label "CRYPTOCELL310"
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_label_STRING_TOKEN CRYPTOCELL310
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_label_STRING_UPPER_TOKEN CRYPTOCELL310
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, label, 0) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, label, 1) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, label, 2) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, label, 3) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, label, 4) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, label, 5) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, label, 6) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, label, 7) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, label, 8) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, label, 9) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, label, 10) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, label, 11) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, label, 12)
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, label, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, label, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, label, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, label, 12, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_label_EXISTS 1
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_interrupts {64 /* 0x40 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_interrupts_IDX_0 64
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, interrupts, 0) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, interrupts, 1)
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_compatible {"arm,cryptocell-310"}
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_compatible_IDX_0 "arm,cryptocell-310"
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, compatible, 0)
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_compatible_LEN 1
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_wakeup_source 0
#define DT_N_S_soc_S_crypto_50840000_S_crypto_50841000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/adc@e000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_adc_e000
 *
 * Binding (compatible = nordic,nrf-saadc):
 *   $ZEPHYR_BASE\dts\bindings\adc\nordic,nrf-saadc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_PATH "/soc/peripheral@50000000/adc@e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_FULL_NAME "adc@e000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_ORD 33

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_saadc DT_N_S_soc_S_peripheral_50000000_S_adc_e000
#define DT_N_NODELABEL_adc           DT_N_S_soc_S_peripheral_50000000_S_adc_e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_REG_IDX_0_VAL_ADDRESS 1342234624 /* 0x5000e000 */
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_IRQ_IDX_0_VAL_irq 14
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_COMPAT_MATCHES_nordic_nrf_saadc 1
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_reg {57344 /* 0xe000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_reg_IDX_0 57344
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_interrupts {14 /* 0xe */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_interrupts_IDX_0 14
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_label "ADC_0"
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_label_STRING_TOKEN ADC_0
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_label_STRING_UPPER_TOKEN ADC_0
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, label, 4)
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_compatible {"nordic,nrf-saadc"}
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_compatible_IDX_0 "nordic,nrf-saadc"
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_adc_e000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/clock@5000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_clock_5000
 *
 * Binding (compatible = nordic,nrf-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\nordic,nrf-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_PATH "/soc/peripheral@50000000/clock@5000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_FULL_NAME "clock@5000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_ORD 34

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_clock DT_N_S_soc_S_peripheral_50000000_S_clock_5000
#define DT_N_NODELABEL_clock         DT_N_S_soc_S_peripheral_50000000_S_clock_5000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_REG_IDX_0_VAL_ADDRESS 1342197760 /* 0x50005000 */
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_IRQ_IDX_0_VAL_irq 5
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_COMPAT_MATCHES_nordic_nrf_clock 1
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_label "CLOCK"
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_label_STRING_TOKEN CLOCK
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_label_STRING_UPPER_TOKEN CLOCK
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, label, 4)
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_reg {20480 /* 0x5000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_reg_IDX_0 20480
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_interrupts {5 /* 0x5 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_interrupts_IDX_0 5
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_compatible {"nordic,nrf-clock"}
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_compatible_IDX_0 "nordic,nrf-clock"
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_clock_5000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/dppic@17000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_dppic_17000
 *
 * Binding (compatible = nordic,nrf-dppic):
 *   $ZEPHYR_BASE\dts\bindings\arm\nordic,nrf-dppic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_PATH "/soc/peripheral@50000000/dppic@17000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_FULL_NAME "dppic@17000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_ORD 35

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_dppic DT_N_S_soc_S_peripheral_50000000_S_dppic_17000
#define DT_N_NODELABEL_dppic         DT_N_S_soc_S_peripheral_50000000_S_dppic_17000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_REG_IDX_0_VAL_ADDRESS 1342271488 /* 0x50017000 */
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_IRQ_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_COMPAT_MATCHES_nordic_nrf_dppic 1
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_reg {94208 /* 0x17000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_reg_IDX_0 94208
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_compatible {"nordic,nrf-dppic"}
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_compatible_IDX_0 "nordic,nrf-dppic"
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_label "DPPIC"
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_label_STRING_TOKEN DPPIC
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_label_STRING_UPPER_TOKEN DPPIC
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000, label, 4)
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_dppic_17000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/egu@1b000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_egu_1b000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE\dts\bindings\arm\nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_PATH "/soc/peripheral@50000000/egu@1b000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_FULL_NAME "egu@1b000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_ORD 36

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_egu DT_N_S_soc_S_peripheral_50000000_S_egu_1b000
#define DT_N_NODELABEL_egu0        DT_N_S_soc_S_peripheral_50000000_S_egu_1b000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_REG_IDX_0_VAL_ADDRESS 1342287872 /* 0x5001b000 */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_IRQ_IDX_0_VAL_irq 27
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_reg {110592 /* 0x1b000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_reg_IDX_0 110592
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1b000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1b000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1b000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1b000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_interrupts {27 /* 0x1b */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_interrupts_IDX_0 27
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1b000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1b000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1b000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1b000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1b000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1b000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1b000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1b000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1b000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1b000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1b000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1b000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_compatible {"nordic,nrf-egu"}
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1b000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1b000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/egu@1c000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_egu_1c000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE\dts\bindings\arm\nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_PATH "/soc/peripheral@50000000/egu@1c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_FULL_NAME "egu@1c000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_ORD 37

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_egu DT_N_S_soc_S_peripheral_50000000_S_egu_1c000
#define DT_N_NODELABEL_egu1        DT_N_S_soc_S_peripheral_50000000_S_egu_1c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_REG_IDX_0_VAL_ADDRESS 1342291968 /* 0x5001c000 */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_IRQ_IDX_0_VAL_irq 28
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_reg {114688 /* 0x1c000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_reg_IDX_0 114688
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1c000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1c000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1c000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1c000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_interrupts {28 /* 0x1c */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_interrupts_IDX_0 28
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1c000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1c000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1c000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1c000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1c000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1c000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1c000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1c000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1c000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1c000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1c000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1c000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_compatible {"nordic,nrf-egu"}
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1c000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1c000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/egu@1d000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_egu_1d000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE\dts\bindings\arm\nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_PATH "/soc/peripheral@50000000/egu@1d000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_FULL_NAME "egu@1d000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_ORD 38

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_egu DT_N_S_soc_S_peripheral_50000000_S_egu_1d000
#define DT_N_NODELABEL_egu2        DT_N_S_soc_S_peripheral_50000000_S_egu_1d000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_REG_IDX_0_VAL_ADDRESS 1342296064 /* 0x5001d000 */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_IRQ_IDX_0_VAL_irq 29
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_reg {118784 /* 0x1d000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_reg_IDX_0 118784
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1d000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1d000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1d000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1d000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_interrupts {29 /* 0x1d */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_interrupts_IDX_0 29
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1d000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1d000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1d000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1d000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1d000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1d000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1d000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1d000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1d000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1d000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1d000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1d000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_compatible {"nordic,nrf-egu"}
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1d000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1d000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/egu@1e000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_egu_1e000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE\dts\bindings\arm\nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_PATH "/soc/peripheral@50000000/egu@1e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_FULL_NAME "egu@1e000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_ORD 39

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_EXISTS 1
#define DT_N_INST_3_nordic_nrf_egu DT_N_S_soc_S_peripheral_50000000_S_egu_1e000
#define DT_N_NODELABEL_egu3        DT_N_S_soc_S_peripheral_50000000_S_egu_1e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_REG_IDX_0_VAL_ADDRESS 1342300160 /* 0x5001e000 */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_IRQ_IDX_0_VAL_irq 30
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_reg {122880 /* 0x1e000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_reg_IDX_0 122880
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1e000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1e000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1e000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1e000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_interrupts {30 /* 0x1e */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_interrupts_IDX_0 30
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1e000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1e000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1e000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1e000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1e000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1e000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1e000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1e000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1e000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1e000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1e000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1e000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_compatible {"nordic,nrf-egu"}
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1e000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1e000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/egu@1f000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_egu_1f000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE\dts\bindings\arm\nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_PATH "/soc/peripheral@50000000/egu@1f000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_FULL_NAME "egu@1f000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_ORD 40

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_EXISTS 1
#define DT_N_INST_4_nordic_nrf_egu DT_N_S_soc_S_peripheral_50000000_S_egu_1f000
#define DT_N_NODELABEL_egu4        DT_N_S_soc_S_peripheral_50000000_S_egu_1f000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_REG_IDX_0_VAL_ADDRESS 1342304256 /* 0x5001f000 */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_IRQ_IDX_0_VAL_irq 31
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_reg {126976 /* 0x1f000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_reg_IDX_0 126976
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1f000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1f000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1f000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1f000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_interrupts {31 /* 0x1f */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_interrupts_IDX_0 31
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1f000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1f000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1f000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1f000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1f000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1f000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1f000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1f000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1f000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1f000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1f000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1f000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_compatible {"nordic,nrf-egu"}
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1f000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_egu_1f000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/egu@20000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_egu_20000
 *
 * Binding (compatible = nordic,nrf-egu):
 *   $ZEPHYR_BASE\dts\bindings\arm\nordic,nrf-egu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_PATH "/soc/peripheral@50000000/egu@20000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_FULL_NAME "egu@20000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_ORD 41

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_EXISTS 1
#define DT_N_INST_5_nordic_nrf_egu DT_N_S_soc_S_peripheral_50000000_S_egu_20000
#define DT_N_NODELABEL_egu5        DT_N_S_soc_S_peripheral_50000000_S_egu_20000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_REG_IDX_0_VAL_ADDRESS 1342308352 /* 0x50020000 */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_IRQ_IDX_0_VAL_irq 32
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_COMPAT_MATCHES_nordic_nrf_egu 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_reg {131072 /* 0x20000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_reg_IDX_0 131072
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_20000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_20000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_20000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_20000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_interrupts {32 /* 0x20 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_interrupts_IDX_0 32
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_20000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_20000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_20000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_20000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_20000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_20000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_20000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_20000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_20000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_20000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_20000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_egu_20000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_compatible {"nordic,nrf-egu"}
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_compatible_IDX_0 "nordic,nrf-egu"
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_20000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_20000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_egu_20000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/i2c@8000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_i2c_8000
 *
 * Binding (compatible = nordic,nrf-twim):
 *   $ZEPHYR_BASE\dts\bindings\i2c\nordic,nrf-twim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_PATH "/soc/peripheral@50000000/i2c@8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_FULL_NAME "i2c@8000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_ORD 42

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_twim DT_N_S_soc_S_peripheral_50000000_S_i2c_8000
#define DT_N_NODELABEL_i2c0         DT_N_S_soc_S_peripheral_50000000_S_i2c_8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_REG_IDX_0_VAL_ADDRESS 1342210048 /* 0x50008000 */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_IRQ_IDX_0_VAL_irq 8
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_COMPAT_MATCHES_nordic_nrf_twim 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_zephyr_concat_buf_size 16
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_zephyr_concat_buf_size_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_zephyr_flash_buf_max_size 16
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_zephyr_flash_buf_max_size_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_reg {32768 /* 0x8000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_reg_IDX_0 32768
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_interrupts {8 /* 0x8 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_interrupts_IDX_0 8
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_clock_frequency 100000
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_label "I2C_0"
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_label_STRING_TOKEN I2C_0
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_label_STRING_UPPER_TOKEN I2C_0
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, label, 4)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_status "disabled"
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, status, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, status, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, status, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, status, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, status, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_compatible {"nordic,nrf-twim"}
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_compatible_IDX_0 "nordic,nrf-twim"
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_8000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/i2c@9000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_i2c_9000
 *
 * Binding (compatible = nordic,nrf-twim):
 *   $ZEPHYR_BASE\dts\bindings\i2c\nordic,nrf-twim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_PATH "/soc/peripheral@50000000/i2c@9000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_FULL_NAME "i2c@9000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_ORD 43

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_twim DT_N_S_soc_S_peripheral_50000000_S_i2c_9000
#define DT_N_NODELABEL_i2c1         DT_N_S_soc_S_peripheral_50000000_S_i2c_9000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_REG_IDX_0_VAL_ADDRESS 1342214144 /* 0x50009000 */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_IRQ_IDX_0_VAL_irq 9
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_COMPAT_MATCHES_nordic_nrf_twim 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_zephyr_concat_buf_size 16
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_zephyr_concat_buf_size_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_zephyr_flash_buf_max_size 16
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_zephyr_flash_buf_max_size_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_reg {36864 /* 0x9000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_reg_IDX_0 36864
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_interrupts {9 /* 0x9 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_interrupts_IDX_0 9
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_clock_frequency 100000
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_label "I2C_1"
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_label_STRING_TOKEN I2C_1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_label_STRING_UPPER_TOKEN I2C_1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, label, 4)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_status "disabled"
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, status, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, status, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, status, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, status, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, status, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_compatible {"nordic,nrf-twim"}
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_compatible_IDX_0 "nordic,nrf-twim"
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_9000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_9000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/i2c@b000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_i2c_b000
 *
 * Binding (compatible = nordic,nrf-twim):
 *   $ZEPHYR_BASE\dts\bindings\i2c\nordic,nrf-twim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_PATH "/soc/peripheral@50000000/i2c@b000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_FULL_NAME "i2c@b000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_ORD 44

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_EXISTS 1
#define DT_N_INST_3_nordic_nrf_twim DT_N_S_soc_S_peripheral_50000000_S_i2c_b000
#define DT_N_NODELABEL_i2c3         DT_N_S_soc_S_peripheral_50000000_S_i2c_b000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_REG_IDX_0_VAL_ADDRESS 1342222336 /* 0x5000b000 */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_COMPAT_MATCHES_nordic_nrf_twim 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_zephyr_concat_buf_size 16
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_zephyr_concat_buf_size_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_zephyr_flash_buf_max_size 16
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_zephyr_flash_buf_max_size_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_reg {45056 /* 0xb000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_reg_IDX_0 45056
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_interrupts {11 /* 0xb */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_clock_frequency 100000
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_label "I2C_3"
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_label_STRING_TOKEN I2C_3
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_label_STRING_UPPER_TOKEN I2C_3
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, label, 4)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_status "disabled"
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, status, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, status, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, status, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, status, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, status, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_compatible {"nordic,nrf-twim"}
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_compatible_IDX_0 "nordic,nrf-twim"
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_b000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/i2s@28000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_i2s_28000
 *
 * Binding (compatible = nordic,nrf-i2s):
 *   $ZEPHYR_BASE\dts\bindings\i2s\nordic,nrf-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_PATH "/soc/peripheral@50000000/i2s@28000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_FULL_NAME "i2s@28000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_ORD 45

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_i2s DT_N_S_soc_S_peripheral_50000000_S_i2s_28000
#define DT_N_NODELABEL_i2s0        DT_N_S_soc_S_peripheral_50000000_S_i2s_28000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_REG_IDX_0_VAL_ADDRESS 1342341120 /* 0x50028000 */
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_IRQ_IDX_0_VAL_irq 40
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_COMPAT_MATCHES_nordic_nrf_i2s 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_reg {163840 /* 0x28000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_reg_IDX_0 163840
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_interrupts {40 /* 0x28 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_interrupts_IDX_0 40
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_clock_source "PCLK32M_HFXO"
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_clock_source_STRING_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_clock_source_STRING_UPPER_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_clock_source_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_clock_source_ENUM_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_clock_source_ENUM_UPPER_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_clock_source_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, clock_source, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, clock_source, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, clock_source, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, clock_source, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, clock_source, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, clock_source, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, clock_source, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, clock_source, 7) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, clock_source, 8) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, clock_source, 9) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, clock_source, 10) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, clock_source, 11)
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_clock_source_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, clock_source, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, clock_source, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, clock_source, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, clock_source, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, clock_source, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, clock_source, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, clock_source, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, clock_source, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, clock_source, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, clock_source, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, clock_source, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, clock_source, 11, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_clock_source_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_label "I2S_0"
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_label_STRING_TOKEN I2S_0
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_label_STRING_UPPER_TOKEN I2S_0
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, label, 4)
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_status "disabled"
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, status, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, status, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, status, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, status, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, status, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_compatible {"nordic,nrf-i2s"}
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_compatible_IDX_0 "nordic,nrf-i2s"
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2s_28000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_i2s_28000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/kmu@39000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_kmu_39000
 *
 * Binding (compatible = nordic,nrf-kmu):
 *   $ZEPHYR_BASE\dts\bindings\arm\nordic,nrf-kmu.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_PATH "/soc/peripheral@50000000/kmu@39000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_FULL_NAME "kmu@39000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_ORD 46

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_kmu DT_N_S_soc_S_peripheral_50000000_S_kmu_39000
#define DT_N_NODELABEL_kmu         DT_N_S_soc_S_peripheral_50000000_S_kmu_39000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_REG_IDX_0_VAL_ADDRESS 1342410752 /* 0x50039000 */
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_IRQ_IDX_0_VAL_irq 57
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_COMPAT_MATCHES_nordic_nrf_kmu 1
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_reg {233472 /* 0x39000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_reg_IDX_0 233472
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_kmu_39000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_kmu_39000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_kmu_39000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_kmu_39000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_interrupts {57 /* 0x39 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_interrupts_IDX_0 57
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_kmu_39000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_kmu_39000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_kmu_39000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_kmu_39000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_kmu_39000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_kmu_39000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_kmu_39000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_kmu_39000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_kmu_39000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_kmu_39000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_kmu_39000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_kmu_39000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_compatible {"nordic,nrf-kmu"}
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_compatible_IDX_0 "nordic,nrf-kmu"
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_kmu_39000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_kmu_39000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_kmu_39000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/pdm@26000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_pdm_26000
 *
 * Binding (compatible = nordic,nrf-pdm):
 *   $ZEPHYR_BASE\dts\bindings\audio\nordic,nrf-pdm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_PATH "/soc/peripheral@50000000/pdm@26000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_FULL_NAME "pdm@26000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_ORD 47

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_pdm DT_N_S_soc_S_peripheral_50000000_S_pdm_26000
#define DT_N_NODELABEL_pdm0        DT_N_S_soc_S_peripheral_50000000_S_pdm_26000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_REG_IDX_0_VAL_ADDRESS 1342332928 /* 0x50026000 */
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_IRQ_IDX_0_VAL_irq 38
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_COMPAT_MATCHES_nordic_nrf_pdm 1
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_reg {155648 /* 0x26000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_reg_IDX_0 155648
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_interrupts {38 /* 0x26 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_interrupts_IDX_0 38
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_clock_source "PCLK32M_HFXO"
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_clock_source_STRING_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_clock_source_STRING_UPPER_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_clock_source_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_clock_source_ENUM_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_clock_source_ENUM_UPPER_TOKEN PCLK32M_HFXO
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_clock_source_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, clock_source, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, clock_source, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, clock_source, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, clock_source, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, clock_source, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, clock_source, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, clock_source, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, clock_source, 7) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, clock_source, 8) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, clock_source, 9) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, clock_source, 10) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, clock_source, 11)
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_clock_source_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, clock_source, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, clock_source, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, clock_source, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, clock_source, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, clock_source, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, clock_source, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, clock_source, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, clock_source, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, clock_source, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, clock_source, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, clock_source, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, clock_source, 11, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_clock_source_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_queue_size 4
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_queue_size_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_status "disabled"
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, status, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, status, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, status, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, status, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, status, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_compatible {"nordic,nrf-pdm"}
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_compatible_IDX_0 "nordic,nrf-pdm"
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_label "PDM_0"
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_label_STRING_TOKEN PDM_0
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_label_STRING_UPPER_TOKEN PDM_0
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, label, 4)
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pdm_26000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_pdm_26000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/power@5000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_power_5000
 *
 * Binding (compatible = nordic,nrf-power):
 *   $ZEPHYR_BASE\dts\bindings\power\nordic,nrf-power.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_PATH "/soc/peripheral@50000000/power@5000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_FULL_NAME "power@5000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_ORD 48

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_power DT_N_S_soc_S_peripheral_50000000_S_power_5000
#define DT_N_NODELABEL_power         DT_N_S_soc_S_peripheral_50000000_S_power_5000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_REG_IDX_0_VAL_ADDRESS 1342197760 /* 0x50005000 */
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_IRQ_IDX_0_VAL_irq 5
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_COMPAT_MATCHES_nordic_nrf_power 1
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_reg {20480 /* 0x5000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_reg_IDX_0 20480
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_power_5000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_power_5000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_power_5000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_power_5000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_interrupts {5 /* 0x5 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_interrupts_IDX_0 5
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_power_5000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_power_5000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_power_5000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_power_5000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_power_5000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_power_5000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_power_5000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_power_5000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_power_5000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_power_5000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_power_5000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_power_5000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_compatible {"nordic,nrf-power"}
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_compatible_IDX_0 "nordic,nrf-power"
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_power_5000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_power_5000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_power_5000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/pwm@21000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_pwm_21000
 *
 * Binding (compatible = nordic,nrf-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\nordic,nrf-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_PATH "/soc/peripheral@50000000/pwm@21000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_FULL_NAME "pwm@21000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_ORD 49

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_EXISTS 1
#define DT_N_ALIAS_rgb_pwm         DT_N_S_soc_S_peripheral_50000000_S_pwm_21000
#define DT_N_INST_0_nordic_nrf_pwm DT_N_S_soc_S_peripheral_50000000_S_pwm_21000
#define DT_N_NODELABEL_pwm0        DT_N_S_soc_S_peripheral_50000000_S_pwm_21000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_REG_IDX_0_VAL_ADDRESS 1342312448 /* 0x50021000 */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_IRQ_IDX_0_VAL_irq 33
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_COMPAT_MATCHES_nordic_nrf_pwm 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_reg {135168 /* 0x21000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_reg_IDX_0 135168
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_center_aligned 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_center_aligned_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_ch0_pin 29
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_ch0_pin_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_ch0_inverted 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_ch0_inverted_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_ch1_pin 30
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_ch1_pin_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_ch1_inverted 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_ch1_inverted_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_ch2_pin 31
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_ch2_pin_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_ch2_inverted 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_ch2_inverted_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_ch3_inverted 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_ch3_inverted_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_label "PWM_0"
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_label_STRING_TOKEN PWM_0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_label_STRING_UPPER_TOKEN PWM_0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, label, 4)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_compatible {"nordic,nrf-pwm"}
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_compatible_IDX_0 "nordic,nrf-pwm"
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_interrupts {33 /* 0x21 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_interrupts_IDX_0 33
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_21000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/pwm@22000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_pwm_22000
 *
 * Binding (compatible = nordic,nrf-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\nordic,nrf-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_PATH "/soc/peripheral@50000000/pwm@22000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_FULL_NAME "pwm@22000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_ORD 50

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_EXISTS 1
#define DT_N_ALIAS_buzzer_pwm      DT_N_S_soc_S_peripheral_50000000_S_pwm_22000
#define DT_N_INST_1_nordic_nrf_pwm DT_N_S_soc_S_peripheral_50000000_S_pwm_22000
#define DT_N_NODELABEL_pwm1        DT_N_S_soc_S_peripheral_50000000_S_pwm_22000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_REG_IDX_0_VAL_ADDRESS 1342316544 /* 0x50022000 */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_IRQ_IDX_0_VAL_irq 34
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_COMPAT_MATCHES_nordic_nrf_pwm 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_reg {139264 /* 0x22000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_reg_IDX_0 139264
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_center_aligned 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_center_aligned_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_ch0_pin 28
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_ch0_pin_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_ch0_inverted 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_ch0_inverted_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_ch1_inverted 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_ch1_inverted_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_ch2_inverted 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_ch2_inverted_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_ch3_inverted 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_ch3_inverted_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_label "PWM_1"
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_label_STRING_TOKEN PWM_1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_label_STRING_UPPER_TOKEN PWM_1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, label, 4)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_compatible {"nordic,nrf-pwm"}
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_compatible_IDX_0 "nordic,nrf-pwm"
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_interrupts {34 /* 0x22 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_interrupts_IDX_0 34
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_22000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/pwm@23000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_pwm_23000
 *
 * Binding (compatible = nordic,nrf-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\nordic,nrf-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_PATH "/soc/peripheral@50000000/pwm@23000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_FULL_NAME "pwm@23000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_ORD 51

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_EXISTS 1
#define DT_N_ALIAS_nmos_pwm        DT_N_S_soc_S_peripheral_50000000_S_pwm_23000
#define DT_N_INST_2_nordic_nrf_pwm DT_N_S_soc_S_peripheral_50000000_S_pwm_23000
#define DT_N_NODELABEL_pwm2        DT_N_S_soc_S_peripheral_50000000_S_pwm_23000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_REG_IDX_0_VAL_ADDRESS 1342320640 /* 0x50023000 */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_IRQ_IDX_0_VAL_irq 35
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_COMPAT_MATCHES_nordic_nrf_pwm 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_reg {143360 /* 0x23000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_reg_IDX_0 143360
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_center_aligned 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_center_aligned_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_ch0_pin 13
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_ch0_pin_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_ch0_inverted 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_ch0_inverted_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_ch1_pin 14
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_ch1_pin_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_ch1_inverted 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_ch1_inverted_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_ch2_pin 15
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_ch2_pin_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_ch2_inverted 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_ch2_inverted_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_ch3_pin 16
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_ch3_pin_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_ch3_inverted 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_ch3_inverted_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_label "PWM_2"
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_label_STRING_TOKEN PWM_2
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_label_STRING_UPPER_TOKEN PWM_2
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, label, 4)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_compatible {"nordic,nrf-pwm"}
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_compatible_IDX_0 "nordic,nrf-pwm"
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_interrupts {35 /* 0x23 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_interrupts_IDX_0 35
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_23000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/pwm@24000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_pwm_24000
 *
 * Binding (compatible = nordic,nrf-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\nordic,nrf-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_PATH "/soc/peripheral@50000000/pwm@24000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_FULL_NAME "pwm@24000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_ORD 52

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_EXISTS 1
#define DT_N_INST_3_nordic_nrf_pwm DT_N_S_soc_S_peripheral_50000000_S_pwm_24000
#define DT_N_NODELABEL_pwm3        DT_N_S_soc_S_peripheral_50000000_S_pwm_24000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_REG_IDX_0_VAL_ADDRESS 1342324736 /* 0x50024000 */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_IRQ_IDX_0_VAL_irq 36
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_COMPAT_MATCHES_nordic_nrf_pwm 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_reg {147456 /* 0x24000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_reg_IDX_0 147456
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_center_aligned 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_center_aligned_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_ch0_inverted 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_ch0_inverted_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_ch1_inverted 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_ch1_inverted_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_ch2_inverted 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_ch2_inverted_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_ch3_inverted 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_ch3_inverted_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_label "PWM_3"
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_label_STRING_TOKEN PWM_3
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_label_STRING_UPPER_TOKEN PWM_3
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, label, 4)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_compatible {"nordic,nrf-pwm"}
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_compatible_IDX_0 "nordic,nrf-pwm"
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_interrupts {36 /* 0x24 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_interrupts_IDX_0 36
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_pwm_24000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/regulator@4000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_regulator_4000
 *
 * Binding (compatible = nordic,nrf-regulators):
 *   $ZEPHYR_BASE\dts\bindings\power\nordic,nrf-regulators.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_PATH "/soc/peripheral@50000000/regulator@4000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_FULL_NAME "regulator@4000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_ORD 53

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_regulators DT_N_S_soc_S_peripheral_50000000_S_regulator_4000
#define DT_N_NODELABEL_regulators         DT_N_S_soc_S_peripheral_50000000_S_regulator_4000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_REG_IDX_0_VAL_ADDRESS 1342193664 /* 0x50004000 */
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_IRQ_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_COMPAT_MATCHES_nordic_nrf_regulators 1
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_P_reg {16384 /* 0x4000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_P_reg_IDX_0 16384
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_regulator_4000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_regulator_4000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_regulator_4000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_regulator_4000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_regulator_4000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_regulator_4000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_regulator_4000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_regulator_4000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_regulator_4000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_regulator_4000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_regulator_4000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_regulator_4000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_P_compatible {"nordic,nrf-regulators"}
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_P_compatible_IDX_0 "nordic,nrf-regulators"
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_regulator_4000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_regulator_4000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_regulator_4000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/rtc@14000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_rtc_14000
 *
 * Binding (compatible = nordic,nrf-rtc):
 *   $ZEPHYR_BASE\dts\bindings\rtc\nordic,nrf-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_PATH "/soc/peripheral@50000000/rtc@14000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_FULL_NAME "rtc@14000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_ORD 54

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_rtc DT_N_S_soc_S_peripheral_50000000_S_rtc_14000
#define DT_N_NODELABEL_rtc0        DT_N_S_soc_S_peripheral_50000000_S_rtc_14000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_REG_IDX_0_VAL_ADDRESS 1342259200 /* 0x50014000 */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_IRQ_IDX_0_VAL_irq 20
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_COMPAT_MATCHES_nordic_nrf_rtc 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_reg {81920 /* 0x14000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_reg_IDX_0 81920
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_cc_num 4
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_ppi_wrap 0
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_ppi_wrap_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_fixed_top 0
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_fixed_top_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_clock_frequency 32768
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_label "RTC_0"
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_label_STRING_TOKEN RTC_0
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_label_STRING_UPPER_TOKEN RTC_0
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, label, 4)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_interrupts {20 /* 0x14 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_interrupts_IDX_0 20
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_prescaler 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_compatible {"nordic,nrf-rtc"}
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_compatible_IDX_0 "nordic,nrf-rtc"
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_14000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/rtc@15000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_rtc_15000
 *
 * Binding (compatible = nordic,nrf-rtc):
 *   $ZEPHYR_BASE\dts\bindings\rtc\nordic,nrf-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_PATH "/soc/peripheral@50000000/rtc@15000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_FULL_NAME "rtc@15000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_ORD 55

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_rtc DT_N_S_soc_S_peripheral_50000000_S_rtc_15000
#define DT_N_NODELABEL_rtc1        DT_N_S_soc_S_peripheral_50000000_S_rtc_15000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_REG_IDX_0_VAL_ADDRESS 1342263296 /* 0x50015000 */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_IRQ_IDX_0_VAL_irq 21
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_COMPAT_MATCHES_nordic_nrf_rtc 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_reg {86016 /* 0x15000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_reg_IDX_0 86016
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_cc_num 4
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_ppi_wrap 0
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_ppi_wrap_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_fixed_top 0
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_fixed_top_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_clock_frequency 32768
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_label "RTC_1"
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_label_STRING_TOKEN RTC_1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_label_STRING_UPPER_TOKEN RTC_1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, label, 4)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_interrupts {21 /* 0x15 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_interrupts_IDX_0 21
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_prescaler 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_compatible {"nordic,nrf-rtc"}
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_compatible_IDX_0 "nordic,nrf-rtc"
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_rtc_15000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/spi@8000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_spi_8000
 *
 * Binding (compatible = nordic,nrf-spim):
 *   $ZEPHYR_BASE\dts\bindings\spi\nordic,nrf-spim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_PATH "/soc/peripheral@50000000/spi@8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_FULL_NAME "spi@8000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_ORD 56

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_spim DT_N_S_soc_S_peripheral_50000000_S_spi_8000
#define DT_N_NODELABEL_spi0         DT_N_S_soc_S_peripheral_50000000_S_spi_8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_REG_IDX_0_VAL_ADDRESS 1342210048 /* 0x50008000 */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_IRQ_IDX_0_VAL_irq 8
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_COMPAT_MATCHES_nordic_nrf_spim 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_miso_pull_up 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_miso_pull_up_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_miso_pull_down 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_miso_pull_down_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_anomaly_58_workaround 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_anomaly_58_workaround_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_reg {32768 /* 0x8000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_reg_IDX_0 32768
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_interrupts {8 /* 0x8 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_interrupts_IDX_0 8
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_label "SPI_0"
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_label_STRING_TOKEN SPI_0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_label_STRING_UPPER_TOKEN SPI_0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, label, 4)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_status "disabled"
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, status, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, status, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, status, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, status, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, status, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_compatible {"nordic,nrf-spim"}
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_compatible_IDX_0 "nordic,nrf-spim"
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_8000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/spi@9000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_spi_9000
 *
 * Binding (compatible = nordic,nrf-spim):
 *   $ZEPHYR_BASE\dts\bindings\spi\nordic,nrf-spim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_PATH "/soc/peripheral@50000000/spi@9000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_FULL_NAME "spi@9000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_ORD 57

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_spim DT_N_S_soc_S_peripheral_50000000_S_spi_9000
#define DT_N_NODELABEL_spi1         DT_N_S_soc_S_peripheral_50000000_S_spi_9000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_REG_IDX_0_VAL_ADDRESS 1342214144 /* 0x50009000 */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_IRQ_IDX_0_VAL_irq 9
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_COMPAT_MATCHES_nordic_nrf_spim 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_miso_pull_up 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_miso_pull_up_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_miso_pull_down 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_miso_pull_down_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_anomaly_58_workaround 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_anomaly_58_workaround_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_reg {36864 /* 0x9000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_reg_IDX_0 36864
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_interrupts {9 /* 0x9 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_interrupts_IDX_0 9
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_label "SPI_1"
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_label_STRING_TOKEN SPI_1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_label_STRING_UPPER_TOKEN SPI_1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, label, 4)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_status "disabled"
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, status, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, status, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, status, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, status, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, status, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_compatible {"nordic,nrf-spim"}
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_compatible_IDX_0 "nordic,nrf-spim"
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_9000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_9000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/spi@a000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_spi_a000
 *
 * Binding (compatible = nordic,nrf-spim):
 *   $ZEPHYR_BASE\dts\bindings\spi\nordic,nrf-spim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_PATH "/soc/peripheral@50000000/spi@a000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_FULL_NAME "spi@a000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_ORD 58

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_EXISTS 1
#define DT_N_INST_3_nordic_nrf_spim DT_N_S_soc_S_peripheral_50000000_S_spi_a000
#define DT_N_NODELABEL_spi2         DT_N_S_soc_S_peripheral_50000000_S_spi_a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_REG_IDX_0_VAL_ADDRESS 1342218240 /* 0x5000a000 */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_IRQ_IDX_0_VAL_irq 10
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_COMPAT_MATCHES_nordic_nrf_spim 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_miso_pull_up 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_miso_pull_up_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_miso_pull_down 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_miso_pull_down_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_anomaly_58_workaround 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_anomaly_58_workaround_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_reg {40960 /* 0xa000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_reg_IDX_0 40960
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_interrupts {10 /* 0xa */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_interrupts_IDX_0 10
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_label "SPI_2"
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_label_STRING_TOKEN SPI_2
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_label_STRING_UPPER_TOKEN SPI_2
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, label, 4)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_status "disabled"
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, status, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, status, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, status, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, status, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, status, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_compatible {"nordic,nrf-spim"}
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_compatible_IDX_0 "nordic,nrf-spim"
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_a000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/timer@f000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_timer_f000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE\dts\bindings\timer\nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_PATH "/soc/peripheral@50000000/timer@f000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_FULL_NAME "timer@f000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_ORD 59

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_timer DT_N_S_soc_S_peripheral_50000000_S_timer_f000
#define DT_N_NODELABEL_timer0        DT_N_S_soc_S_peripheral_50000000_S_timer_f000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_REG_IDX_0_VAL_ADDRESS 1342238720 /* 0x5000f000 */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_IRQ_IDX_0_VAL_irq 15
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_reg {61440 /* 0xf000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_reg_IDX_0 61440
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_cc_num 6
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_interrupts {15 /* 0xf */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_interrupts_IDX_0 15
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_label "TIMER_0"
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_label_STRING_TOKEN TIMER_0
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_label_STRING_UPPER_TOKEN TIMER_0
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, label, 6)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_prescaler 0
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_timer_f000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/timer@10000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_timer_10000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE\dts\bindings\timer\nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_PATH "/soc/peripheral@50000000/timer@10000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_FULL_NAME "timer@10000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_ORD 60

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_timer DT_N_S_soc_S_peripheral_50000000_S_timer_10000
#define DT_N_NODELABEL_timer1        DT_N_S_soc_S_peripheral_50000000_S_timer_10000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_REG_IDX_0_VAL_ADDRESS 1342242816 /* 0x50010000 */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_IRQ_IDX_0_VAL_irq 16
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_reg {65536 /* 0x10000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_reg_IDX_0 65536
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_cc_num 6
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_interrupts {16 /* 0x10 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_interrupts_IDX_0 16
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_label "TIMER_1"
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_label_STRING_TOKEN TIMER_1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_label_STRING_UPPER_TOKEN TIMER_1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, label, 6)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_prescaler 0
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_timer_10000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/timer@11000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_timer_11000
 *
 * Binding (compatible = nordic,nrf-timer):
 *   $ZEPHYR_BASE\dts\bindings\timer\nordic,nrf-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_PATH "/soc/peripheral@50000000/timer@11000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_FULL_NAME "timer@11000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_ORD 61

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_timer DT_N_S_soc_S_peripheral_50000000_S_timer_11000
#define DT_N_NODELABEL_timer2        DT_N_S_soc_S_peripheral_50000000_S_timer_11000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_REG_IDX_0_VAL_ADDRESS 1342246912 /* 0x50011000 */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_IRQ_IDX_0_VAL_irq 17
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_COMPAT_MATCHES_nordic_nrf_timer 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_reg {69632 /* 0x11000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_reg_IDX_0 69632
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_cc_num 6
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_cc_num_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_interrupts {17 /* 0x11 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_interrupts_IDX_0 17
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_label "TIMER_2"
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_label_STRING_TOKEN TIMER_2
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_label_STRING_UPPER_TOKEN TIMER_2
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, label, 6)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_prescaler 0
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_compatible {"nordic,nrf-timer"}
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_compatible_IDX_0 "nordic,nrf-timer"
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_timer_11000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/uart@8000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_uart_8000
 *
 * Binding (compatible = nordic,nrf-uarte):
 *   $ZEPHYR_BASE\dts\bindings\serial\nordic,nrf-uarte.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_PATH "/soc/peripheral@50000000/uart@8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_FULL_NAME "uart@8000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_ORD 62

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_uarte DT_N_S_soc_S_peripheral_50000000_S_uart_8000
#define DT_N_NODELABEL_uart0         DT_N_S_soc_S_peripheral_50000000_S_uart_8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_REG_IDX_0_VAL_ADDRESS 1342210048 /* 0x50008000 */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_IRQ_IDX_0_VAL_irq 8
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_COMPAT_MATCHES_nordic_nrf_uarte 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_reg {32768 /* 0x8000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_reg_IDX_0 32768
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_interrupts {8 /* 0x8 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_interrupts_IDX_0 8
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_disable_rx 0
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_disable_rx_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_current_speed 115200
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_current_speed_ENUM_IDX 12
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_tx_pin 18
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_tx_pin_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_rx_pin 19
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_rx_pin_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_rts_pin 20
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_rts_pin_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_cts_pin 21
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_cts_pin_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_rx_pull_up 0
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_rx_pull_up_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_cts_pull_up 0
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_cts_pull_up_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_label "UART_0"
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_label_STRING_TOKEN UART_0
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_label_STRING_UPPER_TOKEN UART_0
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, label, 5)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_hw_flow_control 0
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_compatible {"nordic,nrf-uarte"}
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_compatible_IDX_0 "nordic,nrf-uarte"
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_uart_8000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/uart@9000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_uart_9000
 *
 * Binding (compatible = nordic,nrf-uarte):
 *   $ZEPHYR_BASE\dts\bindings\serial\nordic,nrf-uarte.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_PATH "/soc/peripheral@50000000/uart@9000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_FULL_NAME "uart@9000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_ORD 63

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_EXISTS 1
#define DT_N_INST_1_nordic_nrf_uarte DT_N_S_soc_S_peripheral_50000000_S_uart_9000
#define DT_N_NODELABEL_uart1         DT_N_S_soc_S_peripheral_50000000_S_uart_9000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_REG_IDX_0_VAL_ADDRESS 1342214144 /* 0x50009000 */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_IRQ_IDX_0_VAL_irq 9
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_COMPAT_MATCHES_nordic_nrf_uarte 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_reg {36864 /* 0x9000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_reg_IDX_0 36864
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_interrupts {9 /* 0x9 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_interrupts_IDX_0 9
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_disable_rx 0
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_disable_rx_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_current_speed 1000000
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_current_speed_ENUM_IDX 17
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_tx_pin 22
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_tx_pin_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_rx_pin 23
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_rx_pin_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_rts_pin 24
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_rts_pin_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_cts_pin 25
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_cts_pin_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_rx_pull_up 0
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_rx_pull_up_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_cts_pull_up 0
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_cts_pull_up_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_label "UART_1"
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_label_STRING_TOKEN UART_1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_label_STRING_UPPER_TOKEN UART_1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, label, 5)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_hw_flow_control 0
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_compatible {"nordic,nrf-uarte"}
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_compatible_IDX_0 "nordic,nrf-uarte"
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_uart_9000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/uart@a000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_uart_a000
 *
 * Binding (compatible = nordic,nrf-uarte):
 *   $ZEPHYR_BASE\dts\bindings\serial\nordic,nrf-uarte.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_PATH "/soc/peripheral@50000000/uart@a000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_FULL_NAME "uart@a000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_ORD 64

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_EXISTS 1
#define DT_N_INST_2_nordic_nrf_uarte DT_N_S_soc_S_peripheral_50000000_S_uart_a000
#define DT_N_NODELABEL_uart2         DT_N_S_soc_S_peripheral_50000000_S_uart_a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_REG_IDX_0_VAL_ADDRESS 1342218240 /* 0x5000a000 */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_IRQ_IDX_0_VAL_irq 10
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_COMPAT_MATCHES_nordic_nrf_uarte 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_reg {40960 /* 0xa000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_reg_IDX_0 40960
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_interrupts {10 /* 0xa */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_interrupts_IDX_0 10
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_disable_rx 0
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_disable_rx_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_rx_pull_up 0
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_rx_pull_up_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_cts_pull_up 0
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_cts_pull_up_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_label "UART_2"
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_label_STRING_TOKEN UART_2
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_label_STRING_UPPER_TOKEN UART_2
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, label, 5)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_hw_flow_control 0
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_status "disabled"
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, status, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, status, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, status, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, status, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, status, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_compatible {"nordic,nrf-uarte"}
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_compatible_IDX_0 "nordic,nrf-uarte"
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_uart_a000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/uart@b000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_uart_b000
 *
 * Binding (compatible = nordic,nrf-uarte):
 *   $ZEPHYR_BASE\dts\bindings\serial\nordic,nrf-uarte.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_PATH "/soc/peripheral@50000000/uart@b000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_FULL_NAME "uart@b000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_ORD 65

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_EXISTS 1
#define DT_N_INST_3_nordic_nrf_uarte DT_N_S_soc_S_peripheral_50000000_S_uart_b000
#define DT_N_NODELABEL_uart3         DT_N_S_soc_S_peripheral_50000000_S_uart_b000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_REG_IDX_0_VAL_ADDRESS 1342222336 /* 0x5000b000 */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_COMPAT_MATCHES_nordic_nrf_uarte 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_reg {45056 /* 0xb000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_reg_IDX_0 45056
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_interrupts {11 /* 0xb */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_disable_rx 0
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_disable_rx_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_rx_pull_up 0
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_rx_pull_up_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_cts_pull_up 0
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_cts_pull_up_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_label "UART_3"
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_label_STRING_TOKEN UART_3
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_label_STRING_UPPER_TOKEN UART_3
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, label, 5)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_hw_flow_control 0
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_status "disabled"
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, status, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, status, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, status, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, status, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, status, 7)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_compatible {"nordic,nrf-uarte"}
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_compatible_IDX_0 "nordic,nrf-uarte"
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_uart_b000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/vmc@3a000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000
 *
 * Binding (compatible = nordic,nrf-vmc):
 *   $ZEPHYR_BASE\dts\bindings\power\nordic,nrf-vmc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_PATH "/soc/peripheral@50000000/vmc@3a000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_FULL_NAME "vmc@3a000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_ORD 66

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_vmc DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000
#define DT_N_NODELABEL_vmc         DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_REG_IDX_0_VAL_ADDRESS 1342414848 /* 0x5003a000 */
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_IRQ_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_COMPAT_MATCHES_nordic_nrf_vmc 1
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_P_reg {237568 /* 0x3a000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_P_reg_IDX_0 237568
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_P_compatible {"nordic,nrf-vmc"}
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_P_compatible_IDX_0 "nordic,nrf-vmc"
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/watchdog@18000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000
 *
 * Binding (compatible = nordic,nrf-watchdog):
 *   $ZEPHYR_BASE\dts\bindings\watchdog\nordic,nrf-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_PATH "/soc/peripheral@50000000/watchdog@18000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_FULL_NAME "watchdog@18000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_ORD 67

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_watchdog DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000
#define DT_N_NODELABEL_wdt              DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000
#define DT_N_NODELABEL_wdt0             DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_REG_IDX_0_VAL_ADDRESS 1342275584 /* 0x50018000 */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_COMPAT_MATCHES_nordic_nrf_watchdog 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_reg {98304 /* 0x18000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_reg_IDX_0 98304
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_label "WDT"
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_label_STRING_TOKEN WDT
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_label_STRING_UPPER_TOKEN WDT
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000, label, 2)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000, label, 2, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_interrupts {24 /* 0x18 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_compatible {"nordic,nrf-watchdog"}
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_compatible_IDX_0 "nordic,nrf-watchdog"
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/flash-controller@39000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000
 *
 * Binding (compatible = nordic,nrf91-flash-controller):
 *   $ZEPHYR_BASE\dts\bindings\flash_controller\nordic,nrf91-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_PATH "/soc/peripheral@50000000/flash-controller@39000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_FULL_NAME "flash-controller@39000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_ORD 68

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_SUPPORTS_ORDS \
	69, /* /soc/peripheral@50000000/flash-controller@39000/flash@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_EXISTS 1
#define DT_N_INST_0_nordic_nrf91_flash_controller DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000
#define DT_N_NODELABEL_flash_controller           DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_REG_IDX_0_VAL_ADDRESS 1342410752 /* 0x50039000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_IRQ_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_COMPAT_MATCHES_nordic_nrf91_flash_controller 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_P_label "NRF_FLASH_DRV_NAME"
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_P_label_STRING_TOKEN NRF_FLASH_DRV_NAME
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_P_label_STRING_UPPER_TOKEN NRF_FLASH_DRV_NAME
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 7) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 8) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 9) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 10) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 11) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 12) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 13) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 14) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 15) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 16) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 17)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 14, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 15, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 16, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, label, 17, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_P_reg {233472 /* 0x39000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_P_reg_IDX_0 233472
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_P_compatible {"nordic,nrf91-flash-controller"}
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_P_compatible_IDX_0 "nordic,nrf91-flash-controller"
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/flash-controller@39000/flash@0
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE\dts\bindings\mtd\soc-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_PATH "/soc/peripheral@50000000/flash-controller@39000/flash@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_FULL_NAME "flash@0"

/* Node parent (/soc/peripheral@50000000/flash-controller@39000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_PARENT DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_ORD 69

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_REQUIRES_ORDS \
	68, /* /soc/peripheral@50000000/flash-controller@39000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_SUPPORTS_ORDS \
	70, /* /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_EXISTS 1
#define DT_N_INST_0_soc_nv_flash DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0
#define DT_N_NODELABEL_flash0    DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_REG_IDX_0_VAL_SIZE 1048576 /* 0x100000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_IRQ_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_P_label "NRF_FLASH"
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_P_label_STRING_TOKEN NRF_FLASH
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_P_label_STRING_UPPER_TOKEN NRF_FLASH
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0, label, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0, label, 7) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0, label, 8)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0, label, 8, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_P_erase_block_size 4096
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_P_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_P_write_block_size 4
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_P_compatible {"soc-nv-flash"}
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_P_reg {0 /* 0x0 */, 1048576 /* 0x100000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_P_reg_IDX_1 1048576
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE\dts\bindings\mtd\fixed-partitions.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_PATH "/soc/peripheral@50000000/flash-controller@39000/flash@0/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_FULL_NAME "partitions"

/* Node parent (/soc/peripheral@50000000/flash-controller@39000/flash@0) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_PARENT DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_ORD 70

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_REQUIRES_ORDS \
	69, /* /soc/peripheral@50000000/flash-controller@39000/flash@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_SUPPORTS_ORDS \
	71, /* /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@0 */ \
	72, /* /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@10000 */ \
	73, /* /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@40000 */ \
	74, /* /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@80000 */ \
	75, /* /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@b0000 */ \
	76, /* /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@f0000 */ \
	77, /* /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@fa000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@0
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_PATH "/soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_FULL_NAME "partition@0"

/* Node parent (/soc/peripheral@50000000/flash-controller@39000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_PARENT DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_ORD 71

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_REQUIRES_ORDS \
	70, /* /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_EXISTS 1
#define DT_N_NODELABEL_boot_partition DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_IRQ_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_P_label "mcuboot"
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_P_label_STRING_TOKEN mcuboot
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_P_label_STRING_UPPER_TOKEN MCUBOOT
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0, label, 6)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_P_read_only 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_P_read_only_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_P_reg {0 /* 0x0 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_1 65536
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@10000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_PATH "/soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@10000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_FULL_NAME "partition@10000"

/* Node parent (/soc/peripheral@50000000/flash-controller@39000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_PARENT DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_ORD 72

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_REQUIRES_ORDS \
	70, /* /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_EXISTS 1
#define DT_N_NODELABEL_slot0_partition DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_REG_IDX_0_VAL_ADDRESS 65536 /* 0x10000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_REG_IDX_0_VAL_SIZE 196608 /* 0x30000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_IRQ_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_PARTITION_ID 1

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_P_label "image-0"
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_P_label_STRING_TOKEN image_0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_P_label_STRING_UPPER_TOKEN IMAGE_0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000, label, 6)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_P_read_only 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_P_reg {65536 /* 0x10000 */, 196608 /* 0x30000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_P_reg_IDX_0 65536
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_P_reg_IDX_1 196608
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@40000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_PATH "/soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@40000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_FULL_NAME "partition@40000"

/* Node parent (/soc/peripheral@50000000/flash-controller@39000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_PARENT DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_ORD 73

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_REQUIRES_ORDS \
	70, /* /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_EXISTS 1
#define DT_N_NODELABEL_slot0_ns_partition DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_REG_IDX_0_VAL_ADDRESS 262144 /* 0x40000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_REG_IDX_0_VAL_SIZE 262144 /* 0x40000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_IRQ_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_PARTITION_ID 2

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_P_label "image-0-nonsecure"
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_P_label_STRING_TOKEN image_0_nonsecure
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_P_label_STRING_UPPER_TOKEN IMAGE_0_NONSECURE
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 7) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 8) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 9) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 10) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 11) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 12) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 13) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 14) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 15) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 16)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 14, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 15, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, label, 16, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_P_read_only 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_P_reg {262144 /* 0x40000 */, 262144 /* 0x40000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_P_reg_IDX_0 262144
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_P_reg_IDX_1 262144
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@80000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_PATH "/soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@80000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_FULL_NAME "partition@80000"

/* Node parent (/soc/peripheral@50000000/flash-controller@39000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_PARENT DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_ORD 74

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_REQUIRES_ORDS \
	70, /* /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_EXISTS 1
#define DT_N_NODELABEL_slot1_partition DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_REG_IDX_0_VAL_ADDRESS 524288 /* 0x80000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_REG_IDX_0_VAL_SIZE 196608 /* 0x30000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_IRQ_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_PARTITION_ID 3

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_P_label "image-1"
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_P_label_STRING_TOKEN image_1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_P_label_STRING_UPPER_TOKEN IMAGE_1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000, label, 6)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_P_read_only 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_P_reg {524288 /* 0x80000 */, 196608 /* 0x30000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_P_reg_IDX_0 524288
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_P_reg_IDX_1 196608
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@b0000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_PATH "/soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@b0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_FULL_NAME "partition@b0000"

/* Node parent (/soc/peripheral@50000000/flash-controller@39000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_PARENT DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_ORD 75

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_REQUIRES_ORDS \
	70, /* /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_EXISTS 1
#define DT_N_NODELABEL_slot1_ns_partition DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_REG_IDX_0_VAL_ADDRESS 720896 /* 0xb0000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_REG_IDX_0_VAL_SIZE 262144 /* 0x40000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_IRQ_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_PARTITION_ID 4

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_P_label "image-1-nonsecure"
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_P_label_STRING_TOKEN image_1_nonsecure
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_P_label_STRING_UPPER_TOKEN IMAGE_1_NONSECURE
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 7) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 8) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 9) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 10) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 11) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 12) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 13) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 14) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 15) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 16)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 14, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 15, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, label, 16, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_P_read_only 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_P_reg {720896 /* 0xb0000 */, 262144 /* 0x40000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_P_reg_IDX_0 720896
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_P_reg_IDX_1 262144
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@f0000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_PATH "/soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@f0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_FULL_NAME "partition@f0000"

/* Node parent (/soc/peripheral@50000000/flash-controller@39000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_PARENT DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_ORD 76

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_REQUIRES_ORDS \
	70, /* /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_EXISTS 1
#define DT_N_NODELABEL_scratch_partition DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_REG_IDX_0_VAL_ADDRESS 983040 /* 0xf0000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_REG_IDX_0_VAL_SIZE 40960 /* 0xa000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_IRQ_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_PARTITION_ID 5

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_P_label "image-scratch"
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_P_label_STRING_TOKEN image_scratch
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_P_label_STRING_UPPER_TOKEN IMAGE_SCRATCH
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, label, 6) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, label, 7) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, label, 8) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, label, 9) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, label, 10) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, label, 11) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, label, 12)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, label, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, label, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, label, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, label, 12, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_P_read_only 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_P_reg {983040 /* 0xf0000 */, 40960 /* 0xa000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_P_reg_IDX_0 983040
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_P_reg_IDX_1 40960
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@fa000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_PATH "/soc/peripheral@50000000/flash-controller@39000/flash@0/partitions/partition@fa000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_FULL_NAME "partition@fa000"

/* Node parent (/soc/peripheral@50000000/flash-controller@39000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_PARENT DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_ORD 77

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_REQUIRES_ORDS \
	70, /* /soc/peripheral@50000000/flash-controller@39000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_EXISTS 1
#define DT_N_NODELABEL_storage_partition DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_REG_IDX_0_VAL_ADDRESS 1024000 /* 0xfa000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_REG_IDX_0_VAL_SIZE 24576 /* 0x6000 */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_IRQ_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_PARTITION_ID 6

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_P_label "storage"
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_P_label_STRING_TOKEN storage
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_P_label_STRING_UPPER_TOKEN STORAGE
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000, label, 6)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_P_read_only 0
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_P_reg {1024000 /* 0xfa000 */, 24576 /* 0x6000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_P_reg_IDX_0 1024000
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_P_reg_IDX_1 24576
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/i2c@a000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_i2c_a000
 *
 * Binding (compatible = nordic,nrf-twim):
 *   $ZEPHYR_BASE\dts\bindings\i2c\nordic,nrf-twim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_PATH "/soc/peripheral@50000000/i2c@a000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_FULL_NAME "i2c@a000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38) 
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_ORD 78

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_SUPPORTS_ORDS \
	79, /* /soc/peripheral@50000000/i2c@a000/bh1749@38 */ \
	80, /* /soc/peripheral@50000000/i2c@a000/bme680@76 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_twim DT_N_S_soc_S_peripheral_50000000_S_i2c_a000
#define DT_N_NODELABEL_i2c2         DT_N_S_soc_S_peripheral_50000000_S_i2c_a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_REG_IDX_0_VAL_ADDRESS 1342218240 /* 0x5000a000 */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_IRQ_IDX_0_VAL_irq 10
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_COMPAT_MATCHES_nordic_nrf_twim 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_zephyr_concat_buf_size 16
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_zephyr_concat_buf_size_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_zephyr_flash_buf_max_size 16
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_zephyr_flash_buf_max_size_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_reg {40960 /* 0xa000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_reg_IDX_0 40960
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_interrupts {10 /* 0xa */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_interrupts_IDX_0 10
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_sda_pin 11
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_sda_pin_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_scl_pin 12
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_scl_pin_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_clock_frequency 400000
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_label "I2C_2"
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_label_STRING_TOKEN I2C_2
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_label_STRING_UPPER_TOKEN I2C_2
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, label, 4)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_compatible {"nordic,nrf-twim"}
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_compatible_IDX_0 "nordic,nrf-twim"
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/i2c@a000/bh1749@38
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38
 *
 * Binding (compatible = rohm,bh1749):
 *   C:/ncs/nrf/dts/bindings\sensor\rohm,bh1749.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_PATH "/soc/peripheral@50000000/i2c@a000/bh1749@38"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_FULL_NAME "bh1749@38"

/* Node parent (/soc/peripheral@50000000/i2c@a000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_PARENT DT_N_S_soc_S_peripheral_50000000_S_i2c_a000
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_ORD 79

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_REQUIRES_ORDS \
	5, /* /soc/peripheral@50000000/gpio@842500 */ \
	78, /* /soc/peripheral@50000000/i2c@a000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_EXISTS 1
#define DT_N_INST_0_rohm_bh1749 DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38

/* Bus info (controller: '/soc/peripheral@50000000/i2c@a000', type: 'i2c') */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_BUS_i2c 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_BUS DT_N_S_soc_S_peripheral_50000000_S_i2c_a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_REG_IDX_0_VAL_ADDRESS 56 /* 0x38 */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_IRQ_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_COMPAT_MATCHES_rohm_bh1749 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_int_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_int_gpios_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_gpio_842500
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_int_gpios_IDX_0_VAL_pin 27
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_int_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_int_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_int_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_int_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38, int_gpios, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_int_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38, int_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_int_gpios_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_int_gpios_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_reg {56 /* 0x38 */}
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_reg_IDX_0 56
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38, reg, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_label "BH1749"
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_label_STRING_TOKEN BH1749
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_label_STRING_UPPER_TOKEN BH1749
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38, label, 5)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_compatible {"rohm,bh1749"}
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_compatible_IDX_0 "rohm,bh1749"
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/i2c@a000/bme680@76
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76
 *
 * Binding (compatible = bosch,bme680):
 *   $ZEPHYR_BASE\dts\bindings\sensor\bosch,bme680-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_PATH "/soc/peripheral@50000000/i2c@a000/bme680@76"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_FULL_NAME "bme680@76"

/* Node parent (/soc/peripheral@50000000/i2c@a000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_PARENT DT_N_S_soc_S_peripheral_50000000_S_i2c_a000
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_ORD 80

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_REQUIRES_ORDS \
	78, /* /soc/peripheral@50000000/i2c@a000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_EXISTS 1
#define DT_N_INST_0_bosch_bme680 DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76

/* Bus info (controller: '/soc/peripheral@50000000/i2c@a000', type: 'i2c') */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_BUS_i2c 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_BUS DT_N_S_soc_S_peripheral_50000000_S_i2c_a000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_REG_IDX_0_VAL_ADDRESS 118 /* 0x76 */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_IRQ_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_COMPAT_MATCHES_bosch_bme680 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_P_reg {118 /* 0x76 */}
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_P_reg_IDX_0 118
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76, reg, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_P_label "BME680"
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_P_label_STRING_TOKEN BME680
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_P_label_STRING_UPPER_TOKEN BME680
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76, label, 5)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_P_compatible {"bosch,bme680"}
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_P_compatible_IDX_0 "bosch,bme680"
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/spi@b000
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_spi_b000
 *
 * Binding (compatible = nordic,nrf-spim):
 *   $ZEPHYR_BASE\dts\bindings\spi\nordic,nrf-spim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_PATH "/soc/peripheral@50000000/spi@b000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_FULL_NAME "spi@b000"

/* Node parent (/soc/peripheral@50000000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_PARENT DT_N_S_soc_S_peripheral_50000000
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1) 
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_ORD 81

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_REQUIRES_ORDS \
	4, /* /soc/peripheral@50000000 */ \
	5, /* /soc/peripheral@50000000/gpio@842500 */ \
	25, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_SUPPORTS_ORDS \
	82, /* /soc/peripheral@50000000/spi@b000/adxl362@0 */ \
	83, /* /soc/peripheral@50000000/spi@b000/adxl372@1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_EXISTS 1
#define DT_N_INST_0_nordic_nrf_spim DT_N_S_soc_S_peripheral_50000000_S_spi_b000
#define DT_N_NODELABEL_spi3         DT_N_S_soc_S_peripheral_50000000_S_spi_b000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_REG_IDX_0_VAL_ADDRESS 1342222336 /* 0x5000b000 */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_IRQ_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_IRQ_IDX_0_VAL_priority 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_COMPAT_MATCHES_nordic_nrf_spim 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_miso_pull_up 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_miso_pull_up_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_miso_pull_down 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_miso_pull_down_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_anomaly_58_workaround 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_anomaly_58_workaround_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_reg {45056 /* 0xb000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_reg_IDX_0 45056
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, reg, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, reg, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_interrupts {11 /* 0xb */, 1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_interrupts_IDX_1 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, interrupts, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, interrupts, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_sck_pin 3
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_sck_pin_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_mosi_pin 4
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_mosi_pin_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_miso_pin 5
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_miso_pin_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_label "SPI_3"
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_label_STRING_TOKEN SPI_3
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_label_STRING_UPPER_TOKEN SPI_3
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, label, 4)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_cs_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_cs_gpios_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_gpio_842500
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_cs_gpios_IDX_0_VAL_pin 8
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_cs_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_cs_gpios_IDX_0_VAL_flags 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_cs_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_cs_gpios_IDX_1_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_cs_gpios_IDX_1_PH DT_N_S_soc_S_peripheral_50000000_S_gpio_842500
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_cs_gpios_IDX_1_VAL_pin 7
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_cs_gpios_IDX_1_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_cs_gpios_IDX_1_VAL_flags 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_cs_gpios_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_cs_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, cs_gpios, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, cs_gpios, 1)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_cs_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, cs_gpios, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, cs_gpios, 1, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_cs_gpios_LEN 2
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_cs_gpios_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_status "okay"
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, status, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, status, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, status, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, status, 3)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_status_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_compatible {"nordic,nrf-spim"}
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_compatible_IDX_0 "nordic,nrf-spim"
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/spi@b000/adxl362@0
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0
 *
 * Binding (compatible = adi,adxl362):
 *   $ZEPHYR_BASE\dts\bindings\sensor\adi,adxl362.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_PATH "/soc/peripheral@50000000/spi@b000/adxl362@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_FULL_NAME "adxl362@0"

/* Node parent (/soc/peripheral@50000000/spi@b000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_PARENT DT_N_S_soc_S_peripheral_50000000_S_spi_b000
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_ORD 82

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_REQUIRES_ORDS \
	5, /* /soc/peripheral@50000000/gpio@842500 */ \
	81, /* /soc/peripheral@50000000/spi@b000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_EXISTS 1
#define DT_N_INST_0_adi_adxl362 DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0

/* Bus info (controller: '/soc/peripheral@50000000/spi@b000', type: 'spi') */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_BUS_spi 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_BUS DT_N_S_soc_S_peripheral_50000000_S_spi_b000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_IRQ_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_COMPAT_MATCHES_adi_adxl362 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_int1_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_int1_gpios_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_gpio_842500
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_int1_gpios_IDX_0_VAL_pin 9
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_int1_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_int1_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_int1_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_int1_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0, int1_gpios, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_int1_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0, int1_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_int1_gpios_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_int1_gpios_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_reg {0 /* 0x0 */}
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0, reg, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_spi_max_frequency 8000000
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_label "ADXL362"
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_label_STRING_TOKEN ADXL362
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_label_STRING_UPPER_TOKEN ADXL362
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0, label, 6)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_frame_format 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_frame_format_ENUM_IDX 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_frame_format_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_compatible {"adi,adxl362"}
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_compatible_IDX_0 "adi,adxl362"
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/peripheral@50000000/spi@b000/adxl372@1
 *
 * Node identifier: DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1
 *
 * Binding (compatible = adi,adxl372):
 *   $ZEPHYR_BASE\dts\bindings\sensor\adi,adxl372-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_PATH "/soc/peripheral@50000000/spi@b000/adxl372@1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_FULL_NAME "adxl372@1"

/* Node parent (/soc/peripheral@50000000/spi@b000) identifier: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_PARENT DT_N_S_soc_S_peripheral_50000000_S_spi_b000
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_ORD 83

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_REQUIRES_ORDS \
	5, /* /soc/peripheral@50000000/gpio@842500 */ \
	81, /* /soc/peripheral@50000000/spi@b000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_EXISTS 1
#define DT_N_INST_0_adi_adxl372 DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1

/* Bus info (controller: '/soc/peripheral@50000000/spi@b000', type: 'spi') */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_BUS_spi 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_BUS DT_N_S_soc_S_peripheral_50000000_S_spi_b000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_REG_NUM 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_REG_IDX_0_VAL_ADDRESS 1 /* 0x1 */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_IRQ_NUM 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_COMPAT_MATCHES_adi_adxl372 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_int1_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_int1_gpios_IDX_0_PH DT_N_S_soc_S_peripheral_50000000_S_gpio_842500
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_int1_gpios_IDX_0_VAL_pin 6
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_int1_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_int1_gpios_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_int1_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_int1_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1, int1_gpios, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_int1_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1, int1_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_int1_gpios_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_int1_gpios_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_reg {1 /* 0x1 */}
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_reg_IDX_0 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1, reg, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_reg_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_spi_max_frequency 8000000
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_label "ADXL372"
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_label_STRING_TOKEN ADXL372
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_label_STRING_UPPER_TOKEN ADXL372
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1, label, 0) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1, label, 1) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1, label, 2) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1, label, 3) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1, label, 4) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1, label, 5) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1, label, 6)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_label_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_frame_format 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_frame_format_ENUM_IDX 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_frame_format_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_compatible {"adi,adxl372"}
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_compatible_IDX_0 "adi,adxl372"
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1, compatible, 0)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_compatible_LEN 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_compatible_EXISTS 1
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_wakeup_source 0
#define DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1_P_wakeup_source_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_entropy                 DT_N_S_soc_S_crypto_50840000
#define DT_CHOSEN_zephyr_entropy_EXISTS          1
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_peripheral_50000000_S_uart_8000
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zephyr_shell_uart              DT_N_S_soc_S_peripheral_50000000_S_uart_8000
#define DT_CHOSEN_zephyr_shell_uart_EXISTS       1
#define DT_CHOSEN_zephyr_uart_mcumgr             DT_N_S_soc_S_peripheral_50000000_S_uart_8000
#define DT_CHOSEN_zephyr_uart_mcumgr_EXISTS      1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_soc_S_memory_20000000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0
#define DT_CHOSEN_zephyr_flash_EXISTS            1
#define DT_CHOSEN_zephyr_code_partition          DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0
#define DT_CHOSEN_zephyr_code_partition_EXISTS   1
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_0
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_0 DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_10000
#define DT_COMPAT_fixed_partitions_LABEL_image_0_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_0_nonsecure DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_40000
#define DT_COMPAT_fixed_partitions_LABEL_image_0_nonsecure_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_1 DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_80000
#define DT_COMPAT_fixed_partitions_LABEL_image_1_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_1_nonsecure DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_b0000
#define DT_COMPAT_fixed_partitions_LABEL_image_1_nonsecure_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_scratch DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_f0000
#define DT_COMPAT_fixed_partitions_LABEL_image_scratch_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_storage DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions_S_partition_fa000
#define DT_COMPAT_fixed_partitions_LABEL_storage_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_nordic_thingy91_nrf9160 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf9160_sica 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf9160 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf91 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v8m_nvic 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf91_flash_controller 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_saadc 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_dppic 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_egu 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_kmu 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_regulators 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_vmc 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_uarte 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_twim 1
#define DT_COMPAT_HAS_OKAY_bosch_bme680 1
#define DT_COMPAT_HAS_OKAY_rohm_bh1749 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_spim 1
#define DT_COMPAT_HAS_OKAY_adi_adxl362 1
#define DT_COMPAT_HAS_OKAY_adi_adxl372 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_pwm 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_gpio 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_rtc 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_clock 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_power 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_watchdog 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_timer 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_cc310 1
#define DT_COMPAT_HAS_OKAY_arm_cryptocell_310 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_gpiote 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_spu 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_ficr 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_uicr 1
#define DT_COMPAT_HAS_OKAY_nordic_nrf_pinctrl 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m33f 1
#define DT_COMPAT_HAS_OKAY_arm_armv8m_mpu 1
#define DT_COMPAT_HAS_OKAY_gpio_keys 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_nordic_thingy91_nrf52840_reset 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_nordic_thingy91_nrf9160_NUM_OKAY 1
#define DT_N_INST_nordic_nrf9160_sica_NUM_OKAY 1
#define DT_N_INST_nordic_nrf9160_NUM_OKAY 1
#define DT_N_INST_nordic_nrf91_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v8m_nvic_NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_nordic_nrf91_flash_controller_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_saadc_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_dppic_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_egu_NUM_OKAY 6
#define DT_N_INST_nordic_nrf_kmu_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_regulators_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_vmc_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_uarte_NUM_OKAY 2
#define DT_N_INST_nordic_nrf_twim_NUM_OKAY 1
#define DT_N_INST_bosch_bme680_NUM_OKAY 1
#define DT_N_INST_rohm_bh1749_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_spim_NUM_OKAY 1
#define DT_N_INST_adi_adxl362_NUM_OKAY 1
#define DT_N_INST_adi_adxl372_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_pwm_NUM_OKAY 4
#define DT_N_INST_nordic_nrf_gpio_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_rtc_NUM_OKAY 2
#define DT_N_INST_nordic_nrf_clock_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_power_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_watchdog_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_timer_NUM_OKAY 3
#define DT_N_INST_nordic_nrf_cc310_NUM_OKAY 1
#define DT_N_INST_arm_cryptocell_310_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_gpiote_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_spu_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_ficr_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_uicr_NUM_OKAY 1
#define DT_N_INST_nordic_nrf_pinctrl_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m33f_NUM_OKAY 1
#define DT_N_INST_arm_armv8m_mpu_NUM_OKAY 1
#define DT_N_INST_gpio_keys_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_nordic_thingy91_nrf52840_reset_NUM_OKAY 1
#define DT_FOREACH_OKAY_nordic_thingy91_nrf9160(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_nordic_thingy91_nrf9160(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_thingy91_nrf9160(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_thingy91_nrf9160(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf9160_sica(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf9160_sica(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf9160_sica(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf9160_sica(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf9160(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf9160(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf9160(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf9160(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf91(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf91(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf91(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf91(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v8m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v8m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v8m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v8m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_soc_S_memory_20000000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf91_flash_controller(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf91_flash_controller(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf91_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf91_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_partitions(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions)
#define DT_FOREACH_OKAY_VARGS_fixed_partitions(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_flash_controller_39000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_partitions(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_saadc(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_saadc(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_adc_e000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_saadc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_saadc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_dppic(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_dppic(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_dppic_17000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_dppic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_dppic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_egu(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1b000) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1c000) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1d000) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1e000) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1f000) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_20000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_egu(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1b000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1c000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1d000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1e000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_1f000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_egu_20000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_egu(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_egu(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_kmu(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_kmu_39000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_kmu(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_kmu_39000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_kmu(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_kmu(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_regulators(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_regulator_4000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_regulators(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_regulator_4000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_regulators(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_regulators(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_vmc(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_vmc(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_vmc_3a000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_vmc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_vmc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_uarte(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_uarte(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_8000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_uart_9000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_uarte(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_uarte(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_twim(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_twim(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_twim(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_twim(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_bosch_bme680(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76)
#define DT_FOREACH_OKAY_VARGS_bosch_bme680(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bme680_76, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_bosch_bme680(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_bosch_bme680(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_rohm_bh1749(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38)
#define DT_FOREACH_OKAY_VARGS_rohm_bh1749(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_i2c_a000_S_bh1749_38, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_rohm_bh1749(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_rohm_bh1749(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_spim(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_spim(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_spim(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_spim(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_adi_adxl362(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0)
#define DT_FOREACH_OKAY_VARGS_adi_adxl362(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl362_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_adi_adxl362(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_adi_adxl362(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_adi_adxl372(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1)
#define DT_FOREACH_OKAY_VARGS_adi_adxl372(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_spi_b000_S_adxl372_1, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_adi_adxl372(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_adi_adxl372(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_pwm(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_pwm(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_21000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_22000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_23000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_pwm_24000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_pwm(fn) fn(0) fn(1) fn(2) fn(3)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_pwm(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_gpio(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_gpio(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_gpio_842500, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_gpio(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_gpio(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_rtc(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_rtc(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_14000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_rtc_15000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_rtc(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_rtc(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_clock(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_clock(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_clock_5000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_power(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_power_5000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_power(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_power_5000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_power(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_power(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_watchdog(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_watchdog(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_watchdog_18000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_watchdog(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_watchdog(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_timer(fn) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_timer(fn, ...) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_f000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_10000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_50000000_S_timer_11000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_timer(fn) fn(0) fn(1) fn(2)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_timer(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_cc310(fn) fn(DT_N_S_soc_S_crypto_50840000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_cc310(fn, ...) fn(DT_N_S_soc_S_crypto_50840000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_cc310(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_cc310(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cryptocell_310(fn) fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000)
#define DT_FOREACH_OKAY_VARGS_arm_cryptocell_310(fn, ...) fn(DT_N_S_soc_S_crypto_50840000_S_crypto_50841000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cryptocell_310(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cryptocell_310(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_gpiote(fn) fn(DT_N_S_soc_S_gpiote_5000d000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_gpiote(fn, ...) fn(DT_N_S_soc_S_gpiote_5000d000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_gpiote(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_gpiote(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_spu(fn) fn(DT_N_S_soc_S_spu_50003000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_spu(fn, ...) fn(DT_N_S_soc_S_spu_50003000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_spu(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_spu(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_ficr(fn) fn(DT_N_S_soc_S_ficr_ff0000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_ficr(fn, ...) fn(DT_N_S_soc_S_ficr_ff0000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_ficr(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_ficr(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_uicr(fn) fn(DT_N_S_soc_S_uicr_ff8000)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_uicr(fn, ...) fn(DT_N_S_soc_S_uicr_ff8000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_uicr(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_uicr(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_nrf_pinctrl(fn) fn(DT_N_S_pin_controller)
#define DT_FOREACH_OKAY_VARGS_nordic_nrf_pinctrl(fn, ...) fn(DT_N_S_pin_controller, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_nrf_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_nrf_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m33f(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m33f(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m33f(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m33f(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv8m_mpu(fn) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90)
#define DT_FOREACH_OKAY_VARGS_arm_armv8m_mpu(fn, ...) fn(DT_N_S_cpus_S_cpu_0_S_mpu_e000ed90, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv8m_mpu(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv8m_mpu(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_keys(fn) fn(DT_N_S_buttons)
#define DT_FOREACH_OKAY_VARGS_gpio_keys(fn, ...) fn(DT_N_S_buttons, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_keys(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_keys(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_nordic_thingy91_nrf52840_reset(fn) fn(DT_N_S_gpio_reset)
#define DT_FOREACH_OKAY_VARGS_nordic_thingy91_nrf52840_reset(fn, ...) fn(DT_N_S_gpio_reset, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_nordic_thingy91_nrf52840_reset(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_nordic_thingy91_nrf52840_reset(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_bosch_bme680_BUS_i2c 1
#define DT_COMPAT_rohm_bh1749_BUS_i2c 1
#define DT_COMPAT_adi_adxl362_BUS_spi 1
#define DT_COMPAT_adi_adxl372_BUS_spi 1
